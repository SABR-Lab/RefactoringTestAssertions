[
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/contrib/ambari-log4j/src/test/java/org/apache/ambari/TestJobHistoryParsing.java",
  "refactorings": "# Refactorings in commit ff096b56b547df4a43f57045d1e501ba4976adb3\n\n- Add Parameter\thostsMap : HostsMap in method public ActionManager(schedulerSleepTime long, actionTimeout long, aq ActionQueue, fsm Clusters, db ActionDBAccessor, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionManager\n\n- Add Parameter\thostsMap : HostsMap in method public ActionScheduler(sleepTimeMilliSec long, actionTimeoutMilliSec long, db ActionDBAccessor, actionQueue ActionQueue, fsmObject Clusters, maxAttempts int, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionScheduler\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Add Method Annotation\t@Override in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.jdbc.JDBCProviderModule\n\n- Extract Variable\tmappedHost : String in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Add Parameter\thostsMap : HostsMap in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Extract Method\tprivate getSanitizedWorkflow(workflowContext WorkflowContext, existingWorkflowContext WorkflowContext) : WorkflowContext extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Method\tprivate getWorkflowString(sanitizedWC WorkflowContext) : String extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Variable\tresultingWorkflowId : String in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Extract Variable\tresultingAdjacencies : Map\u003cString,String[]\u003e in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Pull Up Method\tpublic getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n... and 22 more refactorings in this commit\n",
  "assertion_lines": [],
  "annotations": "No Annotations",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "test1[]",
  "test_body": "{\n    java.util.Map\u003cjava.lang.String, java.lang.String[]\u003e adj \u003d new java.util.HashMap\u003cjava.lang.String, java.lang.String[]\u003e();\n    adj.put(\"10\", new java.lang.String[]{ \"20\", \"30\" });\n    adj.put(\"20\", new java.lang.String[]{ \"30\" });\n    adj.put(\"30\", new java.lang.String[]{  });\n    test(\"id_0-1\", \"something.name\", \"10\", adj);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/contrib/ambari-log4j/src/test/java/org/apache/ambari/TestJobHistoryParsing.java",
  "refactorings": "# Refactorings in commit ff096b56b547df4a43f57045d1e501ba4976adb3\n\n- Add Parameter\thostsMap : HostsMap in method public ActionManager(schedulerSleepTime long, actionTimeout long, aq ActionQueue, fsm Clusters, db ActionDBAccessor, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionManager\n\n- Add Parameter\thostsMap : HostsMap in method public ActionScheduler(sleepTimeMilliSec long, actionTimeoutMilliSec long, db ActionDBAccessor, actionQueue ActionQueue, fsmObject Clusters, maxAttempts int, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionScheduler\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Add Method Annotation\t@Override in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.jdbc.JDBCProviderModule\n\n- Extract Variable\tmappedHost : String in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Add Parameter\thostsMap : HostsMap in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Extract Method\tprivate getSanitizedWorkflow(workflowContext WorkflowContext, existingWorkflowContext WorkflowContext) : WorkflowContext extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Method\tprivate getWorkflowString(sanitizedWC WorkflowContext) : String extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Variable\tresultingWorkflowId : String in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Extract Variable\tresultingAdjacencies : Map\u003cString,String[]\u003e in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Pull Up Method\tpublic getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n... and 22 more refactorings in this commit\n",
  "assertion_lines": [],
  "annotations": "No Annotations",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "test2[]",
  "test_body": "{\n    java.util.Map\u003cjava.lang.String, java.lang.String[]\u003e adj \u003d new java.util.HashMap\u003cjava.lang.String, java.lang.String[]\u003e();\n    adj.put(\"1\u003d0\", new java.lang.String[]{ \"2 0\", \"3\\\"0.\" });\n    adj.put(\"2 0\", new java.lang.String[]{ \"3\\\"0.\" });\n    adj.put(\"3\\\"0.\", new java.lang.String[]{  });\n    test(\"id_\u003d 0-1\", \"something.name\", \"1\u003d0\", adj);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/contrib/ambari-log4j/src/test/java/org/apache/ambari/TestJobHistoryParsing.java",
  "refactorings": "# Refactorings in commit ff096b56b547df4a43f57045d1e501ba4976adb3\n\n- Add Parameter\thostsMap : HostsMap in method public ActionManager(schedulerSleepTime long, actionTimeout long, aq ActionQueue, fsm Clusters, db ActionDBAccessor, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionManager\n\n- Add Parameter\thostsMap : HostsMap in method public ActionScheduler(sleepTimeMilliSec long, actionTimeoutMilliSec long, db ActionDBAccessor, actionQueue ActionQueue, fsmObject Clusters, maxAttempts int, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionScheduler\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Add Method Annotation\t@Override in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.jdbc.JDBCProviderModule\n\n- Extract Variable\tmappedHost : String in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Add Parameter\thostsMap : HostsMap in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Extract Method\tprivate getSanitizedWorkflow(workflowContext WorkflowContext, existingWorkflowContext WorkflowContext) : WorkflowContext extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Method\tprivate getWorkflowString(sanitizedWC WorkflowContext) : String extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Variable\tresultingWorkflowId : String in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Extract Variable\tresultingAdjacencies : Map\u003cString,String[]\u003e in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Pull Up Method\tpublic getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n... and 22 more refactorings in this commit\n",
  "assertion_lines": [],
  "annotations": "No Annotations",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "test3[]",
  "test_body": "{\n    java.lang.String s \u003d \"`~!@#$%^\u0026*()-_\u003d+[]{}|,.\u003c\u003e/?;:\u0027\\\"\";\n    test(s, s, s, new java.util.HashMap\u003cjava.lang.String, java.lang.String[]\u003e());\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/contrib/ambari-log4j/src/test/java/org/apache/ambari/TestJobHistoryParsing.java",
  "refactorings": "# Refactorings in commit ff096b56b547df4a43f57045d1e501ba4976adb3\n\n- Add Parameter\thostsMap : HostsMap in method public ActionManager(schedulerSleepTime long, actionTimeout long, aq ActionQueue, fsm Clusters, db ActionDBAccessor, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionManager\n\n- Add Parameter\thostsMap : HostsMap in method public ActionScheduler(sleepTimeMilliSec long, actionTimeoutMilliSec long, db ActionDBAccessor, actionQueue ActionQueue, fsmObject Clusters, maxAttempts int, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionScheduler\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Add Method Annotation\t@Override in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.jdbc.JDBCProviderModule\n\n- Extract Variable\tmappedHost : String in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Add Parameter\thostsMap : HostsMap in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Extract Method\tprivate getSanitizedWorkflow(workflowContext WorkflowContext, existingWorkflowContext WorkflowContext) : WorkflowContext extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Method\tprivate getWorkflowString(sanitizedWC WorkflowContext) : String extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Variable\tresultingWorkflowId : String in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Extract Variable\tresultingAdjacencies : Map\u003cString,String[]\u003e in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Pull Up Method\tpublic getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n... and 22 more refactorings in this commit\n",
  "assertion_lines": [],
  "annotations": "No Annotations",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "test4[]",
  "test_body": "{\n    java.util.Map\u003cjava.lang.String, java.lang.String[]\u003e adj \u003d new java.util.HashMap\u003cjava.lang.String, java.lang.String[]\u003e();\n    adj.put(\"X\", new java.lang.String[]{  });\n    test(\"\", \"jobName\", \"X\", adj);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/contrib/ambari-log4j/src/test/java/org/apache/ambari/TestJobHistoryParsing.java",
  "refactorings": "# Refactorings in commit ff096b56b547df4a43f57045d1e501ba4976adb3\n\n- Add Parameter\thostsMap : HostsMap in method public ActionManager(schedulerSleepTime long, actionTimeout long, aq ActionQueue, fsm Clusters, db ActionDBAccessor, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionManager\n\n- Add Parameter\thostsMap : HostsMap in method public ActionScheduler(sleepTimeMilliSec long, actionTimeoutMilliSec long, db ActionDBAccessor, actionQueue ActionQueue, fsmObject Clusters, maxAttempts int, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionScheduler\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Add Method Annotation\t@Override in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.jdbc.JDBCProviderModule\n\n- Extract Variable\tmappedHost : String in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Add Parameter\thostsMap : HostsMap in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Extract Method\tprivate getSanitizedWorkflow(workflowContext WorkflowContext, existingWorkflowContext WorkflowContext) : WorkflowContext extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Method\tprivate getWorkflowString(sanitizedWC WorkflowContext) : String extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Variable\tresultingWorkflowId : String in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Extract Variable\tresultingAdjacencies : Map\u003cString,String[]\u003e in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Pull Up Method\tpublic getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n... and 22 more refactorings in this commit\n",
  "assertion_lines": [
    93,
    94,
    95,
    102,
    103
  ],
  "annotations": "No Annotations",
  "assertion_amount": 5,
  "assertion_type": "junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowId\", resultingWorkflowId, context.getWorkflowId()), junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowName\", workflowName, context.getWorkflowName()), junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowNodeName\", workflowNodeName, context.getWorkflowEntityName()), junit.framework.Assert.assertEquals(\"Got incorrect number of adjacencies\", resultingAdjacencies.size(), context.getWorkflowDag().getEntries().size()), for (org.apache.ambari.eventdb.model.WorkflowDag.WorkflowDagEntry entry : context.getWorkflowDag().getEntries()) {\n    java.lang.String[] sTargets \u003d resultingAdjacencies.get(entry.getSource());\n    junit.framework.Assert.assertNotNull(\"No original targets for \" + entry.getSource(), sTargets);\n    java.util.List\u003cjava.lang.String\u003e dTargets \u003d entry.getTargets();\n    junit.framework.Assert.assertEquals(\"Got incorrect number of targets for \" + entry.getSource(), sTargets.length, dTargets.size());\n    for (int i \u003d 0; i \u003c sTargets.length; i++) {\n        junit.framework.Assert.assertEquals(\"Got incorrect target for \" + entry.getSource(), sTargets[i], dTargets.get(i));\n    }\n}",
  "test_method_name": "test[java.lang.String workflowId, java.lang.String workflowName, java.lang.String workflowNodeName, java.util.Map\u003cjava.lang.String, java.lang.String[]\u003e adjacencies]",
  "test_body": "{\n    org.apache.hadoop.conf.Configuration conf \u003d new org.apache.hadoop.conf.Configuration();\n    org.apache.ambari.TestJobHistoryParsing.setProperties(conf, workflowId, workflowName, workflowNodeName, adjacencies);\n    java.lang.String log \u003d org.apache.ambari.TestJobHistoryParsing.log(\"JOB\", new java.lang.String[]{ org.apache.ambari.TestJobHistoryParsing.ID, org.apache.ambari.TestJobHistoryParsing.NAME, org.apache.ambari.TestJobHistoryParsing.NODE, org.apache.ambari.TestJobHistoryParsing.ADJ }, new java.lang.String[]{ conf.get(org.apache.ambari.TestJobHistoryParsing.ID_PROP), conf.get(org.apache.ambari.TestJobHistoryParsing.NAME_PROP), conf.get(org.apache.ambari.TestJobHistoryParsing.NODE_PROP), org.apache.hadoop.mapred.JobHistory.JobInfo.getWorkflowAdjacencies(conf) });\n    org.apache.ambari.TestJobHistoryParsing.ParsedLine line \u003d new org.apache.ambari.TestJobHistoryParsing.ParsedLine(log);\n    org.apache.hadoop.mapreduce.JobID jobid \u003d new org.apache.hadoop.mapreduce.JobID(\"id\", 1);\n    org.apache.hadoop.tools.rumen.JobSubmittedEvent event \u003d new org.apache.hadoop.tools.rumen.JobSubmittedEvent(jobid, workflowName, \"\", 0L, \"\", null, \"\", line.get(org.apache.ambari.TestJobHistoryParsing.ID), line.get(org.apache.ambari.TestJobHistoryParsing.NAME), line.get(org.apache.ambari.TestJobHistoryParsing.NODE), line.get(org.apache.ambari.TestJobHistoryParsing.ADJ));\n    org.apache.ambari.eventdb.model.WorkflowContext context \u003d org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.buildWorkflowContext(event);\n    java.lang.String resultingWorkflowId \u003d workflowId;\n    if (workflowId.isEmpty()) {\n        resultingWorkflowId \u003d jobid.toString().replace(\"job_\", \"mr_\");\n    }\n    junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowId\", resultingWorkflowId, context.getWorkflowId());\n    junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowName\", workflowName, context.getWorkflowName());\n    junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowNodeName\", workflowNodeName, context.getWorkflowEntityName());\n    java.util.Map\u003cjava.lang.String, java.lang.String[]\u003e resultingAdjacencies \u003d adjacencies;\n    if (resultingAdjacencies.size() \u003d\u003d 0) {\n        resultingAdjacencies \u003d new java.util.HashMap\u003cjava.lang.String, java.lang.String[]\u003e();\n        resultingAdjacencies.put(workflowNodeName, new java.lang.String[]{  });\n    }\n    junit.framework.Assert.assertEquals(\"Got incorrect number of adjacencies\", resultingAdjacencies.size(), context.getWorkflowDag().getEntries().size());\n    for (org.apache.ambari.eventdb.model.WorkflowDag.WorkflowDagEntry entry : context.getWorkflowDag().getEntries()) {\n        java.lang.String[] sTargets \u003d resultingAdjacencies.get(entry.getSource());\n        junit.framework.Assert.assertNotNull(\"No original targets for \" + entry.getSource(), sTargets);\n        java.util.List\u003cjava.lang.String\u003e dTargets \u003d entry.getTargets();\n        junit.framework.Assert.assertEquals(\"Got incorrect number of targets for \" + entry.getSource(), sTargets.length, dTargets.size());\n        for (int i \u003d 0; i \u003c sTargets.length; i++) {\n            junit.framework.Assert.assertEquals(\"Got incorrect target for \" + entry.getSource(), sTargets[i], dTargets.get(i));\n        }\n    }\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/contrib/ambari-log4j/src/test/java/org/apache/ambari/TestMapReduceJobHistoryUpdater.java",
  "refactorings": "# Refactorings in commit ff096b56b547df4a43f57045d1e501ba4976adb3\n\n- Add Parameter\thostsMap : HostsMap in method public ActionManager(schedulerSleepTime long, actionTimeout long, aq ActionQueue, fsm Clusters, db ActionDBAccessor, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionManager\n\n- Add Parameter\thostsMap : HostsMap in method public ActionScheduler(sleepTimeMilliSec long, actionTimeoutMilliSec long, db ActionDBAccessor, actionQueue ActionQueue, fsmObject Clusters, maxAttempts int, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionScheduler\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Add Method Annotation\t@Override in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.jdbc.JDBCProviderModule\n\n- Extract Variable\tmappedHost : String in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Add Parameter\thostsMap : HostsMap in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Extract Method\tprivate getSanitizedWorkflow(workflowContext WorkflowContext, existingWorkflowContext WorkflowContext) : WorkflowContext extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Method\tprivate getWorkflowString(sanitizedWC WorkflowContext) : String extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Variable\tresultingWorkflowId : String in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Extract Variable\tresultingAdjacencies : Map\u003cString,String[]\u003e in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Pull Up Method\tpublic getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n... and 22 more refactorings in this commit\n",
  "assertion_lines": [
    54,
    55,
    58,
    59,
    60,
    61,
    64,
    65,
    66,
    67,
    70,
    71,
    72
  ],
  "annotations": "No Annotations",
  "assertion_amount": 13,
  "assertion_type": "org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(mergedDag, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(one, two)), org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(mergedDag, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(two, one)), org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag1, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(three, one)), org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag1, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(one, three)), org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag2, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(three, two)), org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag2, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(two, three)), org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag1, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(new org.apache.ambari.eventdb.model.WorkflowContext(), one)), org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag1, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(one, new org.apache.ambari.eventdb.model.WorkflowContext())), org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag2, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(new org.apache.ambari.eventdb.model.WorkflowContext(), two)), org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag2, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(two, new org.apache.ambari.eventdb.model.WorkflowContext())), org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag1, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(one, one)), org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag2, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(two, two)), org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(emptyDag, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(three, three))",
  "test_method_name": "testDagMerging[]",
  "test_body": "{\n    org.apache.ambari.eventdb.model.WorkflowDag dag1 \u003d new org.apache.ambari.eventdb.model.WorkflowDag();\n    dag1.addEntry(org.apache.ambari.TestMapReduceJobHistoryUpdater.getEntry(\"a\", \"b\", \"c\"));\n    dag1.addEntry(org.apache.ambari.TestMapReduceJobHistoryUpdater.getEntry(\"b\", \"d\"));\n    org.apache.ambari.eventdb.model.WorkflowContext one \u003d new org.apache.ambari.eventdb.model.WorkflowContext();\n    one.setWorkflowDag(dag1);\n    org.apache.ambari.eventdb.model.WorkflowDag dag2 \u003d new org.apache.ambari.eventdb.model.WorkflowDag();\n    dag2.addEntry(org.apache.ambari.TestMapReduceJobHistoryUpdater.getEntry(\"a\", \"d\"));\n    dag2.addEntry(org.apache.ambari.TestMapReduceJobHistoryUpdater.getEntry(\"c\", \"e\"));\n    org.apache.ambari.eventdb.model.WorkflowContext two \u003d new org.apache.ambari.eventdb.model.WorkflowContext();\n    two.setWorkflowDag(dag2);\n    org.apache.ambari.eventdb.model.WorkflowDag emptyDag \u003d new org.apache.ambari.eventdb.model.WorkflowDag();\n    org.apache.ambari.eventdb.model.WorkflowContext three \u003d new org.apache.ambari.eventdb.model.WorkflowContext();\n    three.setWorkflowDag(emptyDag);\n    org.apache.ambari.eventdb.model.WorkflowDag mergedDag \u003d new org.apache.ambari.eventdb.model.WorkflowDag();\n    mergedDag.addEntry(org.apache.ambari.TestMapReduceJobHistoryUpdater.getEntry(\"a\", \"b\", \"c\", \"d\"));\n    mergedDag.addEntry(org.apache.ambari.TestMapReduceJobHistoryUpdater.getEntry(\"b\", \"d\"));\n    mergedDag.addEntry(org.apache.ambari.TestMapReduceJobHistoryUpdater.getEntry(\"c\", \"e\"));\n    org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(mergedDag, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(one, two));\n    org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(mergedDag, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(two, one));\n    org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag1, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(three, one));\n    org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag1, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(one, three));\n    org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag2, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(three, two));\n    org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag2, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(two, three));\n    org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag1, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(new org.apache.ambari.eventdb.model.WorkflowContext(), one));\n    org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag1, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(one, new org.apache.ambari.eventdb.model.WorkflowContext()));\n    org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag2, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(new org.apache.ambari.eventdb.model.WorkflowContext(), two));\n    org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag2, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(two, new org.apache.ambari.eventdb.model.WorkflowContext()));\n    org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag1, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(one, one));\n    org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(dag2, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(two, two));\n    org.apache.ambari.TestMapReduceJobHistoryUpdater.assertEquals(emptyDag, org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.constructMergedDag(three, three));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-agent/src/main/java/org/apache/ambari/tools/jce/JcePolicyInfo.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [],
  "annotations": "No Annotations",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "testUnlimitedKeyJCEPolicy[]",
  "test_body": "{\n    java.lang.System.out.print(\"Unlimited Key JCE Policy: \");\n    try {\n        boolean unlimited \u003d javax.crypto.Cipher.getMaxAllowedKeyLength(\"RC5\") \u003e\u003d 256;\n        java.lang.System.out.println(unlimited);\n        java.lang.System.exit(unlimited ? 0 : 1);\n    } catch (java.security.NoSuchAlgorithmException e) {\n        java.lang.System.out.println(\"unknown [error]\");\n        java.lang.System.exit(-1);\n    }\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
  "refactorings": "# Refactorings in commit 60248d232b99ca5981d1d99464658b9eee246588\n\n- Add Method Annotation\t@Ignore(\"Fix later: NoSuchField: WHITESPACE error exception\") in method public test() : void from class org.apache.ambari.checkstyle.UndocumentedRestApiOperationCheckTest\n\n",
  "assertion_lines": [
    56
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "assertHasAcl(\"/single\", \"ip\", \"127.0.0.1\", (org.apache.zookeeper.ZooDefs.Perms.WRITE | org.apache.zookeeper.ZooDefs.Perms.READ) | org.apache.zookeeper.ZooDefs.Perms.DELETE)",
  "test_method_name": "testSetAclsOnSingleNode[]",
  "test_body": "{\n    path(\"/single\");\n    setAcls(\"/single\", \"ip:127.0.0.1:rwd\");\n    assertHasAcl(\"/single\", \"ip\", \"127.0.0.1\", (org.apache.zookeeper.ZooDefs.Perms.WRITE | org.apache.zookeeper.ZooDefs.Perms.READ) | org.apache.zookeeper.ZooDefs.Perms.DELETE);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
  "refactorings": "# Refactorings in commit 60248d232b99ca5981d1d99464658b9eee246588\n\n- Add Method Annotation\t@Ignore(\"Fix later: NoSuchField: WHITESPACE error exception\") in method public test() : void from class org.apache.ambari.checkstyle.UndocumentedRestApiOperationCheckTest\n\n",
  "assertion_lines": [
    68,
    69,
    70
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 3,
  "assertion_type": "assertHasAcl(\"/parent\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ | org.apache.zookeeper.ZooDefs.Perms.DELETE), assertHasAcl(\"/parent/a\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ | org.apache.zookeeper.ZooDefs.Perms.DELETE), assertHasAcl(\"/parent/b\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ | org.apache.zookeeper.ZooDefs.Perms.DELETE)",
  "test_method_name": "testSetAclsOnParentAndItsDirectChildren[]",
  "test_body": "{\n    path(\"/parent\");\n    path(\"/parent/a\");\n    path(\"/parent/b\");\n    setAcls(\"/parent\", \"ip:127.0.0.1:rd\");\n    assertHasAcl(\"/parent\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ | org.apache.zookeeper.ZooDefs.Perms.DELETE);\n    assertHasAcl(\"/parent/a\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ | org.apache.zookeeper.ZooDefs.Perms.DELETE);\n    assertHasAcl(\"/parent/b\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ | org.apache.zookeeper.ZooDefs.Perms.DELETE);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
  "refactorings": "# Refactorings in commit 60248d232b99ca5981d1d99464658b9eee246588\n\n- Add Method Annotation\t@Ignore(\"Fix later: NoSuchField: WHITESPACE error exception\") in method public test() : void from class org.apache.ambari.checkstyle.UndocumentedRestApiOperationCheckTest\n\n",
  "assertion_lines": [
    83,
    84,
    85,
    86
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 4,
  "assertion_type": "assertRemoved(\"/parent\"), assertRemoved(\"/parent/a\"), assertRemoved(\"/parent/b\"), assertRemoved(\"/parent/b/q\")",
  "test_method_name": "testDeleteRecursive[]",
  "test_body": "{\n    path(\"/parent\");\n    path(\"/parent/a\");\n    path(\"/parent/b\");\n    path(\"/parent/b/q\");\n    deleteZnode(\"/parent\");\n    assertRemoved(\"/parent\");\n    assertRemoved(\"/parent/a\");\n    assertRemoved(\"/parent/b\");\n    assertRemoved(\"/parent/b/q\");\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
  "refactorings": "# Refactorings in commit 60248d232b99ca5981d1d99464658b9eee246588\n\n- Add Method Annotation\t@Ignore(\"Fix later: NoSuchField: WHITESPACE error exception\") in method public test() : void from class org.apache.ambari.checkstyle.UndocumentedRestApiOperationCheckTest\n\n",
  "assertion_lines": [
    99,
    100,
    101,
    102
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 4,
  "assertion_type": "assertHasNode(\"/parent\"), assertRemoved(\"/parent/a\"), assertRemoved(\"/parent/b\"), assertRemoved(\"/parent/b/q\")",
  "test_method_name": "testDeleteRecursiveWildcard[]",
  "test_body": "{\n    path(\"/parent\");\n    path(\"/parent/a\");\n    path(\"/parent/b\");\n    path(\"/parent/b/q\");\n    deleteZnode(\"/parent/*\");\n    assertHasNode(\"/parent\");\n    assertRemoved(\"/parent/a\");\n    assertRemoved(\"/parent/b\");\n    assertRemoved(\"/parent/b/q\");\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
  "refactorings": "# Refactorings in commit 60248d232b99ca5981d1d99464658b9eee246588\n\n- Add Method Annotation\t@Ignore(\"Fix later: NoSuchField: WHITESPACE error exception\") in method public test() : void from class org.apache.ambari.checkstyle.UndocumentedRestApiOperationCheckTest\n\n",
  "assertion_lines": [
    115,
    116,
    117,
    118
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 4,
  "assertion_type": "assertHasAcl(\"/parent\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ), assertHasAcl(\"/parent/a\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ), assertHasAcl(\"/parent/a/b\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ), assertHasAcl(\"/parent/a/b/c\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ)",
  "test_method_name": "testSetAclsRecursively[]",
  "test_body": "{\n    path(\"/parent\");\n    path(\"/parent/a\");\n    path(\"/parent/a/b\");\n    path(\"/parent/a/b/c\");\n    setAcls(\"/parent\", \"ip:127.0.0.1:r\");\n    assertHasAcl(\"/parent\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ);\n    assertHasAcl(\"/parent/a\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ);\n    assertHasAcl(\"/parent/a/b\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ);\n    assertHasAcl(\"/parent/a/b/c\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
  "refactorings": "# Refactorings in commit 60248d232b99ca5981d1d99464658b9eee246588\n\n- Add Method Annotation\t@Ignore(\"Fix later: NoSuchField: WHITESPACE error exception\") in method public test() : void from class org.apache.ambari.checkstyle.UndocumentedRestApiOperationCheckTest\n\n",
  "assertion_lines": [
    133,
    134,
    135,
    136,
    137,
    138
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 6,
  "assertion_type": "assertHasAcl(\"/abc123\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ), assertHasAcl(\"/abcdef/efg\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ), assertHasAcl(\"/abc/123\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ), assertHasAcl(\"/x\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL), assertHasAcl(\"/y/a\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL), assertHasAcl(\"/ab\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL)",
  "test_method_name": "testSupportsWildcard[]",
  "test_body": "{\n    path(\"/abc123\");\n    path(\"/abcdef/efg\");\n    path(\"/abc/123\");\n    path(\"/x\");\n    path(\"/y/a\");\n    path(\"/ab\");\n    setAcls(\"/abc*\", \"ip:127.0.0.1:r\");\n    assertHasAcl(\"/abc123\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ);\n    assertHasAcl(\"/abcdef/efg\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ);\n    assertHasAcl(\"/abc/123\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ);\n    assertHasAcl(\"/x\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL);\n    assertHasAcl(\"/y/a\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL);\n    assertHasAcl(\"/ab\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
  "refactorings": "# Refactorings in commit 60248d232b99ca5981d1d99464658b9eee246588\n\n- Add Method Annotation\t@Ignore(\"Fix later: NoSuchField: WHITESPACE error exception\") in method public test() : void from class org.apache.ambari.checkstyle.UndocumentedRestApiOperationCheckTest\n\n",
  "assertion_lines": [
    154,
    155,
    156,
    157,
    158,
    159,
    160
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 7,
  "assertion_type": "assertHasAcl(\"/a/abcdef\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ), assertHasAcl(\"/xy/abc/efg\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ), assertHasAcl(\"/def/abc\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ), assertHasAcl(\"/a/xyabc\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL), assertHasAcl(\"/abc123\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL), assertHasAcl(\"/a/b/abc\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL), assertHasAcl(\"/b\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL)",
  "test_method_name": "testSupportsMultupleWildcards[]",
  "test_body": "{\n    path(\"/abc123\");\n    path(\"/a/abcdef\");\n    path(\"/def/abc\");\n    path(\"/xy/abc/efg\");\n    path(\"/a/xyabc\");\n    path(\"/a/b/abc\");\n    path(\"/b\");\n    setAcls(\"/*/abc*\", \"ip:127.0.0.1:r\");\n    assertHasAcl(\"/a/abcdef\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ);\n    assertHasAcl(\"/xy/abc/efg\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ);\n    assertHasAcl(\"/def/abc\", \"ip\", \"127.0.0.1\", org.apache.zookeeper.ZooDefs.Perms.READ);\n    assertHasAcl(\"/a/xyabc\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL);\n    assertHasAcl(\"/abc123\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL);\n    assertHasAcl(\"/a/b/abc\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL);\n    assertHasAcl(\"/b\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.ALL);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
  "refactorings": "# Refactorings in commit 60248d232b99ca5981d1d99464658b9eee246588\n\n- Add Method Annotation\t@Ignore(\"Fix later: NoSuchField: WHITESPACE error exception\") in method public test() : void from class org.apache.ambari.checkstyle.UndocumentedRestApiOperationCheckTest\n\n",
  "assertion_lines": [
    170
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "assertHasAcl(\"/unprotected\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.READ)",
  "test_method_name": "testSupportsWorldScheme[]",
  "test_body": "{\n    path(\"/unprotected\");\n    setAcls(\"/unprotected\", \"world:anyone:r\");\n    assertHasAcl(\"/unprotected\", \"world\", \"anyone\", org.apache.zookeeper.ZooDefs.Perms.READ);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
  "refactorings": "# Refactorings in commit 60248d232b99ca5981d1d99464658b9eee246588\n\n- Add Method Annotation\t@Ignore(\"Fix later: NoSuchField: WHITESPACE error exception\") in method public test() : void from class org.apache.ambari.checkstyle.UndocumentedRestApiOperationCheckTest\n\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test(expected \u003d java.lang.IllegalArgumentException.class)",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "testRejectsUnsupportedScheme[]",
  "test_body": "{\n    path(\"/any\");\n    setAcls(\"/any\", \"unsupported:anyone:r\");\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
  "refactorings": "# Refactorings in commit 60248d232b99ca5981d1d99464658b9eee246588\n\n- Add Method Annotation\t@Ignore(\"Fix later: NoSuchField: WHITESPACE error exception\") in method public test() : void from class org.apache.ambari.checkstyle.UndocumentedRestApiOperationCheckTest\n\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test(expected \u003d java.lang.IllegalArgumentException.class)",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "testRejectUnsupportedPermission[]",
  "test_body": "{\n    path(\"/any\");\n    setAcls(\"/any\", \"world:anyone:invalid\");\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-agent/src/test/java/org/apache/ambari/tools/zk/ZkMigratorTest.java",
  "refactorings": "# Refactorings in commit 60248d232b99ca5981d1d99464658b9eee246588\n\n- Add Method Annotation\t@Ignore(\"Fix later: NoSuchField: WHITESPACE error exception\") in method public test() : void from class org.apache.ambari.checkstyle.UndocumentedRestApiOperationCheckTest\n\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "testIgnoresNonExistentNode[]",
  "test_body": "{\n    setAcls(\"/nonexistent\", \"world:anyone:rw\");\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-funtest/src/test/java/org/apache/ambari/funtest/server/tests/DeleteServiceTest.java",
  "refactorings": "# Refactorings in commit 3c28378fa4e6f4299e7df01c47359b4c8643ef63\n\n- Add Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.DeleteServiceTest\n\n- Add Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.GetStacksTest\n\n- Add Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.RoleBasedAccessControlBasicTest\n\n",
  "assertion_lines": [
    91,
    94,
    97,
    119,
    120,
    130,
    132,
    133,
    140,
    141,
    150,
    157,
    165,
    171,
    180,
    186,
    192,
    199
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 18,
  "assertion_type": "org.junit.Assert.assertTrue(!jsonResponse.isJsonNull()), org.junit.Assert.assertEquals(cluster_name, clusterName), org.junit.Assert.assertEquals(service_name, serviceName), org.junit.Assert.assertEquals(clusterServiceEntities.size(), 1), org.junit.Assert.assertEquals(clusterServiceEntities.get(0).getServiceName(), serviceName), org.junit.Assert.assertEquals(serviceDesiredStateEntities.size(), 1), org.junit.Assert.assertEquals(serviceDesiredStateEntity.getServiceName(), serviceName), org.junit.Assert.assertEquals(serviceDesiredStateEntity.getDesiredState(), org.apache.ambari.server.state.State.INSTALLED), org.junit.Assert.assertEquals(serviceComponentDesiredStateEntities.size(), 3), for (org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity serviceComponentDesiredStateEntity : serviceComponentDesiredStateEntities) {\n    org.junit.Assert.assertEquals(serviceComponentDesiredStateEntity.getDesiredState(), org.apache.ambari.server.state.State.INSTALLED);\n}, org.junit.Assert.assertEquals(hostComponentStateEntities.size(), 3), org.junit.Assert.assertEquals(hostComponentDesiredStateEntities.size(), 3), org.junit.Assert.assertEquals(webResponse.getStatusCode(), org.apache.http.HttpStatus.SC_NOT_FOUND), org.junit.Assert.assertTrue(clusterServiceEntity \u003d\u003d null), org.junit.Assert.assertTrue(serviceDesiredStateEntity \u003d\u003d null), org.junit.Assert.assertTrue(serviceComponentDesiredStateEntity \u003d\u003d null), org.junit.Assert.assertEquals(hostComponentStateEntities.size(), 0), org.junit.Assert.assertEquals(hostComponentDesiredStateEntities.size(), 0)",
  "test_method_name": "testDeleteService[]",
  "test_body": "{\n    java.lang.String clusterName \u003d \"c1\";\n    java.lang.String serviceName \u003d \"HDFS\";\n    org.apache.ambari.funtest.server.ConnectionParams params \u003d new org.apache.ambari.funtest.server.ConnectionParams();\n    params.setServerName(\"localhost\");\n    params.setServerApiPort(org.apache.ambari.funtest.server.tests.ServerTestBase.serverPort);\n    params.setServerAgentPort(org.apache.ambari.funtest.server.tests.ServerTestBase.serverAgentPort);\n    params.setUserName(\"admin\");\n    params.setPassword(\"admin\");\n    org.apache.ambari.funtest.server.utils.ClusterUtils clusterUtils \u003d org.apache.ambari.funtest.server.tests.ServerTestBase.injector.getInstance(org.apache.ambari.funtest.server.utils.ClusterUtils.class);\n    clusterUtils.createSampleCluster(params);\n    com.google.gson.JsonElement jsonResponse \u003d org.apache.ambari.funtest.server.utils.RestApiUtils.executeRequest(new org.apache.ambari.funtest.server.api.service.GetServiceWebRequest(params, clusterName, serviceName));\n    org.junit.Assert.assertTrue(!jsonResponse.isJsonNull());\n    com.google.gson.JsonObject jsonServiceInfoObj \u003d jsonResponse.getAsJsonObject().get(\"ServiceInfo\").getAsJsonObject();\n    java.lang.String cluster_name \u003d jsonServiceInfoObj.get(\"cluster_name\").getAsString();\n    org.junit.Assert.assertEquals(cluster_name, clusterName);\n    java.lang.String service_name \u003d jsonServiceInfoObj.get(\"service_name\").getAsString();\n    org.junit.Assert.assertEquals(service_name, serviceName);\n    jsonResponse \u003d org.apache.ambari.funtest.server.utils.RestApiUtils.executeRequest(new org.apache.ambari.funtest.server.api.service.StopServiceWebRequest(params, clusterName, serviceName));\n    org.apache.ambari.server.orm.dao.ClusterServiceDAO clusterServiceDAO \u003d org.apache.ambari.funtest.server.tests.ServerTestBase.injector.getInstance(org.apache.ambari.server.orm.dao.ClusterServiceDAO.class);\n    java.util.List\u003corg.apache.ambari.server.orm.entities.ClusterServiceEntity\u003e clusterServiceEntities \u003d clusterServiceDAO.findAll();\n    org.junit.Assert.assertEquals(clusterServiceEntities.size(), 1);\n    org.junit.Assert.assertEquals(clusterServiceEntities.get(0).getServiceName(), serviceName);\n    org.apache.ambari.server.orm.entities.ClusterServiceEntity clusterServiceEntity \u003d clusterServiceEntities.get(0);\n    long clusterId \u003d clusterServiceEntity.getClusterId();\n    org.apache.ambari.server.orm.dao.ServiceDesiredStateDAO serviceDesiredStateDAO \u003d org.apache.ambari.funtest.server.tests.ServerTestBase.injector.getInstance(org.apache.ambari.server.orm.dao.ServiceDesiredStateDAO.class);\n    java.util.List\u003corg.apache.ambari.server.orm.entities.ServiceDesiredStateEntity\u003e serviceDesiredStateEntities \u003d serviceDesiredStateDAO.findAll();\n    org.junit.Assert.assertEquals(serviceDesiredStateEntities.size(), 1);\n    org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity serviceDesiredStateEntity \u003d serviceDesiredStateEntities.get(0);\n    org.junit.Assert.assertEquals(serviceDesiredStateEntity.getServiceName(), serviceName);\n    org.junit.Assert.assertEquals(serviceDesiredStateEntity.getDesiredState(), org.apache.ambari.server.state.State.INSTALLED);\n    org.apache.ambari.server.orm.dao.ServiceComponentDesiredStateDAO serviceComponentDesiredStateDAO \u003d org.apache.ambari.funtest.server.tests.ServerTestBase.injector.getInstance(org.apache.ambari.server.orm.dao.ServiceComponentDesiredStateDAO.class);\n    java.util.List\u003corg.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity\u003e serviceComponentDesiredStateEntities \u003d serviceComponentDesiredStateDAO.findAll();\n    org.junit.Assert.assertEquals(serviceComponentDesiredStateEntities.size(), 3);\n    for (org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity serviceComponentDesiredStateEntity : serviceComponentDesiredStateEntities) {\n        org.junit.Assert.assertEquals(serviceComponentDesiredStateEntity.getDesiredState(), org.apache.ambari.server.state.State.INSTALLED);\n    }\n    org.apache.ambari.server.orm.dao.HostComponentStateDAO hostComponentStateDAO \u003d org.apache.ambari.funtest.server.tests.ServerTestBase.injector.getInstance(org.apache.ambari.server.orm.dao.HostComponentStateDAO.class);\n    java.util.List\u003corg.apache.ambari.server.orm.entities.HostComponentStateEntity\u003e hostComponentStateEntities \u003d hostComponentStateDAO.findAll();\n    org.junit.Assert.assertEquals(hostComponentStateEntities.size(), 3);\n    org.apache.ambari.server.orm.dao.HostComponentDesiredStateDAO hostComponentDesiredStateDAO \u003d org.apache.ambari.funtest.server.tests.ServerTestBase.injector.getInstance(org.apache.ambari.server.orm.dao.HostComponentDesiredStateDAO.class);\n    java.util.List\u003corg.apache.ambari.server.orm.entities.HostComponentDesiredStateEntity\u003e hostComponentDesiredStateEntities \u003d hostComponentDesiredStateDAO.findAll();\n    org.junit.Assert.assertEquals(hostComponentDesiredStateEntities.size(), 3);\n    jsonResponse \u003d org.apache.ambari.funtest.server.utils.RestApiUtils.executeRequest(new org.apache.ambari.funtest.server.api.service.DeleteServiceWebRequest(params, clusterName, serviceName));\n    org.apache.ambari.funtest.server.WebResponse webResponse \u003d new org.apache.ambari.funtest.server.api.service.GetServiceWebRequest(params, clusterName, serviceName).getResponse();\n    org.junit.Assert.assertEquals(webResponse.getStatusCode(), org.apache.http.HttpStatus.SC_NOT_FOUND);\n    clusterServiceEntity \u003d clusterServiceDAO.findByClusterAndServiceNames(clusterName, serviceName);\n    org.junit.Assert.assertTrue(clusterServiceEntity \u003d\u003d null);\n    org.apache.ambari.server.orm.entities.ServiceDesiredStateEntityPK serviceDesiredStateEntityPK \u003d org.apache.ambari.funtest.server.tests.ServerTestBase.injector.getInstance(org.apache.ambari.server.orm.entities.ServiceDesiredStateEntityPK.class);\n    serviceDesiredStateEntityPK.setClusterId(clusterId);\n    serviceDesiredStateEntityPK.setServiceName(serviceName);\n    serviceDesiredStateEntity \u003d serviceDesiredStateDAO.findByPK(serviceDesiredStateEntityPK);\n    org.junit.Assert.assertTrue(serviceDesiredStateEntity \u003d\u003d null);\n    org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity serviceComponentDesiredStateEntity \u003d serviceComponentDesiredStateDAO.findById(0L);\n    org.junit.Assert.assertTrue(serviceComponentDesiredStateEntity \u003d\u003d null);\n    hostComponentStateEntities \u003d hostComponentStateDAO.findByService(serviceName);\n    org.junit.Assert.assertEquals(hostComponentStateEntities.size(), 0);\n    hostComponentDesiredStateEntities \u003d hostComponentDesiredStateDAO.findAll();\n    org.junit.Assert.assertEquals(hostComponentDesiredStateEntities.size(), 0);\n    jsonResponse \u003d org.apache.ambari.funtest.server.utils.RestApiUtils.executeRequest(new org.apache.ambari.funtest.server.api.cluster.DeleteClusterWebRequest(params, clusterName));\n    org.apache.ambari.funtest.server.tests.DeleteServiceTest.LOG.info(jsonResponse);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-funtest/src/test/java/org/apache/ambari/funtest/server/tests/GetStacksTest.java",
  "refactorings": "# Refactorings in commit 39bda71b43c5572f057fd6c3cb6cbd91fcefa698\n\n- Remove Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.GetStacksTest\n\n- Remove Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.RoleBasedAccessControlBasicTest\n\n- Extract Method\tprivate readConfigFile() : Properties extracted from public setupTest() : void in class org.apache.ambari.funtest.server.tests.ServerTestBase\n\n",
  "assertion_lines": [
    79
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "try {\n    org.apache.http.HttpResponse httpResponse \u003d httpClient.execute(httpGet);\n    int statusCode \u003d httpResponse.getStatusLine().getStatusCode();\n    org.junit.Assert.assertEquals(org.apache.http.HttpStatus.SC_OK, statusCode);\n    org.apache.http.HttpEntity entity \u003d httpResponse.getEntity();\n    java.lang.String responseBody \u003d (entity !\u003d null) ? org.apache.http.util.EntityUtils.toString(entity) : null;\n    org.junit.Assert.assertTrue(responseBody !\u003d null);\n    com.google.gson.JsonElement jsonElement \u003d new com.google.gson.JsonParser().parse(new com.google.gson.stream.JsonReader(new java.io.StringReader(responseBody)));\n    org.junit.Assert.assertTrue(jsonElement !\u003d null);\n    com.google.gson.JsonObject jsonObject \u003d jsonElement.getAsJsonObject();\n    org.junit.Assert.assertTrue(jsonObject.has(\"items\"));\n    com.google.gson.JsonArray stacksArray \u003d jsonObject.get(\"items\").getAsJsonArray();\n    org.junit.Assert.assertTrue(stacksArray.size() \u003e 0);\n} finally {\n    httpClient.close();\n}",
  "test_method_name": "testServerStatus[]",
  "test_body": "{\n    java.lang.String stacksPath \u003d \"/api/v1/stacks\";\n    java.lang.String stacksUrl \u003d java.lang.String.format(org.apache.ambari.funtest.server.tests.ServerTestBase.SERVER_URL_FORMAT, org.apache.ambari.funtest.server.tests.ServerTestBase.serverPort) + stacksPath;\n    org.apache.http.impl.client.CloseableHttpClient httpClient \u003d org.apache.http.impl.client.HttpClients.createDefault();\n    org.apache.http.client.methods.HttpGet httpGet \u003d new org.apache.http.client.methods.HttpGet(stacksUrl);\n    httpGet.addHeader(\"Authorization\", org.apache.ambari.funtest.server.tests.ServerTestBase.getBasicAdminAuthentication());\n    httpGet.addHeader(\"X-Requested-By\", \"ambari\");\n    try {\n        org.apache.http.HttpResponse httpResponse \u003d httpClient.execute(httpGet);\n        int statusCode \u003d httpResponse.getStatusLine().getStatusCode();\n        org.junit.Assert.assertEquals(org.apache.http.HttpStatus.SC_OK, statusCode);\n        org.apache.http.HttpEntity entity \u003d httpResponse.getEntity();\n        java.lang.String responseBody \u003d (entity !\u003d null) ? org.apache.http.util.EntityUtils.toString(entity) : null;\n        org.junit.Assert.assertTrue(responseBody !\u003d null);\n        com.google.gson.JsonElement jsonElement \u003d new com.google.gson.JsonParser().parse(new com.google.gson.stream.JsonReader(new java.io.StringReader(responseBody)));\n        org.junit.Assert.assertTrue(jsonElement !\u003d null);\n        com.google.gson.JsonObject jsonObject \u003d jsonElement.getAsJsonObject();\n        org.junit.Assert.assertTrue(jsonObject.has(\"items\"));\n        com.google.gson.JsonArray stacksArray \u003d jsonObject.get(\"items\").getAsJsonArray();\n        org.junit.Assert.assertTrue(stacksArray.size() \u003e 0);\n    } finally {\n        httpClient.close();\n    }\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-funtest/src/test/java/org/apache/ambari/funtest/server/tests/RoleBasedAccessControlBasicTest.java",
  "refactorings": "# Refactorings in commit 39bda71b43c5572f057fd6c3cb6cbd91fcefa698\n\n- Remove Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.GetStacksTest\n\n- Remove Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.RoleBasedAccessControlBasicTest\n\n- Extract Method\tprivate readConfigFile() : Properties extracted from public setupTest() : void in class org.apache.ambari.funtest.server.tests.ServerTestBase\n\n",
  "assertion_lines": [
    96
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertFalse(jsonResponse.isJsonNull())",
  "test_method_name": "testGetClustersAsAnonUser[]",
  "test_body": "{\n    com.google.gson.JsonElement jsonResponse;\n    org.apache.ambari.funtest.server.ConnectionParams adminConnectionParams \u003d createAdminConnectionParams();\n    java.lang.String anonUserName \u003d \"nothing\";\n    java.lang.String anonUserPwd \u003d \"nothing\";\n    org.apache.ambari.funtest.server.utils.ClusterUtils.createUser(adminConnectionParams, clusterName, anonUserName, anonUserPwd, org.apache.ambari.funtest.server.AmbariUserRole.NONE);\n    org.apache.ambari.funtest.server.ConnectionParams anonUserParams \u003d createConnectionParams(anonUserName, anonUserPwd);\n    jsonResponse \u003d org.apache.ambari.funtest.server.utils.RestApiUtils.executeRequest(new org.apache.ambari.funtest.server.api.cluster.GetAllClustersWebRequest(anonUserParams));\n    org.junit.Assert.assertFalse(jsonResponse.isJsonNull());\n    jsonResponse \u003d org.apache.ambari.funtest.server.utils.RestApiUtils.executeRequest(new org.apache.ambari.funtest.server.api.user.DeleteUserWebRequest(adminConnectionParams, anonUserName));\n    org.apache.ambari.funtest.server.tests.RoleBasedAccessControlBasicTest.LOG.info(jsonResponse);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-funtest/src/test/java/org/apache/ambari/funtest/server/tests/RoleBasedAccessControlBasicTest.java",
  "refactorings": "# Refactorings in commit 39bda71b43c5572f057fd6c3cb6cbd91fcefa698\n\n- Remove Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.GetStacksTest\n\n- Remove Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.RoleBasedAccessControlBasicTest\n\n- Extract Method\tprivate readConfigFile() : Properties extracted from public setupTest() : void in class org.apache.ambari.funtest.server.tests.ServerTestBase\n\n",
  "assertion_lines": [
    141
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertEquals(org.apache.http.HttpStatus.SC_FORBIDDEN, webResponse.getStatusCode())",
  "test_method_name": "testAddClusterConfigAsAnonUser[]",
  "test_body": "{\n    org.apache.ambari.funtest.server.ConnectionParams adminConnectionParams \u003d createAdminConnectionParams();\n    java.lang.String anonUserName \u003d \"nothing\";\n    java.lang.String anonUserPwd \u003d \"nothing\";\n    org.apache.ambari.funtest.server.utils.ClusterUtils.createUser(adminConnectionParams, clusterName, anonUserName, anonUserPwd, org.apache.ambari.funtest.server.AmbariUserRole.NONE);\n    java.lang.String configType \u003d \"test-hadoop-env\";\n    java.lang.String configTag \u003d \"version1\";\n    org.apache.ambari.funtest.server.ClusterConfigParams configParams \u003d new org.apache.ambari.funtest.server.ClusterConfigParams();\n    configParams.setClusterName(clusterName);\n    configParams.setConfigType(configType);\n    configParams.setConfigTag(configTag);\n    configParams.setProperties(new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e() {\n        {\n            put(\"fs.default.name\", \"localhost:9995\");\n        }\n    });\n    org.apache.ambari.funtest.server.ConnectionParams anonUserParams \u003d createConnectionParams(anonUserName, anonUserPwd);\n    org.apache.ambari.funtest.server.WebRequest webRequest \u003d new org.apache.ambari.funtest.server.api.cluster.CreateConfigurationWebRequest(anonUserParams, configParams);\n    org.apache.ambari.funtest.server.WebResponse webResponse \u003d webRequest.getResponse();\n    org.junit.Assert.assertEquals(org.apache.http.HttpStatus.SC_FORBIDDEN, webResponse.getStatusCode());\n    com.google.gson.JsonElement jsonResponse \u003d org.apache.ambari.funtest.server.utils.RestApiUtils.executeRequest(new org.apache.ambari.funtest.server.api.user.DeleteUserWebRequest(adminConnectionParams, \"nothing\"));\n    org.apache.ambari.funtest.server.tests.RoleBasedAccessControlBasicTest.LOG.info(jsonResponse);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-funtest/src/test/java/org/apache/ambari/funtest/server/tests/RoleBasedAccessControlBasicTest.java",
  "refactorings": "# Refactorings in commit 39bda71b43c5572f057fd6c3cb6cbd91fcefa698\n\n- Remove Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.GetStacksTest\n\n- Remove Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.RoleBasedAccessControlBasicTest\n\n- Extract Method\tprivate readConfigFile() : Properties extracted from public setupTest() : void in class org.apache.ambari.funtest.server.tests.ServerTestBase\n\n",
  "assertion_lines": [
    188
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertEquals(org.apache.http.HttpStatus.SC_CREATED, webResponse.getStatusCode())",
  "test_method_name": "testAddClusterConfigAsClusterAdmin[]",
  "test_body": "{\n    org.apache.ambari.funtest.server.ConnectionParams adminConnectionParams \u003d createAdminConnectionParams();\n    java.lang.String clusterAdminName \u003d \"clusterAdmin\";\n    java.lang.String clusterAdminPwd \u003d \"clusterAdmin\";\n    org.apache.ambari.funtest.server.utils.ClusterUtils.createUserClusterAdministrator(adminConnectionParams, clusterName, clusterAdminName, clusterAdminPwd);\n    java.lang.String configType \u003d \"test-hadoop-env\";\n    java.lang.String configTag \u003d \"version1\";\n    org.apache.ambari.funtest.server.ClusterConfigParams configParams \u003d new org.apache.ambari.funtest.server.ClusterConfigParams();\n    configParams.setClusterName(clusterName);\n    configParams.setConfigType(configType);\n    configParams.setConfigTag(configTag);\n    configParams.setProperties(new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e() {\n        {\n            put(\"fs.default.name\", \"localhost:9995\");\n        }\n    });\n    org.apache.ambari.funtest.server.ConnectionParams userConnectionParams \u003d createConnectionParams(clusterAdminName, clusterAdminPwd);\n    org.apache.ambari.funtest.server.WebRequest webRequest \u003d new org.apache.ambari.funtest.server.api.cluster.CreateConfigurationWebRequest(userConnectionParams, configParams);\n    org.apache.ambari.funtest.server.WebResponse webResponse \u003d webRequest.getResponse();\n    org.junit.Assert.assertEquals(org.apache.http.HttpStatus.SC_CREATED, webResponse.getStatusCode());\n    org.apache.ambari.funtest.server.utils.RestApiUtils.executeRequest(new org.apache.ambari.funtest.server.api.user.DeleteUserWebRequest(adminConnectionParams, clusterAdminName));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-funtest/src/test/java/org/apache/ambari/funtest/server/tests/ServerTestBase.java",
  "refactorings": "# Refactorings in commit 39bda71b43c5572f057fd6c3cb6cbd91fcefa698\n\n- Remove Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.GetStacksTest\n\n- Remove Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.RoleBasedAccessControlBasicTest\n\n- Extract Method\tprivate readConfigFile() : Properties extracted from public setupTest() : void in class org.apache.ambari.funtest.server.tests.ServerTestBase\n\n",
  "assertion_lines": [],
  "annotations": "@org.junit.BeforeClass",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "setupTest[]",
  "test_body": "{\n    if (!org.apache.ambari.funtest.server.tests.ServerTestBase.isInitialized) {\n        java.util.Properties properties \u003d org.apache.ambari.funtest.server.tests.ServerTestBase.readConfigFile();\n        properties.setProperty(org.apache.ambari.server.configuration.Configuration.SERVER_PERSISTENCE_TYPE.getKey(), \"remote\");\n        properties.setProperty(org.apache.ambari.server.configuration.Configuration.SERVER_JDBC_URL.getKey(), org.apache.ambari.server.configuration.Configuration.JDBC_IN_MEMORY_URL);\n        properties.setProperty(org.apache.ambari.server.configuration.Configuration.SERVER_JDBC_DRIVER.getKey(), org.apache.ambari.server.configuration.Configuration.JDBC_IN_MEMORY_DRIVER);\n        properties.setProperty(org.apache.ambari.server.configuration.Configuration.OS_VERSION.getKey(), \"centos7\");\n        properties.setProperty(org.apache.ambari.server.configuration.Configuration.AGENT_USE_SSL.getKey(), \"false\");\n        properties.setProperty(org.apache.ambari.server.configuration.Configuration.CLIENT_API_PORT.getKey(), java.lang.Integer.toString(org.apache.ambari.funtest.server.tests.ServerTestBase.serverPort));\n        properties.setProperty(org.apache.ambari.server.configuration.Configuration.SRVR_ONE_WAY_SSL_PORT.getKey(), java.lang.Integer.toString(org.apache.ambari.funtest.server.tests.ServerTestBase.serverAgentPort));\n        java.lang.String tmpDir \u003d java.lang.System.getProperty(\"java.io.tmpdir\");\n        properties.setProperty(org.apache.ambari.server.configuration.Configuration.SRVR_KSTR_DIR.getKey(), tmpDir);\n        org.apache.ambari.server.controller.ControllerModule testModule \u003d new org.apache.ambari.server.controller.ControllerModule(properties);\n        org.apache.ambari.funtest.server.tests.ServerTestBase.injector \u003d com.google.inject.Guice.createInjector(testModule, new org.apache.ambari.server.audit.AuditLoggerModule(), new org.apache.ambari.server.ldap.LdapModule());\n        org.apache.ambari.funtest.server.tests.ServerTestBase.injector.getInstance(com.google.inject.persist.PersistService.class).start();\n        org.apache.ambari.funtest.server.tests.ServerTestBase.initDB();\n        org.apache.ambari.funtest.server.tests.ServerTestBase.server \u003d org.apache.ambari.funtest.server.tests.ServerTestBase.injector.getInstance(org.apache.ambari.funtest.server.LocalAmbariServer.class);\n        org.apache.ambari.funtest.server.tests.ServerTestBase.serverThread \u003d new java.lang.Thread(org.apache.ambari.funtest.server.tests.ServerTestBase.server);\n        org.apache.ambari.funtest.server.tests.ServerTestBase.serverThread.start();\n        org.apache.ambari.funtest.server.tests.ServerTestBase.waitForServer();\n        org.apache.ambari.funtest.server.tests.ServerTestBase.isInitialized \u003d true;\n    }\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-funtest/src/test/java/org/apache/ambari/funtest/server/tests/db/DDLCreateIT.java",
  "refactorings": "# Refactorings in commit 3c28378fa4e6f4299e7df01c47359b4c8643ef63\n\n- Add Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.DeleteServiceTest\n\n- Add Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.GetStacksTest\n\n- Add Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.RoleBasedAccessControlBasicTest\n\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "mysql[]",
  "test_body": "{\n    org.apache.ambari.funtest.server.tests.db.DDLCreateIT.testSchemaCreate(() -\u003e new org.testcontainers.containers.MariaDBContainer(\"mariadb:10.2\").withConfigurationOverride(null).withInitScript(\"Ambari-DDL-MySQL-CREATE.sql\"));\n    org.apache.ambari.funtest.server.tests.db.DDLCreateIT.testSchemaCreate(() -\u003e new org.testcontainers.containers.MySQLContainer(\"mysql:5.7\").withConfigurationOverride(null).withInitScript(\"Ambari-DDL-MySQL-CREATE.sql\"));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-funtest/src/test/java/org/apache/ambari/funtest/server/tests/db/DDLCreateIT.java",
  "refactorings": "# Refactorings in commit 3c28378fa4e6f4299e7df01c47359b4c8643ef63\n\n- Add Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.DeleteServiceTest\n\n- Add Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.GetStacksTest\n\n- Add Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.RoleBasedAccessControlBasicTest\n\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "postgres[]",
  "test_body": "{\n    org.apache.ambari.funtest.server.tests.db.DDLCreateIT.testSchemaCreate(() -\u003e new org.testcontainers.containers.PostgreSQLContainer(\"postgres:9.6\").withInitScript(\"Ambari-DDL-Postgres-CREATE.sql\"));\n    org.apache.ambari.funtest.server.tests.db.DDLCreateIT.testSchemaCreate(() -\u003e new org.testcontainers.containers.PostgreSQLContainer(\"postgres:10\").withInitScript(\"Ambari-DDL-Postgres-CREATE.sql\"));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-funtest/src/test/java/org/apache/ambari/funtest/server/tests/db/DDLCreateIT.java",
  "refactorings": "# Refactorings in commit 3c28378fa4e6f4299e7df01c47359b4c8643ef63\n\n- Add Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.DeleteServiceTest\n\n- Add Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.GetStacksTest\n\n- Add Class Annotation\t@Ignore in class org.apache.ambari.funtest.server.tests.RoleBasedAccessControlBasicTest\n\n",
  "assertion_lines": [
    53
  ],
  "annotations": "No Annotations",
  "assertion_amount": 1,
  "assertion_type": "try (org.testcontainers.containers.JdbcDatabaseContainer container \u003d containerSupplier.get().withPassword(org.apache.ambari.server.configuration.Configuration.SERVER_JDBC_USER_PASSWD.getDefaultValue())) {\n    container.start();\n    java.util.Properties props \u003d new java.util.Properties();\n    props.put(org.apache.ambari.server.configuration.Configuration.SERVER_PERSISTENCE_TYPE.getKey(), org.apache.ambari.server.orm.PersistenceType.REMOTE.getValue());\n    props.put(org.apache.ambari.server.configuration.Configuration.SERVER_DB_NAME.getKey(), container.getDatabaseName());\n    props.put(org.apache.ambari.server.configuration.Configuration.SERVER_JDBC_DRIVER.getKey(), container.getDriverClassName());\n    props.put(org.apache.ambari.server.configuration.Configuration.SERVER_JDBC_URL.getKey(), container.getJdbcUrl().replace(\"mariadb\", \"mysql\"));\n    props.put(org.apache.ambari.server.configuration.Configuration.SERVER_JDBC_USER_NAME.getKey(), container.getUsername());\n    org.apache.ambari.server.configuration.Configuration config \u003d new org.apache.ambari.server.configuration.Configuration(props);\n    org.apache.ambari.server.orm.DBAccessor db \u003d new org.apache.ambari.server.orm.DBAccessorImpl(config);\n    org.junit.Assert.assertTrue(db.tableExists(\"metainfo\"));\n    org.junit.Assert.assertEquals(new java.lang.Integer(1), db.getIntColumnValues(\"users\", \"user_id\", new java.lang.String[]{ \"user_name\" }, new java.lang.String[]{ \"admin\" }, false).get(0));\n} catch (java.sql.SQLException e) {\n    org.junit.Assert.fail(e.getMessage());\n}",
  "test_method_name": "testSchemaCreate[java.util.function.Supplier\u003c? extends org.testcontainers.containers.JdbcDatabaseContainer\u003e containerSupplier]",
  "test_body": "{\n    try (org.testcontainers.containers.JdbcDatabaseContainer container \u003d containerSupplier.get().withPassword(org.apache.ambari.server.configuration.Configuration.SERVER_JDBC_USER_PASSWD.getDefaultValue())) {\n        container.start();\n        java.util.Properties props \u003d new java.util.Properties();\n        props.put(org.apache.ambari.server.configuration.Configuration.SERVER_PERSISTENCE_TYPE.getKey(), org.apache.ambari.server.orm.PersistenceType.REMOTE.getValue());\n        props.put(org.apache.ambari.server.configuration.Configuration.SERVER_DB_NAME.getKey(), container.getDatabaseName());\n        props.put(org.apache.ambari.server.configuration.Configuration.SERVER_JDBC_DRIVER.getKey(), container.getDriverClassName());\n        props.put(org.apache.ambari.server.configuration.Configuration.SERVER_JDBC_URL.getKey(), container.getJdbcUrl().replace(\"mariadb\", \"mysql\"));\n        props.put(org.apache.ambari.server.configuration.Configuration.SERVER_JDBC_USER_NAME.getKey(), container.getUsername());\n        org.apache.ambari.server.configuration.Configuration config \u003d new org.apache.ambari.server.configuration.Configuration(props);\n        org.apache.ambari.server.orm.DBAccessor db \u003d new org.apache.ambari.server.orm.DBAccessorImpl(config);\n        org.junit.Assert.assertTrue(db.tableExists(\"metainfo\"));\n        org.junit.Assert.assertEquals(new java.lang.Integer(1), db.getIntColumnValues(\"users\", \"user_id\", new java.lang.String[]{ \"user_name\" }, new java.lang.String[]{ \"admin\" }, false).get(0));\n    } catch (java.sql.SQLException e) {\n        org.junit.Assert.fail(e.getMessage());\n    }\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/annotations/LockAreaTest.java",
  "refactorings": "# Refactorings in commit 3a7906c84737511475e718a0da50397b31ef7b52\n\n- Modify Class Annotation\t@NamedQueries({@NamedQuery(name\u003d\"UpgradeEntity.findAll\",query\u003d\"SELECT u FROM UpgradeEntity u\"),@NamedQuery(name\u003d\"UpgradeEntity.findAllForCluster\",query\u003d\"SELECT u FROM UpgradeEntity u WHERE u.clusterId \u003d :clusterId\"),@NamedQuery(name\u003d\"UpgradeEntity.findUpgrade\",query\u003d\"SELECT u FROM UpgradeEntity u WHERE u.upgradeId \u003d :upgradeId\"),@NamedQuery(name\u003d\"UpgradeEntity.findLatestForClusterInDirection\",query\u003d\"SELECT u FROM UpgradeEntity u JOIN RequestEntity r ON u.requestId \u003d r.requestId WHERE u.clusterId \u003d :clusterId AND u.direction \u003d :direction ORDER BY r.startTime DESC\"),@NamedQuery(name\u003d\"UpgradeEntity.findLatestForCluster\",query\u003d\"SELECT u FROM UpgradeEntity u JOIN RequestEntity r ON u.requestId \u003d r.requestId WHERE u.clusterId \u003d :clusterId ORDER BY r.startTime DESC\")}) to @NamedQueries({@NamedQuery(name\u003d\"UpgradeEntity.findAll\",query\u003d\"SELECT u FROM UpgradeEntity u\"),@NamedQuery(name\u003d\"UpgradeEntity.findAllForCluster\",query\u003d\"SELECT u FROM UpgradeEntity u WHERE u.clusterId \u003d :clusterId\"),@NamedQuery(name\u003d\"UpgradeEntity.findUpgrade\",query\u003d\"SELECT u FROM UpgradeEntity u WHERE u.upgradeId \u003d :upgradeId\"),@NamedQuery(name\u003d\"UpgradeEntity.findLatestForClusterInDirection\",query\u003d\"SELECT u FROM UpgradeEntity u JOIN RequestEntity r ON u.requestId \u003d r.requestId WHERE u.clusterId \u003d :clusterId AND u.direction \u003d :direction ORDER BY r.startTime DESC, u.upgradeId DESC\"),@NamedQuery(name\u003d\"UpgradeEntity.findLatestForCluster\",query\u003d\"SELECT u FROM UpgradeEntity u JOIN RequestEntity r ON u.requestId \u003d r.requestId WHERE u.clusterId \u003d :clusterId ORDER BY r.startTime DESC\")}) in class org.apache.ambari.server.orm.entities.UpgradeEntity\n\n- Add Thrown Exception Type\tSQLException in method public teardown() : void from class org.apache.ambari.annotations.LockAreaTest\n\n- Add Thrown Exception Type\tSQLException in method public teardown() : void from class org.apache.ambari.annotations.TransactionalLockInterceptorTest\n\n- Add Thrown Exception Type\tAmbariException in method public teardown() : void from class org.apache.ambari.server.StateRecoveryManagerTest\n\n- Add Thrown Exception Type\tSQLException in method public teardown() : void from class org.apache.ambari.server.StateRecoveryManagerTest\n\n- Add Thrown Exception Type\tSQLException in method public tearDown() : void from class org.apache.ambari.server.actionmanager.TestActionDBAccessorImpl\n\n- Rename Method\tpublic teardown() : void renamed to public tearDown() : void in class org.apache.ambari.server.actionmanager.TestActionManager\n\n- Add Thrown Exception Type\tSQLException in method public tearDown() : void from class org.apache.ambari.server.actionmanager.TestActionManager\n\n- Add Thrown Exception Type\tAmbariException in method public teardown() : void from class org.apache.ambari.server.actionmanager.TestActionScheduler\n\n- Add Thrown Exception Type\tSQLException in method public teardown() : void from class org.apache.ambari.server.actionmanager.TestActionScheduler\n\n- Rename Method\tpublic teardown() : void renamed to public tearDown() : void in class org.apache.ambari.server.actionmanager.TestActionSchedulerThreading\n\n- Add Thrown Exception Type\tAmbariException in method public tearDown() : void from class org.apache.ambari.server.actionmanager.TestActionSchedulerThreading\n\n- Add Thrown Exception Type\tSQLException in method public tearDown() : void from class org.apache.ambari.server.actionmanager.TestActionSchedulerThreading\n\n- Add Thrown Exception Type\tSQLException in method public teardown() : void from class org.apache.ambari.server.agent.HeartbeatProcessorTest\n\n- Add Thrown Exception Type\tAmbariException in method public teardown() : void from class org.apache.ambari.server.agent.TestHeartbeatMonitor\n\n- Add Thrown Exception Type\tSQLException in method public teardown() : void from class org.apache.ambari.server.agent.TestHeartbeatMonitor\n\n- Change Attribute Type\tmetaInfo : AmbariMetaInfo to metaInfo : TestAmbariMetaInfo in class org.apache.ambari.server.api.services.AmbariMetaInfoTest\n\n- Add Thrown Exception Type\tAmbariException in method public teardown() : void from class org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelperTest\n\n- Add Thrown Exception Type\tSQLException in method public teardown() : void from class org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelperTest\n\n- Add Thrown Exception Type\tSQLException in method public teardown() : void from class org.apache.ambari.server.controller.AmbariServerTest\n\n... and 120 more refactorings in this commit\n",
  "assertion_lines": [
    69,
    75
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 2,
  "assertion_type": "for (org.apache.ambari.annotations.TransactionalLock.LockArea lockArea : lockAreas) {\n    java.util.concurrent.locks.ReadWriteLock lock \u003d locks.getLock(lockArea);\n    junit.framework.Assert.assertNotNull(lock);\n    lockList.add(lock);\n}, for (org.apache.ambari.annotations.TransactionalLock.LockArea lockArea : lockAreas) {\n    junit.framework.Assert.assertTrue(lockList.contains(locks.getLock(lockArea)));\n}",
  "test_method_name": "testTransactionalLockInstantiation[]",
  "test_body": "{\n    org.apache.ambari.server.orm.TransactionalLocks locks \u003d m_injector.getInstance(org.apache.ambari.server.orm.TransactionalLocks.class);\n    java.util.List\u003cjava.util.concurrent.locks.ReadWriteLock\u003e lockList \u003d new java.util.ArrayList\u003c\u003e();\n    java.util.Set\u003corg.apache.ambari.annotations.TransactionalLock.LockArea\u003e lockAreas \u003d java.util.EnumSet.allOf(org.apache.ambari.annotations.TransactionalLock.LockArea.class);\n    for (org.apache.ambari.annotations.TransactionalLock.LockArea lockArea : lockAreas) {\n        java.util.concurrent.locks.ReadWriteLock lock \u003d locks.getLock(lockArea);\n        junit.framework.Assert.assertNotNull(lock);\n        lockList.add(lock);\n    }\n    for (org.apache.ambari.annotations.TransactionalLock.LockArea lockArea : lockAreas) {\n        junit.framework.Assert.assertTrue(lockList.contains(locks.getLock(lockArea)));\n    }\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockInterceptorTest.java",
  "refactorings": "# Refactorings in commit ab8d58ba4464791b95b56be75fd44ce9c20349c6\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public Stage(stageEntity StageEntity, hostRoleCommandDAO HostRoleCommandDAO, dbAccessor ActionDBAccessor, clusters Clusters, hostRoleCommandFactory HostRoleCommandFactory, ecwFactory ExecutionCommandWrapperFactory) from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cHostRoleCommandEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cRoleSuccessCriteriaEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method package loadExecutionCommandWrappers() : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tConcurrentLinkedQueue\u003cAgentCommand\u003e with ConcurrentLinkedQueue\u003c\u003e in method private getHostQueue(hostname String) : Queue\u003cAgentCommand\u003e from class org.apache.ambari.server.agent.ActionQueue\n\n- Replace Generic With Diamond\tHashMap\u003cString,Boolean\u003e with HashMap\u003c\u003e in method private getPerHostRequiresExecCmdDetails(host String) : Map\u003cString,Boolean\u003e from class org.apache.ambari.server.agent.AgentRequests\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public handleComponents(clusterName String) : ComponentsResponse from class org.apache.ambari.server.agent.HeartBeatHandler\n\n- Replace Generic With Diamond\tTreeSet\u003cString\u003e with TreeSet\u003c\u003e in method package execute(cluster Cluster, myDefinition AlertDefinitionEntity) : List\u003cAlert\u003e from class org.apache.ambari.server.alerts.StaleAlertRunnable\n\n- Replace Generic With Diamond\tHashMap\u003cString,ResourceInstance\u003e with HashMap\u003c\u003e in method public getSubResources() : Map\u003cString,ResourceInstance\u003e from class org.apache.ambari.server.api.query.QueryImpl\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n... and 533 more refactorings in this commit\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "testTransactionalLockInvocation[]",
  "test_body": "{\n    org.apache.ambari.server.orm.TransactionalLocks transactionalLocks \u003d m_injector.getInstance(org.apache.ambari.server.orm.TransactionalLocks.class);\n    java.util.concurrent.locks.ReadWriteLock readWriteLock \u003d org.easymock.EasyMock.createStrictMock(java.util.concurrent.locks.ReadWriteLock.class);\n    java.util.concurrent.locks.Lock readLock \u003d org.easymock.EasyMock.createStrictMock(java.util.concurrent.locks.Lock.class);\n    java.util.concurrent.locks.Lock writeLock \u003d org.easymock.EasyMock.createStrictMock(java.util.concurrent.locks.Lock.class);\n    org.easymock.EasyMock.expect(transactionalLocks.getLock(org.apache.ambari.annotations.TransactionalLock.LockArea.HRC_STATUS_CACHE)).andReturn(readWriteLock).times(2);\n    org.easymock.EasyMock.expect(readWriteLock.writeLock()).andReturn(writeLock).times(2);\n    writeLock.lock();\n    org.easymock.EasyMock.expectLastCall().once();\n    writeLock.unlock();\n    org.easymock.EasyMock.expectLastCall().once();\n    org.easymock.EasyMock.replay(transactionalLocks, readWriteLock, readLock, writeLock);\n    org.apache.ambari.server.orm.dao.HostRoleCommandDAO hostRoleCommandDAO \u003d m_injector.getInstance(org.apache.ambari.server.orm.dao.HostRoleCommandDAO.class);\n    hostRoleCommandDAO.mergeAll(new java.util.ArrayList\u003c\u003e());\n    org.easymock.EasyMock.verify(transactionalLocks, readWriteLock, readLock, writeLock);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockInterceptorTest.java",
  "refactorings": "# Refactorings in commit ab8d58ba4464791b95b56be75fd44ce9c20349c6\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public Stage(stageEntity StageEntity, hostRoleCommandDAO HostRoleCommandDAO, dbAccessor ActionDBAccessor, clusters Clusters, hostRoleCommandFactory HostRoleCommandFactory, ecwFactory ExecutionCommandWrapperFactory) from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cHostRoleCommandEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cRoleSuccessCriteriaEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method package loadExecutionCommandWrappers() : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tConcurrentLinkedQueue\u003cAgentCommand\u003e with ConcurrentLinkedQueue\u003c\u003e in method private getHostQueue(hostname String) : Queue\u003cAgentCommand\u003e from class org.apache.ambari.server.agent.ActionQueue\n\n- Replace Generic With Diamond\tHashMap\u003cString,Boolean\u003e with HashMap\u003c\u003e in method private getPerHostRequiresExecCmdDetails(host String) : Map\u003cString,Boolean\u003e from class org.apache.ambari.server.agent.AgentRequests\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public handleComponents(clusterName String) : ComponentsResponse from class org.apache.ambari.server.agent.HeartBeatHandler\n\n- Replace Generic With Diamond\tTreeSet\u003cString\u003e with TreeSet\u003c\u003e in method package execute(cluster Cluster, myDefinition AlertDefinitionEntity) : List\u003cAlert\u003e from class org.apache.ambari.server.alerts.StaleAlertRunnable\n\n- Replace Generic With Diamond\tHashMap\u003cString,ResourceInstance\u003e with HashMap\u003c\u003e in method public getSubResources() : Map\u003cString,ResourceInstance\u003e from class org.apache.ambari.server.api.query.QueryImpl\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n... and 533 more refactorings in this commit\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "testNestedTransactional[]",
  "test_body": "{\n    org.apache.ambari.server.orm.TransactionalLocks transactionalLocks \u003d m_injector.getInstance(org.apache.ambari.server.orm.TransactionalLocks.class);\n    java.util.concurrent.locks.ReadWriteLock readWriteLock \u003d org.easymock.EasyMock.createStrictMock(java.util.concurrent.locks.ReadWriteLock.class);\n    java.util.concurrent.locks.Lock readLock \u003d org.easymock.EasyMock.createStrictMock(java.util.concurrent.locks.Lock.class);\n    java.util.concurrent.locks.Lock writeLock \u003d org.easymock.EasyMock.createStrictMock(java.util.concurrent.locks.Lock.class);\n    org.easymock.EasyMock.expect(transactionalLocks.getLock(org.apache.ambari.annotations.TransactionalLock.LockArea.HRC_STATUS_CACHE)).andReturn(readWriteLock).times(2);\n    org.easymock.EasyMock.expect(readWriteLock.writeLock()).andReturn(writeLock).times(2);\n    writeLock.lock();\n    org.easymock.EasyMock.expectLastCall().once();\n    writeLock.unlock();\n    org.easymock.EasyMock.expectLastCall().once();\n    org.easymock.EasyMock.replay(transactionalLocks, readWriteLock, readLock, writeLock);\n    org.apache.ambari.annotations.TransactionalLockInterceptorTest.TestObject testObject \u003d m_injector.getInstance(org.apache.ambari.annotations.TransactionalLockInterceptorTest.TestObject.class);\n    testObject.testLockMethodAsChildOfActiveTransaction();\n    org.easymock.EasyMock.verify(transactionalLocks, readWriteLock, readLock, writeLock);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockInterceptorTest.java",
  "refactorings": "# Refactorings in commit ab8d58ba4464791b95b56be75fd44ce9c20349c6\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public Stage(stageEntity StageEntity, hostRoleCommandDAO HostRoleCommandDAO, dbAccessor ActionDBAccessor, clusters Clusters, hostRoleCommandFactory HostRoleCommandFactory, ecwFactory ExecutionCommandWrapperFactory) from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cHostRoleCommandEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cRoleSuccessCriteriaEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method package loadExecutionCommandWrappers() : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tConcurrentLinkedQueue\u003cAgentCommand\u003e with ConcurrentLinkedQueue\u003c\u003e in method private getHostQueue(hostname String) : Queue\u003cAgentCommand\u003e from class org.apache.ambari.server.agent.ActionQueue\n\n- Replace Generic With Diamond\tHashMap\u003cString,Boolean\u003e with HashMap\u003c\u003e in method private getPerHostRequiresExecCmdDetails(host String) : Map\u003cString,Boolean\u003e from class org.apache.ambari.server.agent.AgentRequests\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public handleComponents(clusterName String) : ComponentsResponse from class org.apache.ambari.server.agent.HeartBeatHandler\n\n- Replace Generic With Diamond\tTreeSet\u003cString\u003e with TreeSet\u003c\u003e in method package execute(cluster Cluster, myDefinition AlertDefinitionEntity) : List\u003cAlert\u003e from class org.apache.ambari.server.alerts.StaleAlertRunnable\n\n- Replace Generic With Diamond\tHashMap\u003cString,ResourceInstance\u003e with HashMap\u003c\u003e in method public getSubResources() : Map\u003cString,ResourceInstance\u003e from class org.apache.ambari.server.api.query.QueryImpl\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n... and 533 more refactorings in this commit\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "testMultipleLocks[]",
  "test_body": "{\n    org.apache.ambari.server.orm.TransactionalLocks transactionalLocks \u003d m_injector.getInstance(org.apache.ambari.server.orm.TransactionalLocks.class);\n    java.util.concurrent.locks.ReadWriteLock readWriteLock \u003d org.easymock.EasyMock.createStrictMock(java.util.concurrent.locks.ReadWriteLock.class);\n    java.util.concurrent.locks.Lock readLock \u003d org.easymock.EasyMock.createStrictMock(java.util.concurrent.locks.Lock.class);\n    java.util.concurrent.locks.Lock writeLock \u003d org.easymock.EasyMock.createStrictMock(java.util.concurrent.locks.Lock.class);\n    org.easymock.EasyMock.expect(transactionalLocks.getLock(org.apache.ambari.annotations.TransactionalLock.LockArea.HRC_STATUS_CACHE)).andReturn(readWriteLock).times(2);\n    org.easymock.EasyMock.expect(readWriteLock.writeLock()).andReturn(writeLock).times(2);\n    writeLock.lock();\n    org.easymock.EasyMock.expectLastCall().once();\n    writeLock.unlock();\n    org.easymock.EasyMock.expectLastCall().once();\n    org.easymock.EasyMock.expect(transactionalLocks.getLock(org.apache.ambari.annotations.TransactionalLock.LockArea.HRC_STATUS_CACHE)).andReturn(readWriteLock).times(2);\n    org.easymock.EasyMock.expect(readWriteLock.writeLock()).andReturn(writeLock).times(2);\n    writeLock.lock();\n    org.easymock.EasyMock.expectLastCall().once();\n    writeLock.unlock();\n    org.easymock.EasyMock.expectLastCall().once();\n    org.easymock.EasyMock.replay(transactionalLocks, readWriteLock, readLock, writeLock);\n    org.apache.ambari.annotations.TransactionalLockInterceptorTest.TestObject testObject \u003d m_injector.getInstance(org.apache.ambari.annotations.TransactionalLockInterceptorTest.TestObject.class);\n    testObject.testMultipleLocks();\n    org.easymock.EasyMock.verify(transactionalLocks, readWriteLock, readLock, writeLock);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockInterceptorTest.java",
  "refactorings": "# Refactorings in commit ab8d58ba4464791b95b56be75fd44ce9c20349c6\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public Stage(stageEntity StageEntity, hostRoleCommandDAO HostRoleCommandDAO, dbAccessor ActionDBAccessor, clusters Clusters, hostRoleCommandFactory HostRoleCommandFactory, ecwFactory ExecutionCommandWrapperFactory) from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cHostRoleCommandEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cRoleSuccessCriteriaEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method package loadExecutionCommandWrappers() : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tConcurrentLinkedQueue\u003cAgentCommand\u003e with ConcurrentLinkedQueue\u003c\u003e in method private getHostQueue(hostname String) : Queue\u003cAgentCommand\u003e from class org.apache.ambari.server.agent.ActionQueue\n\n- Replace Generic With Diamond\tHashMap\u003cString,Boolean\u003e with HashMap\u003c\u003e in method private getPerHostRequiresExecCmdDetails(host String) : Map\u003cString,Boolean\u003e from class org.apache.ambari.server.agent.AgentRequests\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public handleComponents(clusterName String) : ComponentsResponse from class org.apache.ambari.server.agent.HeartBeatHandler\n\n- Replace Generic With Diamond\tTreeSet\u003cString\u003e with TreeSet\u003c\u003e in method package execute(cluster Cluster, myDefinition AlertDefinitionEntity) : List\u003cAlert\u003e from class org.apache.ambari.server.alerts.StaleAlertRunnable\n\n- Replace Generic With Diamond\tHashMap\u003cString,ResourceInstance\u003e with HashMap\u003c\u003e in method public getSubResources() : Map\u003cString,ResourceInstance\u003e from class org.apache.ambari.server.api.query.QueryImpl\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n... and 533 more refactorings in this commit\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "testNestedMultipleLocks[]",
  "test_body": "{\n    org.apache.ambari.server.orm.TransactionalLocks transactionalLocks \u003d m_injector.getInstance(org.apache.ambari.server.orm.TransactionalLocks.class);\n    java.util.concurrent.locks.ReadWriteLock readWriteLock \u003d org.easymock.EasyMock.createStrictMock(java.util.concurrent.locks.ReadWriteLock.class);\n    java.util.concurrent.locks.Lock readLock \u003d org.easymock.EasyMock.createStrictMock(java.util.concurrent.locks.Lock.class);\n    java.util.concurrent.locks.Lock writeLock \u003d org.easymock.EasyMock.createStrictMock(java.util.concurrent.locks.Lock.class);\n    org.easymock.EasyMock.expect(transactionalLocks.getLock(org.apache.ambari.annotations.TransactionalLock.LockArea.HRC_STATUS_CACHE)).andReturn(readWriteLock).times(2);\n    org.easymock.EasyMock.expect(readWriteLock.writeLock()).andReturn(writeLock).times(2);\n    writeLock.lock();\n    org.easymock.EasyMock.expectLastCall().once();\n    writeLock.unlock();\n    org.easymock.EasyMock.expectLastCall().once();\n    org.easymock.EasyMock.replay(transactionalLocks, readWriteLock, readLock, writeLock);\n    org.apache.ambari.annotations.TransactionalLockInterceptorTest.TestObject testObject \u003d m_injector.getInstance(org.apache.ambari.annotations.TransactionalLockInterceptorTest.TestObject.class);\n    testObject.testMultipleNestedLocks();\n    org.easymock.EasyMock.verify(transactionalLocks, readWriteLock, readLock, writeLock);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockInterceptorTest.java",
  "refactorings": "# Refactorings in commit ab8d58ba4464791b95b56be75fd44ce9c20349c6\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public Stage(stageEntity StageEntity, hostRoleCommandDAO HostRoleCommandDAO, dbAccessor ActionDBAccessor, clusters Clusters, hostRoleCommandFactory HostRoleCommandFactory, ecwFactory ExecutionCommandWrapperFactory) from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cHostRoleCommandEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cRoleSuccessCriteriaEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method package loadExecutionCommandWrappers() : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tConcurrentLinkedQueue\u003cAgentCommand\u003e with ConcurrentLinkedQueue\u003c\u003e in method private getHostQueue(hostname String) : Queue\u003cAgentCommand\u003e from class org.apache.ambari.server.agent.ActionQueue\n\n- Replace Generic With Diamond\tHashMap\u003cString,Boolean\u003e with HashMap\u003c\u003e in method private getPerHostRequiresExecCmdDetails(host String) : Map\u003cString,Boolean\u003e from class org.apache.ambari.server.agent.AgentRequests\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public handleComponents(clusterName String) : ComponentsResponse from class org.apache.ambari.server.agent.HeartBeatHandler\n\n- Replace Generic With Diamond\tTreeSet\u003cString\u003e with TreeSet\u003c\u003e in method package execute(cluster Cluster, myDefinition AlertDefinitionEntity) : List\u003cAlert\u003e from class org.apache.ambari.server.alerts.StaleAlertRunnable\n\n- Replace Generic With Diamond\tHashMap\u003cString,ResourceInstance\u003e with HashMap\u003c\u003e in method public getSubResources() : Map\u003cString,ResourceInstance\u003e from class org.apache.ambari.server.api.query.QueryImpl\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n... and 533 more refactorings in this commit\n",
  "assertion_lines": [],
  "annotations": "No Annotations",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "testLockMethodAsChildOfActiveTransaction[]",
  "test_body": "{\n    transactionMethodCallingAnotherWithLock();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockInterceptorTest.java",
  "refactorings": "# Refactorings in commit ab8d58ba4464791b95b56be75fd44ce9c20349c6\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public Stage(stageEntity StageEntity, hostRoleCommandDAO HostRoleCommandDAO, dbAccessor ActionDBAccessor, clusters Clusters, hostRoleCommandFactory HostRoleCommandFactory, ecwFactory ExecutionCommandWrapperFactory) from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cHostRoleCommandEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cRoleSuccessCriteriaEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method package loadExecutionCommandWrappers() : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tConcurrentLinkedQueue\u003cAgentCommand\u003e with ConcurrentLinkedQueue\u003c\u003e in method private getHostQueue(hostname String) : Queue\u003cAgentCommand\u003e from class org.apache.ambari.server.agent.ActionQueue\n\n- Replace Generic With Diamond\tHashMap\u003cString,Boolean\u003e with HashMap\u003c\u003e in method private getPerHostRequiresExecCmdDetails(host String) : Map\u003cString,Boolean\u003e from class org.apache.ambari.server.agent.AgentRequests\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public handleComponents(clusterName String) : ComponentsResponse from class org.apache.ambari.server.agent.HeartBeatHandler\n\n- Replace Generic With Diamond\tTreeSet\u003cString\u003e with TreeSet\u003c\u003e in method package execute(cluster Cluster, myDefinition AlertDefinitionEntity) : List\u003cAlert\u003e from class org.apache.ambari.server.alerts.StaleAlertRunnable\n\n- Replace Generic With Diamond\tHashMap\u003cString,ResourceInstance\u003e with HashMap\u003c\u003e in method public getSubResources() : Map\u003cString,ResourceInstance\u003e from class org.apache.ambari.server.api.query.QueryImpl\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n... and 533 more refactorings in this commit\n",
  "assertion_lines": [],
  "annotations": "No Annotations",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "testMultipleLocks[]",
  "test_body": "{\n    transactionMethodWithLock();\n    transactionMethodWithLock();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockInterceptorTest.java",
  "refactorings": "# Refactorings in commit ab8d58ba4464791b95b56be75fd44ce9c20349c6\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tTreeMap\u003cString,Map\u003cString,String\u003e\u003e with TreeMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public getExecutionCommand() : ExecutionCommand from class org.apache.ambari.server.actionmanager.ExecutionCommandWrapper\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public Stage(stageEntity StageEntity, hostRoleCommandDAO HostRoleCommandDAO, dbAccessor ActionDBAccessor, clusters Clusters, hostRoleCommandFactory HostRoleCommandFactory, ecwFactory ExecutionCommandWrapperFactory) from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cHostRoleCommandEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cRoleSuccessCriteriaEntity\u003e with ArrayList\u003c\u003e in method public constructNewPersistenceEntity() : StageEntity from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method package loadExecutionCommandWrappers() : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tArrayList\u003cExecutionCommandWrapper\u003e with ArrayList\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tLinkedHashMap\u003cString,HostRoleCommand\u003e with LinkedHashMap\u003c\u003e in method public addExecutionCommandWrapper(origStage Stage, hostname String, r Role) : void from class org.apache.ambari.server.actionmanager.Stage\n\n- Replace Generic With Diamond\tConcurrentLinkedQueue\u003cAgentCommand\u003e with ConcurrentLinkedQueue\u003c\u003e in method private getHostQueue(hostname String) : Queue\u003cAgentCommand\u003e from class org.apache.ambari.server.agent.ActionQueue\n\n- Replace Generic With Diamond\tHashMap\u003cString,Boolean\u003e with HashMap\u003c\u003e in method private getPerHostRequiresExecCmdDetails(host String) : Map\u003cString,Boolean\u003e from class org.apache.ambari.server.agent.AgentRequests\n\n- Replace Generic With Diamond\tHashMap\u003cString,String\u003e with HashMap\u003c\u003e in method public handleComponents(clusterName String) : ComponentsResponse from class org.apache.ambari.server.agent.HeartBeatHandler\n\n- Replace Generic With Diamond\tTreeSet\u003cString\u003e with TreeSet\u003c\u003e in method package execute(cluster Cluster, myDefinition AlertDefinitionEntity) : List\u003cAlert\u003e from class org.apache.ambari.server.alerts.StaleAlertRunnable\n\n- Replace Generic With Diamond\tHashMap\u003cString,ResourceInstance\u003e with HashMap\u003c\u003e in method public getSubResources() : Map\u003cString,ResourceInstance\u003e from class org.apache.ambari.server.api.query.QueryImpl\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n- Replace Generic With Diamond\tHashSet\u003cString\u003e with HashSet\u003c\u003e in method public finalizeProperties(queryProperties TreeNode\u003cQueryInfo\u003e, isCollection boolean) : TreeNode\u003cSet\u003cString\u003e\u003e from class org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer\n\n... and 533 more refactorings in this commit\n",
  "assertion_lines": [],
  "annotations": "No Annotations",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "testMultipleNestedLocks[]",
  "test_body": "{\n    transactionMethodWithLockCallingAnotherWithLock();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockTest.java",
  "refactorings": "# Refactorings in commit b1a63404a0efb7fabce77f7a87df1033f8cf2fe0\n\n- Rename Method\tpublic getProperty(key String, defaultValue String) : String renamed to public setProperty(configurationProperty ConfigurationProperty\u003cString\u003e, value String) : void in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Access Modifier\tpublic to private in attribute private CONFIG_FILE : String from class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tVIEWS_VALIDATE : String to VIEWS_VALIDATE : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tVIEWS_REMOVE_UNDEPLOYED : String to VIEWS_REMOVE_UNDEPLOYED : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tBOOTSTRAP_SCRIPT : String to BOOTSTRAP_SCRIPT : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tBOOTSTRAP_SETUP_AGENT_SCRIPT : String to BOOTSTRAP_SETUP_AGENT_SCRIPT : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tBOOTSTRAP_SETUP_AGENT_PASSWORD : String to BOOTSTRAP_SETUP_AGENT_PASSWORD : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tBOOTSTRAP_MASTER_HOSTNAME : String to BOOTSTRAP_MASTER_HOSTNAME : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tRECOMMENDATIONS_ARTIFACTS_LIFETIME : String to RECOMMENDATIONS_ARTIFACTS_LIFETIME : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tRECOMMENDATIONS_DIR : String to RECOMMENDATIONS_DIR : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tSTACK_ADVISOR_SCRIPT : String to STACK_ADVISOR_SCRIPT : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tAPI_AUTHENTICATED_USER : String to API_AUTHENTICATED_USER : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tAPI_USE_SSL : String to API_USE_SSL : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tAGENT_USE_SSL : String to AGENT_USE_SSL : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tSRVR_DISABLED_CIPHERS : String to SRVR_DISABLED_CIPHERS : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tSRVR_DISABLED_PROTOCOLS : String to SRVR_DISABLED_PROTOCOLS : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tMETADATA_DIR_PATH : String to METADATA_DIR_PATH : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tCOMMON_SERVICES_DIR_PATH : String to COMMON_SERVICES_DIR_PATH : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tEXTENSIONS_DIR_PATH : String to EXTENSIONS_DIR_PATH : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tMPACKS_STAGING_DIR_PATH : String to MPACKS_STAGING_DIR_PATH : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n... and 189 more refactorings in this commit\n",
  "assertion_lines": [
    48
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "junit.framework.Assert.assertTrue(lockArea.isEnabled(configuration))",
  "test_method_name": "testLockAreaEnabled[]",
  "test_body": "{\n    final java.util.Properties ambariProperties \u003d new java.util.Properties();\n    ambariProperties.put(org.apache.ambari.server.configuration.Configuration.SERVER_HRC_STATUS_SUMMARY_CACHE_ENABLED.getKey(), \"true\");\n    org.apache.ambari.server.configuration.Configuration configuration \u003d new org.apache.ambari.server.configuration.Configuration(ambariProperties);\n    org.apache.ambari.annotations.TransactionalLock.LockArea lockArea \u003d org.apache.ambari.annotations.TransactionalLock.LockArea.HRC_STATUS_CACHE;\n    lockArea.clearEnabled();\n    junit.framework.Assert.assertTrue(lockArea.isEnabled(configuration));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockTest.java",
  "refactorings": "# Refactorings in commit b1a63404a0efb7fabce77f7a87df1033f8cf2fe0\n\n- Rename Method\tpublic getProperty(key String, defaultValue String) : String renamed to public setProperty(configurationProperty ConfigurationProperty\u003cString\u003e, value String) : void in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Access Modifier\tpublic to private in attribute private CONFIG_FILE : String from class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tVIEWS_VALIDATE : String to VIEWS_VALIDATE : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tVIEWS_REMOVE_UNDEPLOYED : String to VIEWS_REMOVE_UNDEPLOYED : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tBOOTSTRAP_SCRIPT : String to BOOTSTRAP_SCRIPT : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tBOOTSTRAP_SETUP_AGENT_SCRIPT : String to BOOTSTRAP_SETUP_AGENT_SCRIPT : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tBOOTSTRAP_SETUP_AGENT_PASSWORD : String to BOOTSTRAP_SETUP_AGENT_PASSWORD : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tBOOTSTRAP_MASTER_HOSTNAME : String to BOOTSTRAP_MASTER_HOSTNAME : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tRECOMMENDATIONS_ARTIFACTS_LIFETIME : String to RECOMMENDATIONS_ARTIFACTS_LIFETIME : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tRECOMMENDATIONS_DIR : String to RECOMMENDATIONS_DIR : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tSTACK_ADVISOR_SCRIPT : String to STACK_ADVISOR_SCRIPT : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tAPI_AUTHENTICATED_USER : String to API_AUTHENTICATED_USER : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tAPI_USE_SSL : String to API_USE_SSL : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tAGENT_USE_SSL : String to AGENT_USE_SSL : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tSRVR_DISABLED_CIPHERS : String to SRVR_DISABLED_CIPHERS : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tSRVR_DISABLED_PROTOCOLS : String to SRVR_DISABLED_PROTOCOLS : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tMETADATA_DIR_PATH : String to METADATA_DIR_PATH : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tCOMMON_SERVICES_DIR_PATH : String to COMMON_SERVICES_DIR_PATH : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tEXTENSIONS_DIR_PATH : String to EXTENSIONS_DIR_PATH : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tMPACKS_STAGING_DIR_PATH : String to MPACKS_STAGING_DIR_PATH : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n... and 189 more refactorings in this commit\n",
  "assertion_lines": [
    63
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "junit.framework.Assert.assertFalse(lockArea.isEnabled(configuration))",
  "test_method_name": "testLockAreaEnabledDisabled[]",
  "test_body": "{\n    final java.util.Properties ambariProperties \u003d new java.util.Properties();\n    ambariProperties.put(org.apache.ambari.server.configuration.Configuration.SERVER_HRC_STATUS_SUMMARY_CACHE_ENABLED.getKey(), \"false\");\n    org.apache.ambari.server.configuration.Configuration configuration \u003d new org.apache.ambari.server.configuration.Configuration(ambariProperties);\n    org.apache.ambari.annotations.TransactionalLock.LockArea lockArea \u003d org.apache.ambari.annotations.TransactionalLock.LockArea.HRC_STATUS_CACHE;\n    lockArea.clearEnabled();\n    junit.framework.Assert.assertFalse(lockArea.isEnabled(configuration));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/annotations/TransactionalLockTest.java",
  "refactorings": "# Refactorings in commit b1a63404a0efb7fabce77f7a87df1033f8cf2fe0\n\n- Rename Method\tpublic getProperty(key String, defaultValue String) : String renamed to public setProperty(configurationProperty ConfigurationProperty\u003cString\u003e, value String) : void in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Access Modifier\tpublic to private in attribute private CONFIG_FILE : String from class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tVIEWS_VALIDATE : String to VIEWS_VALIDATE : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tVIEWS_REMOVE_UNDEPLOYED : String to VIEWS_REMOVE_UNDEPLOYED : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tBOOTSTRAP_SCRIPT : String to BOOTSTRAP_SCRIPT : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tBOOTSTRAP_SETUP_AGENT_SCRIPT : String to BOOTSTRAP_SETUP_AGENT_SCRIPT : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tBOOTSTRAP_SETUP_AGENT_PASSWORD : String to BOOTSTRAP_SETUP_AGENT_PASSWORD : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tBOOTSTRAP_MASTER_HOSTNAME : String to BOOTSTRAP_MASTER_HOSTNAME : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tRECOMMENDATIONS_ARTIFACTS_LIFETIME : String to RECOMMENDATIONS_ARTIFACTS_LIFETIME : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tRECOMMENDATIONS_DIR : String to RECOMMENDATIONS_DIR : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tSTACK_ADVISOR_SCRIPT : String to STACK_ADVISOR_SCRIPT : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tAPI_AUTHENTICATED_USER : String to API_AUTHENTICATED_USER : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tAPI_USE_SSL : String to API_USE_SSL : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tAGENT_USE_SSL : String to AGENT_USE_SSL : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tSRVR_DISABLED_CIPHERS : String to SRVR_DISABLED_CIPHERS : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tSRVR_DISABLED_PROTOCOLS : String to SRVR_DISABLED_PROTOCOLS : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tMETADATA_DIR_PATH : String to METADATA_DIR_PATH : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tCOMMON_SERVICES_DIR_PATH : String to COMMON_SERVICES_DIR_PATH : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tEXTENSIONS_DIR_PATH : String to EXTENSIONS_DIR_PATH : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n- Change Attribute Type\tMPACKS_STAGING_DIR_PATH : String to MPACKS_STAGING_DIR_PATH : ConfigurationProperty\u003cString\u003e in class org.apache.ambari.server.configuration.Configuration\n\n... and 189 more refactorings in this commit\n",
  "assertion_lines": [
    86,
    87
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 2,
  "assertion_type": "junit.framework.Assert.assertEquals(2, annotations.size()), junit.framework.Assert.assertEquals(3, annotationsFound)",
  "test_method_name": "testAnnotationEquality[]",
  "test_body": "{\n    java.util.HashSet\u003corg.apache.ambari.annotations.TransactionalLock\u003e annotations \u003d new java.util.HashSet\u003c\u003e();\n    int annotationsFound \u003d 0;\n    java.lang.reflect.Method[] methods \u003d getClass().getDeclaredMethods();\n    for (java.lang.reflect.Method method : methods) {\n        org.apache.ambari.annotations.TransactionalLock annotation \u003d method.getAnnotation(org.apache.ambari.annotations.TransactionalLock.class);\n        if (null !\u003d annotation) {\n            annotations.add(annotation);\n            annotationsFound++;\n        }\n    }\n    junit.framework.Assert.assertEquals(2, annotations.size());\n    junit.framework.Assert.assertEquals(3, annotationsFound);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/StateRecoveryManagerTest.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [
    117,
    118,
    119,
    120,
    121,
    122,
    123,
    124,
    127,
    128,
    129,
    130,
    131,
    132,
    133
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 15,
  "assertion_type": "org.junit.Assert.assertFalse(installFailedHostVersionCapture.hasCaptured()), org.junit.Assert.assertEquals(installingHostVersionCapture.getValue(), org.apache.ambari.server.state.RepositoryVersionState.INSTALL_FAILED), org.junit.Assert.assertFalse(installedHostVersionCapture.hasCaptured()), org.junit.Assert.assertFalse(outOfSyncHostVersionCapture.hasCaptured()), org.junit.Assert.assertFalse(upgradeFailedHostVersionCapture.hasCaptured()), org.junit.Assert.assertFalse(upgradingHostVersionCapture.hasCaptured()), org.junit.Assert.assertFalse(upgradedHostVersionCapture.hasCaptured()), org.junit.Assert.assertFalse(currentHostVersionCapture.hasCaptured()), org.junit.Assert.assertFalse(installFailedClusterVersionCapture.hasCaptured()), org.junit.Assert.assertEquals(installingClusterVersionCapture.getValue(), org.apache.ambari.server.state.RepositoryVersionState.INSTALL_FAILED), org.junit.Assert.assertFalse(installedClusterVersionCapture.hasCaptured()), org.junit.Assert.assertFalse(outOfSyncClusterVersionCapture.hasCaptured()), org.junit.Assert.assertFalse(upgradeFailedClusterVersionCapture.hasCaptured()), org.junit.Assert.assertFalse(upgradingClusterVersionCapture.hasCaptured()), org.junit.Assert.assertFalse(upgradedClusterVersionCapture.hasCaptured())",
  "test_method_name": "testCheckHostAndClusterVersions[]",
  "test_body": "{\n    org.apache.ambari.server.StateRecoveryManager stateRecoveryManager \u003d injector.getInstance(org.apache.ambari.server.StateRecoveryManager.class);\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e installFailedHostVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e installingHostVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e installedHostVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e outOfSyncHostVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e upgradeFailedHostVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e upgradingHostVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e upgradedHostVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e currentHostVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    org.easymock.EasyMock.expect(hostVersionDAOMock.findAll()).andReturn(com.google.common.collect.Lists.newArrayList(getHostVersionMock(\"install_failed_version\", org.apache.ambari.server.state.RepositoryVersionState.INSTALL_FAILED, installFailedHostVersionCapture), getHostVersionMock(\"installing_version\", org.apache.ambari.server.state.RepositoryVersionState.INSTALLING, installingHostVersionCapture), getHostVersionMock(\"installed_version\", org.apache.ambari.server.state.RepositoryVersionState.INSTALLED, installedHostVersionCapture), getHostVersionMock(\"out_of_sync_version\", org.apache.ambari.server.state.RepositoryVersionState.OUT_OF_SYNC, outOfSyncHostVersionCapture)));\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e installFailedClusterVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e installingClusterVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e installedClusterVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e outOfSyncClusterVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e upgradeFailedClusterVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e upgradingClusterVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    final org.easymock.Capture\u003corg.apache.ambari.server.state.RepositoryVersionState\u003e upgradedClusterVersionCapture \u003d org.easymock.EasyMock.newCapture();\n    org.easymock.EasyMock.expect(serviceComponentDesiredStateDAOMock.findAll()).andReturn(com.google.common.collect.Lists.newArrayList(getDesiredStateEntityMock(\"install_failed_version\", org.apache.ambari.server.state.RepositoryVersionState.INSTALL_FAILED, installFailedClusterVersionCapture), getDesiredStateEntityMock(\"installing_version\", org.apache.ambari.server.state.RepositoryVersionState.INSTALLING, installingClusterVersionCapture), getDesiredStateEntityMock(\"installed_version\", org.apache.ambari.server.state.RepositoryVersionState.INSTALLED, installedClusterVersionCapture), getDesiredStateEntityMock(\"out_of_sync_version\", org.apache.ambari.server.state.RepositoryVersionState.OUT_OF_SYNC, outOfSyncClusterVersionCapture)));\n    org.easymock.EasyMock.replay(hostVersionDAOMock, serviceComponentDesiredStateDAOMock);\n    stateRecoveryManager.checkHostAndClusterVersions();\n    org.junit.Assert.assertFalse(installFailedHostVersionCapture.hasCaptured());\n    org.junit.Assert.assertEquals(installingHostVersionCapture.getValue(), org.apache.ambari.server.state.RepositoryVersionState.INSTALL_FAILED);\n    org.junit.Assert.assertFalse(installedHostVersionCapture.hasCaptured());\n    org.junit.Assert.assertFalse(outOfSyncHostVersionCapture.hasCaptured());\n    org.junit.Assert.assertFalse(upgradeFailedHostVersionCapture.hasCaptured());\n    org.junit.Assert.assertFalse(upgradingHostVersionCapture.hasCaptured());\n    org.junit.Assert.assertFalse(upgradedHostVersionCapture.hasCaptured());\n    org.junit.Assert.assertFalse(currentHostVersionCapture.hasCaptured());\n    org.junit.Assert.assertFalse(installFailedClusterVersionCapture.hasCaptured());\n    org.junit.Assert.assertEquals(installingClusterVersionCapture.getValue(), org.apache.ambari.server.state.RepositoryVersionState.INSTALL_FAILED);\n    org.junit.Assert.assertFalse(installedClusterVersionCapture.hasCaptured());\n    org.junit.Assert.assertFalse(outOfSyncClusterVersionCapture.hasCaptured());\n    org.junit.Assert.assertFalse(upgradeFailedClusterVersionCapture.hasCaptured());\n    org.junit.Assert.assertFalse(upgradingClusterVersionCapture.hasCaptured());\n    org.junit.Assert.assertFalse(upgradedClusterVersionCapture.hasCaptured());\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/CloseablesTest.java",
  "refactorings": "# Refactorings in commit 749a5b2dc583a5571b28e2710f0018abe7f12383\n\n- Rename Variable\te : Exception to ignored : Exception in method private updateStatus(status BSHostStatus, statusCode String) : void from class org.apache.ambari.server.bootstrap.BSHostStatusCollector\n\n- Rename Variable\te : IllegalThreadStateException to ignored : IllegalThreadStateException in method private waitForProcessTermination(process Process, timeout long) : boolean from class org.apache.ambari.server.bootstrap.BSRunner\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public initialize(cluster Cluster) : void from class org.apache.ambari.server.metadata.RoleCommandOrder\n\n- Rename Variable\te : InterruptedException to ignored : InterruptedException in method protected invokeKAdmin(query String, userPassword String) : ShellCommandUtil.Result from class org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler\n\n- Rename Variable\tex : Exception to ignored : Exception in method public getPropertyValuesWithPropertyType(stackId StackId, propertyType PropertyType, cluster Cluster, desiredConfigs Map\u003cString,DesiredConfig\u003e) : Set\u003cString\u003e from class org.apache.ambari.server.state.ConfigHelper\n\n- Replace Generic With Diamond\tTreeMap\u003cString,ThemeInfo\u003e with TreeMap\u003c\u003e in method public getThemesMap() : Map\u003cString,ThemeInfo\u003e from class org.apache.ambari.server.state.ServiceInfo\n\n- Replace Generic With Diamond\tTreeMap\u003cString,QuickLinksConfigurationInfo\u003e with TreeMap\u003c\u003e in method public getQuickLinksConfigurationsMap() : Map\u003cString,QuickLinksConfigurationInfo\u003e from class org.apache.ambari.server.state.ServiceInfo\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getConfigPropertiesTypes(configType String) : Map\u003cPropertyInfo.PropertyType,Set\u003cString\u003e\u003e from class org.apache.ambari.server.state.cluster.ClusterImpl\n\n- Rename Variable\tex : MalformedURLException to ignored : MalformedURLException in method protected isProxyCallAllowed(spec String) : boolean from class org.apache.ambari.server.view.ViewURLStreamProvider\n\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "silentIfSucceeds[]",
  "test_body": "{\n    java.io.Closeable normalCloseable \u003d org.easymock.EasyMock.createNiceMock(java.io.Closeable.class);\n    normalCloseable.close();\n    org.powermock.api.easymock.PowerMock.replayAll();\n    org.apache.ambari.server.utils.Closeables.closeSilently(normalCloseable);\n    org.powermock.api.easymock.PowerMock.verifyAll();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/CloseablesTest.java",
  "refactorings": "# Refactorings in commit 749a5b2dc583a5571b28e2710f0018abe7f12383\n\n- Rename Variable\te : Exception to ignored : Exception in method private updateStatus(status BSHostStatus, statusCode String) : void from class org.apache.ambari.server.bootstrap.BSHostStatusCollector\n\n- Rename Variable\te : IllegalThreadStateException to ignored : IllegalThreadStateException in method private waitForProcessTermination(process Process, timeout long) : boolean from class org.apache.ambari.server.bootstrap.BSRunner\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public initialize(cluster Cluster) : void from class org.apache.ambari.server.metadata.RoleCommandOrder\n\n- Rename Variable\te : InterruptedException to ignored : InterruptedException in method protected invokeKAdmin(query String, userPassword String) : ShellCommandUtil.Result from class org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler\n\n- Rename Variable\tex : Exception to ignored : Exception in method public getPropertyValuesWithPropertyType(stackId StackId, propertyType PropertyType, cluster Cluster, desiredConfigs Map\u003cString,DesiredConfig\u003e) : Set\u003cString\u003e from class org.apache.ambari.server.state.ConfigHelper\n\n- Replace Generic With Diamond\tTreeMap\u003cString,ThemeInfo\u003e with TreeMap\u003c\u003e in method public getThemesMap() : Map\u003cString,ThemeInfo\u003e from class org.apache.ambari.server.state.ServiceInfo\n\n- Replace Generic With Diamond\tTreeMap\u003cString,QuickLinksConfigurationInfo\u003e with TreeMap\u003c\u003e in method public getQuickLinksConfigurationsMap() : Map\u003cString,QuickLinksConfigurationInfo\u003e from class org.apache.ambari.server.state.ServiceInfo\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getConfigPropertiesTypes(configType String) : Map\u003cPropertyInfo.PropertyType,Set\u003cString\u003e\u003e from class org.apache.ambari.server.state.cluster.ClusterImpl\n\n- Rename Variable\tex : MalformedURLException to ignored : MalformedURLException in method protected isProxyCallAllowed(spec String) : boolean from class org.apache.ambari.server.view.ViewURLStreamProvider\n\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "silentIfThrows[]",
  "test_body": "{\n    java.io.Closeable throwingCloseable \u003d org.easymock.EasyMock.createNiceMock(java.io.Closeable.class);\n    throwingCloseable.close();\n    org.easymock.EasyMock.expectLastCall().andThrow(new java.io.IOException());\n    org.powermock.api.easymock.PowerMock.replayAll();\n    org.apache.ambari.server.utils.Closeables.closeSilently(throwingCloseable);\n    org.powermock.api.easymock.PowerMock.verifyAll();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/CloseablesTest.java",
  "refactorings": "# Refactorings in commit 749a5b2dc583a5571b28e2710f0018abe7f12383\n\n- Rename Variable\te : Exception to ignored : Exception in method private updateStatus(status BSHostStatus, statusCode String) : void from class org.apache.ambari.server.bootstrap.BSHostStatusCollector\n\n- Rename Variable\te : IllegalThreadStateException to ignored : IllegalThreadStateException in method private waitForProcessTermination(process Process, timeout long) : boolean from class org.apache.ambari.server.bootstrap.BSRunner\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public initialize(cluster Cluster) : void from class org.apache.ambari.server.metadata.RoleCommandOrder\n\n- Rename Variable\te : InterruptedException to ignored : InterruptedException in method protected invokeKAdmin(query String, userPassword String) : ShellCommandUtil.Result from class org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler\n\n- Rename Variable\tex : Exception to ignored : Exception in method public getPropertyValuesWithPropertyType(stackId StackId, propertyType PropertyType, cluster Cluster, desiredConfigs Map\u003cString,DesiredConfig\u003e) : Set\u003cString\u003e from class org.apache.ambari.server.state.ConfigHelper\n\n- Replace Generic With Diamond\tTreeMap\u003cString,ThemeInfo\u003e with TreeMap\u003c\u003e in method public getThemesMap() : Map\u003cString,ThemeInfo\u003e from class org.apache.ambari.server.state.ServiceInfo\n\n- Replace Generic With Diamond\tTreeMap\u003cString,QuickLinksConfigurationInfo\u003e with TreeMap\u003c\u003e in method public getQuickLinksConfigurationsMap() : Map\u003cString,QuickLinksConfigurationInfo\u003e from class org.apache.ambari.server.state.ServiceInfo\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getConfigPropertiesTypes(configType String) : Map\u003cPropertyInfo.PropertyType,Set\u003cString\u003e\u003e from class org.apache.ambari.server.state.cluster.ClusterImpl\n\n- Rename Variable\tex : MalformedURLException to ignored : MalformedURLException in method protected isProxyCallAllowed(spec String) : boolean from class org.apache.ambari.server.view.ViewURLStreamProvider\n\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "succeedsWithoutLog[]",
  "test_body": "{\n    java.io.Closeable normalCloseable \u003d org.easymock.EasyMock.createNiceMock(java.io.Closeable.class);\n    org.slf4j.Logger logger \u003d org.easymock.EasyMock.createStrictMock(org.slf4j.Logger.class);\n    normalCloseable.close();\n    org.powermock.api.easymock.PowerMock.replayAll();\n    org.apache.ambari.server.utils.Closeables.closeLoggingExceptions(normalCloseable, logger);\n    org.powermock.api.easymock.PowerMock.verifyAll();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/CloseablesTest.java",
  "refactorings": "# Refactorings in commit 749a5b2dc583a5571b28e2710f0018abe7f12383\n\n- Rename Variable\te : Exception to ignored : Exception in method private updateStatus(status BSHostStatus, statusCode String) : void from class org.apache.ambari.server.bootstrap.BSHostStatusCollector\n\n- Rename Variable\te : IllegalThreadStateException to ignored : IllegalThreadStateException in method private waitForProcessTermination(process Process, timeout long) : boolean from class org.apache.ambari.server.bootstrap.BSRunner\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public initialize(cluster Cluster) : void from class org.apache.ambari.server.metadata.RoleCommandOrder\n\n- Rename Variable\te : InterruptedException to ignored : InterruptedException in method protected invokeKAdmin(query String, userPassword String) : ShellCommandUtil.Result from class org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler\n\n- Rename Variable\tex : Exception to ignored : Exception in method public getPropertyValuesWithPropertyType(stackId StackId, propertyType PropertyType, cluster Cluster, desiredConfigs Map\u003cString,DesiredConfig\u003e) : Set\u003cString\u003e from class org.apache.ambari.server.state.ConfigHelper\n\n- Replace Generic With Diamond\tTreeMap\u003cString,ThemeInfo\u003e with TreeMap\u003c\u003e in method public getThemesMap() : Map\u003cString,ThemeInfo\u003e from class org.apache.ambari.server.state.ServiceInfo\n\n- Replace Generic With Diamond\tTreeMap\u003cString,QuickLinksConfigurationInfo\u003e with TreeMap\u003c\u003e in method public getQuickLinksConfigurationsMap() : Map\u003cString,QuickLinksConfigurationInfo\u003e from class org.apache.ambari.server.state.ServiceInfo\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getConfigPropertiesTypes(configType String) : Map\u003cPropertyInfo.PropertyType,Set\u003cString\u003e\u003e from class org.apache.ambari.server.state.cluster.ClusterImpl\n\n- Rename Variable\tex : MalformedURLException to ignored : MalformedURLException in method protected isProxyCallAllowed(spec String) : boolean from class org.apache.ambari.server.view.ViewURLStreamProvider\n\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "warnWithThrownException[]",
  "test_body": "{\n    java.io.Closeable throwingCloseable \u003d org.easymock.EasyMock.createNiceMock(java.io.Closeable.class);\n    org.slf4j.Logger logger \u003d org.easymock.EasyMock.createNiceMock(org.slf4j.Logger.class);\n    java.io.IOException e \u003d new java.io.IOException();\n    throwingCloseable.close();\n    org.easymock.EasyMock.expectLastCall().andThrow(e);\n    logger.warn(org.easymock.EasyMock.anyString(), org.easymock.EasyMock.eq(e));\n    org.powermock.api.easymock.PowerMock.replayAll();\n    org.apache.ambari.server.utils.Closeables.closeLoggingExceptions(throwingCloseable, logger);\n    org.powermock.api.easymock.PowerMock.verifyAll();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/CloseablesTest.java",
  "refactorings": "# Refactorings in commit 749a5b2dc583a5571b28e2710f0018abe7f12383\n\n- Rename Variable\te : Exception to ignored : Exception in method private updateStatus(status BSHostStatus, statusCode String) : void from class org.apache.ambari.server.bootstrap.BSHostStatusCollector\n\n- Rename Variable\te : IllegalThreadStateException to ignored : IllegalThreadStateException in method private waitForProcessTermination(process Process, timeout long) : boolean from class org.apache.ambari.server.bootstrap.BSRunner\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getRoleCommandOrder(cluster Cluster) : RoleCommandOrder from class org.apache.ambari.server.metadata.CachedRoleCommandOrderProvider\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public initialize(cluster Cluster) : void from class org.apache.ambari.server.metadata.RoleCommandOrder\n\n- Rename Variable\te : InterruptedException to ignored : InterruptedException in method protected invokeKAdmin(query String, userPassword String) : ShellCommandUtil.Result from class org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler\n\n- Rename Variable\tex : Exception to ignored : Exception in method public getPropertyValuesWithPropertyType(stackId StackId, propertyType PropertyType, cluster Cluster, desiredConfigs Map\u003cString,DesiredConfig\u003e) : Set\u003cString\u003e from class org.apache.ambari.server.state.ConfigHelper\n\n- Replace Generic With Diamond\tTreeMap\u003cString,ThemeInfo\u003e with TreeMap\u003c\u003e in method public getThemesMap() : Map\u003cString,ThemeInfo\u003e from class org.apache.ambari.server.state.ServiceInfo\n\n- Replace Generic With Diamond\tTreeMap\u003cString,QuickLinksConfigurationInfo\u003e with TreeMap\u003c\u003e in method public getQuickLinksConfigurationsMap() : Map\u003cString,QuickLinksConfigurationInfo\u003e from class org.apache.ambari.server.state.ServiceInfo\n\n- Rename Variable\te : AmbariException to ignored : AmbariException in method public getConfigPropertiesTypes(configType String) : Map\u003cPropertyInfo.PropertyType,Set\u003cString\u003e\u003e from class org.apache.ambari.server.state.cluster.ClusterImpl\n\n- Rename Variable\tex : MalformedURLException to ignored : MalformedURLException in method protected isProxyCallAllowed(spec String) : boolean from class org.apache.ambari.server.view.ViewURLStreamProvider\n\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "ignoresNullCloseable[]",
  "test_body": "{\n    org.apache.ambari.server.utils.Closeables.closeSilently(null);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/CollectionPresentationUtils.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [
    70,
    71,
    72
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 3,
  "assertion_type": "junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection(input1, expected, \",\", 1, 1)), junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection(input2, expected, \",\", 1, 1)), junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection(input3, expected, \",\", 1, 1))",
  "test_method_name": "testIsStringPermutationOfCollection[]",
  "test_body": "{\n    java.lang.String input1 \u003d \"{\\\"foo\\\":\\\"bar\\\",\\\"foobar\\\":\\\"baz\\\"}\";\n    java.lang.String input2 \u003d \"{\\\"foobar\\\":\\\"baz\\\",\\\"foo\\\":\\\"bar\\\"}\";\n    java.lang.String input3 \u003d \"{\\\"fooba\\\":\\\"baz\\\",\\\"foo\\\":\\\"bar\\\"}\";\n    java.util.Set\u003cjava.lang.String\u003e expected \u003d new java.util.HashSet\u003c\u003e(java.util.Arrays.asList(new java.lang.String[]{ \"\\\"foo\\\":\\\"bar\\\"\", \"\\\"foobar\\\":\\\"baz\\\"\" }));\n    junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection(input1, expected, \",\", 1, 1));\n    junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection(input2, expected, \",\", 1, 1));\n    junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.CollectionPresentationUtils.isStringPermutationOfCollection(input3, expected, \",\", 1, 1));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/HostUtilsTest.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [
    30,
    31,
    32,
    33,
    34,
    35,
    36,
    39,
    40,
    41,
    42,
    43,
    44,
    45
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 14,
  "assertion_type": "junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"localhost\")), junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"localhost.localdomain\")), junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host1.example.com\")), junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"Host1.eXample.coM\")), junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host-name.example.com\")), junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"123.456.789\")), junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host-123-name.ex4mpl3.c0m\")), junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host_name.example.com\")), junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host;name.example.com\")), junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host?name.example.com\")), junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host@name.example.com\")), junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host\u003dname.example.com\")), junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host+name.example.com\")), junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host)name).example.com\"))",
  "test_method_name": "testIsValidHostname[]",
  "test_body": "{\n    junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"localhost\"));\n    junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"localhost.localdomain\"));\n    junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host1.example.com\"));\n    junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"Host1.eXample.coM\"));\n    junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host-name.example.com\"));\n    junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"123.456.789\"));\n    junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host-123-name.ex4mpl3.c0m\"));\n    junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host_name.example.com\"));\n    junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host;name.example.com\"));\n    junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host?name.example.com\"));\n    junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host@name.example.com\"));\n    junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host\u003dname.example.com\"));\n    junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host+name.example.com\"));\n    junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.HostUtils.isValidHostname(\"host)name).example.com\"));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/ManagedThreadPoolExecutorTest.java",
  "refactorings": "# Refactorings in commit 305a1c056e93a2250008f6aebeb708c83889100c\n\n- Rename Method\tpublic testGetHostAndPortFromProperty() : void renamed to public canBeStartedAndStopped() : void in class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n- Extract Method\tprivate createExecutor(poolSize int) : ManagedThreadPoolExecutor extracted from public testGetHostAndPortFromProperty() : void in class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n- Replace Generic With Diamond\tManagedThreadPoolExecutor with ManagedThreadPoolExecutor in method private createExecutor(poolSize int) : ManagedThreadPoolExecutor from class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n- Replace Anonymous With Lambda\torg.apache.ambari.server.utils.ManagedThreadPoolExecutorTest.testGetHostAndPortFromProperty.feature.submit.new Callable\u003cBoolean\u003e with () -\u003e Boolean.TRUE in method public canBeStartedAndStopped() : void from class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n- Rename Variable\ttopologyTaskExecutor : ManagedThreadPoolExecutor to executor : ManagedThreadPoolExecutor in method public canBeStartedAndStopped() : void from class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n",
  "assertion_lines": [
    36,
    37
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertFalse(executor.isRunning())",
  "test_method_name": "isStoppedAfterCreation[]",
  "test_body": "{\n    org.apache.ambari.server.utils.ManagedThreadPoolExecutor executor \u003d org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest.createExecutor(1);\n    executor.execute(org.junit.Assert::fail);\n    org.junit.Assert.assertFalse(executor.isRunning());\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/ManagedThreadPoolExecutorTest.java",
  "refactorings": "# Refactorings in commit 305a1c056e93a2250008f6aebeb708c83889100c\n\n- Rename Method\tpublic testGetHostAndPortFromProperty() : void renamed to public canBeStartedAndStopped() : void in class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n- Extract Method\tprivate createExecutor(poolSize int) : ManagedThreadPoolExecutor extracted from public testGetHostAndPortFromProperty() : void in class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n- Replace Generic With Diamond\tManagedThreadPoolExecutor with ManagedThreadPoolExecutor in method private createExecutor(poolSize int) : ManagedThreadPoolExecutor from class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n- Replace Anonymous With Lambda\torg.apache.ambari.server.utils.ManagedThreadPoolExecutorTest.testGetHostAndPortFromProperty.feature.submit.new Callable\u003cBoolean\u003e with () -\u003e Boolean.TRUE in method public canBeStartedAndStopped() : void from class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n- Rename Variable\ttopologyTaskExecutor : ManagedThreadPoolExecutor to executor : ManagedThreadPoolExecutor in method public canBeStartedAndStopped() : void from class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n",
  "assertion_lines": [
    46,
    48
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 2,
  "assertion_type": "org.junit.Assert.assertTrue(executor.isRunning()), org.junit.Assert.assertFalse(executor.isRunning())",
  "test_method_name": "canBeStartedAndStopped[]",
  "test_body": "{\n    org.apache.ambari.server.utils.ManagedThreadPoolExecutor executor \u003d org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest.createExecutor(1);\n    executor.submit(() -\u003e java.lang.Boolean.TRUE);\n    executor.start();\n    org.junit.Assert.assertTrue(executor.isRunning());\n    executor.stop();\n    org.junit.Assert.assertFalse(executor.isRunning());\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/ManagedThreadPoolExecutorTest.java",
  "refactorings": "# Refactorings in commit 305a1c056e93a2250008f6aebeb708c83889100c\n\n- Rename Method\tpublic testGetHostAndPortFromProperty() : void renamed to public canBeStartedAndStopped() : void in class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n- Extract Method\tprivate createExecutor(poolSize int) : ManagedThreadPoolExecutor extracted from public testGetHostAndPortFromProperty() : void in class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n- Replace Generic With Diamond\tManagedThreadPoolExecutor with ManagedThreadPoolExecutor in method private createExecutor(poolSize int) : ManagedThreadPoolExecutor from class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n- Replace Anonymous With Lambda\torg.apache.ambari.server.utils.ManagedThreadPoolExecutorTest.testGetHostAndPortFromProperty.feature.submit.new Callable\u003cBoolean\u003e with () -\u003e Boolean.TRUE in method public canBeStartedAndStopped() : void from class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n- Rename Variable\ttopologyTaskExecutor : ManagedThreadPoolExecutor to executor : ManagedThreadPoolExecutor in method public canBeStartedAndStopped() : void from class org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest\n\n",
  "assertion_lines": [],
  "annotations": "@org.junit.Test",
  "assertion_amount": 0,
  "assertion_type": "No Assertions",
  "test_method_name": "retainsTasksUntilStarted[]",
  "test_body": "{\n    final int taskCount \u003d 60;\n    final java.util.concurrent.atomic.AtomicInteger counter \u003d new java.util.concurrent.atomic.AtomicInteger();\n    org.apache.ambari.server.utils.ManagedThreadPoolExecutor executor \u003d org.apache.ambari.server.utils.ManagedThreadPoolExecutorTest.createExecutor(10);\n    for (int i \u003d 0; i \u003c taskCount; ++i) {\n        executor.execute(counter::incrementAndGet);\n    }\n    executor.start();\n    org.awaitility.Awaitility.await().atMost(2, java.util.concurrent.TimeUnit.SECONDS).until(() -\u003e counter.get() \u003d\u003d taskCount);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/PasswordUtilsTest.java",
  "refactorings": "# Refactorings in commit 2bfbef2cab3cac2c4720dca0942fed8d3efd9bc9\n\n- Change Parameter Type\tmasterKeyLocation : File to configuration : Configuration in method public CredentialProvider(masterKey String, configuration Configuration) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Rename Parameter\tmasterKeyLocation : File to configuration : Configuration in method public CredentialProvider(masterKey String, configuration Configuration) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Remove Parameter\tisMasterKeyPersisted : boolean in method public CredentialProvider(masterKey String, masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Remove Parameter\tmasterKeyStoreLocation : File in method public CredentialProvider(masterKey String, masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Inline Variable\tmasterKeyLocation : File in method public CredentialStoreServiceImpl(configuration Configuration, securePasswordHelper SecurePasswordHelper) from class org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl\n\n- Rename Method\tprivate readMasterKey() : String renamed to private initializeFromEnv() : void in class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Extract Method\tprivate initFromFile(masterKeyFile File) : void extracted from public MasterKeyServiceImpl(masterKeyFile File) in class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Move Code\tfrom public MasterKeyServiceImpl() to private initializeFromEnv() : void in class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Change Return Type\tString to void in method private initializeFromEnv() : void from class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Merge Parameter\t[masterKeyLocation : File, isMasterKeyPersisted : boolean, masterKeyStoreLocation : File] to configuration : Configuration in method public readPasswordFromStore(aliasStr String, configuration Configuration) : String from class org.apache.ambari.server.utils.PasswordUtils\n\n- Add Parameter\tconfiguration : Configuration in method private loadCredentialProvider(configuration Configuration) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Remove Parameter\tmasterKeyLocation : File in method private loadCredentialProvider(masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Remove Parameter\tisMasterKeyPersisted : boolean in method private loadCredentialProvider(masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Remove Parameter\tmasterKeyStoreLocation : File in method private loadCredentialProvider(masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Replace Attribute With Variable\tencryptionService : EncryptionService to encryptionService : EncryptionService in method public testEncryptAndDecryptUsingCustomKey(textEncoding TextEncoding) : void from class org.apache.ambari.server.security.encryption.EncryptionServiceTest\n\n- Replace Attribute With Variable\tencryptionService : EncryptionService to encryptionService : EncryptionService in method public testEncryptAndDecryptUsingPersistedMasterKey() : void from class org.apache.ambari.server.security.encryption.EncryptionServiceTest\n\n- Replace Attribute With Variable\tencryptionService : EncryptionService to encryptionService : EncryptionService in method public shouldThrowSecurityExceptionInCaseOfEncryptingWithNonExistingPersistedMasterKey() : void from class org.apache.ambari.server.security.encryption.EncryptionServiceTest\n\n",
  "assertion_lines": [
    71
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertEquals(\"testPassword\", passwordUtils.readPassword(org.apache.ambari.server.utils.PasswordUtilsTest.CS_ALIAS, \"testPassword\"))",
  "test_method_name": "shouldReadPasswordFromCredentialStoreOfAnAlias[]",
  "test_body": "{\n    final org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider \u003d org.powermock.api.easymock.PowerMock.createNiceMock(org.apache.ambari.server.security.encryption.CredentialProvider.class);\n    setupBasicCredentialProviderExpectations(credentialProvider);\n    credentialProvider.getPasswordForAlias(org.apache.ambari.server.utils.PasswordUtilsTest.CS_ALIAS);\n    org.powermock.api.easymock.PowerMock.expectLastCall().andReturn(\"testPassword\".toCharArray()).once();\n    org.powermock.api.easymock.PowerMock.replay(credentialProvider, org.apache.ambari.server.security.encryption.CredentialProvider.class);\n    replayAll();\n    org.junit.Assert.assertEquals(\"testPassword\", passwordUtils.readPassword(org.apache.ambari.server.utils.PasswordUtilsTest.CS_ALIAS, \"testPassword\"));\n    verifyAll();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/PasswordUtilsTest.java",
  "refactorings": "# Refactorings in commit 2bfbef2cab3cac2c4720dca0942fed8d3efd9bc9\n\n- Change Parameter Type\tmasterKeyLocation : File to configuration : Configuration in method public CredentialProvider(masterKey String, configuration Configuration) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Rename Parameter\tmasterKeyLocation : File to configuration : Configuration in method public CredentialProvider(masterKey String, configuration Configuration) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Remove Parameter\tisMasterKeyPersisted : boolean in method public CredentialProvider(masterKey String, masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Remove Parameter\tmasterKeyStoreLocation : File in method public CredentialProvider(masterKey String, masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Inline Variable\tmasterKeyLocation : File in method public CredentialStoreServiceImpl(configuration Configuration, securePasswordHelper SecurePasswordHelper) from class org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl\n\n- Rename Method\tprivate readMasterKey() : String renamed to private initializeFromEnv() : void in class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Extract Method\tprivate initFromFile(masterKeyFile File) : void extracted from public MasterKeyServiceImpl(masterKeyFile File) in class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Move Code\tfrom public MasterKeyServiceImpl() to private initializeFromEnv() : void in class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Change Return Type\tString to void in method private initializeFromEnv() : void from class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Merge Parameter\t[masterKeyLocation : File, isMasterKeyPersisted : boolean, masterKeyStoreLocation : File] to configuration : Configuration in method public readPasswordFromStore(aliasStr String, configuration Configuration) : String from class org.apache.ambari.server.utils.PasswordUtils\n\n- Add Parameter\tconfiguration : Configuration in method private loadCredentialProvider(configuration Configuration) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Remove Parameter\tmasterKeyLocation : File in method private loadCredentialProvider(masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Remove Parameter\tisMasterKeyPersisted : boolean in method private loadCredentialProvider(masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Remove Parameter\tmasterKeyStoreLocation : File in method private loadCredentialProvider(masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Replace Attribute With Variable\tencryptionService : EncryptionService to encryptionService : EncryptionService in method public testEncryptAndDecryptUsingCustomKey(textEncoding TextEncoding) : void from class org.apache.ambari.server.security.encryption.EncryptionServiceTest\n\n- Replace Attribute With Variable\tencryptionService : EncryptionService to encryptionService : EncryptionService in method public testEncryptAndDecryptUsingPersistedMasterKey() : void from class org.apache.ambari.server.security.encryption.EncryptionServiceTest\n\n- Replace Attribute With Variable\tencryptionService : EncryptionService to encryptionService : EncryptionService in method public shouldThrowSecurityExceptionInCaseOfEncryptingWithNonExistingPersistedMasterKey() : void from class org.apache.ambari.server.security.encryption.EncryptionServiceTest\n\n",
  "assertion_lines": [
    79
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertEquals(\"ambariTest\", passwordUtils.readPassword(passwordFile.getAbsolutePath(), \"testPasswordDefault\"))",
  "test_method_name": "shouldReadPasswordFromFileIfPasswordPropertyIsPasswordFilePath[]",
  "test_body": "{\n    final java.lang.String testPassword \u003d \"ambariTest\";\n    final java.io.File passwordFile \u003d writeTestPasswordFile(testPassword);\n    org.junit.Assert.assertEquals(\"ambariTest\", passwordUtils.readPassword(passwordFile.getAbsolutePath(), \"testPasswordDefault\"));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/PasswordUtilsTest.java",
  "refactorings": "# Refactorings in commit 2bfbef2cab3cac2c4720dca0942fed8d3efd9bc9\n\n- Change Parameter Type\tmasterKeyLocation : File to configuration : Configuration in method public CredentialProvider(masterKey String, configuration Configuration) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Rename Parameter\tmasterKeyLocation : File to configuration : Configuration in method public CredentialProvider(masterKey String, configuration Configuration) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Remove Parameter\tisMasterKeyPersisted : boolean in method public CredentialProvider(masterKey String, masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Remove Parameter\tmasterKeyStoreLocation : File in method public CredentialProvider(masterKey String, masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Inline Variable\tmasterKeyLocation : File in method public CredentialStoreServiceImpl(configuration Configuration, securePasswordHelper SecurePasswordHelper) from class org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl\n\n- Rename Method\tprivate readMasterKey() : String renamed to private initializeFromEnv() : void in class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Extract Method\tprivate initFromFile(masterKeyFile File) : void extracted from public MasterKeyServiceImpl(masterKeyFile File) in class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Move Code\tfrom public MasterKeyServiceImpl() to private initializeFromEnv() : void in class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Change Return Type\tString to void in method private initializeFromEnv() : void from class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Merge Parameter\t[masterKeyLocation : File, isMasterKeyPersisted : boolean, masterKeyStoreLocation : File] to configuration : Configuration in method public readPasswordFromStore(aliasStr String, configuration Configuration) : String from class org.apache.ambari.server.utils.PasswordUtils\n\n- Add Parameter\tconfiguration : Configuration in method private loadCredentialProvider(configuration Configuration) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Remove Parameter\tmasterKeyLocation : File in method private loadCredentialProvider(masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Remove Parameter\tisMasterKeyPersisted : boolean in method private loadCredentialProvider(masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Remove Parameter\tmasterKeyStoreLocation : File in method private loadCredentialProvider(masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Replace Attribute With Variable\tencryptionService : EncryptionService to encryptionService : EncryptionService in method public testEncryptAndDecryptUsingCustomKey(textEncoding TextEncoding) : void from class org.apache.ambari.server.security.encryption.EncryptionServiceTest\n\n- Replace Attribute With Variable\tencryptionService : EncryptionService to encryptionService : EncryptionService in method public testEncryptAndDecryptUsingPersistedMasterKey() : void from class org.apache.ambari.server.security.encryption.EncryptionServiceTest\n\n- Replace Attribute With Variable\tencryptionService : EncryptionService to encryptionService : EncryptionService in method public shouldThrowSecurityExceptionInCaseOfEncryptingWithNonExistingPersistedMasterKey() : void from class org.apache.ambari.server.security.encryption.EncryptionServiceTest\n\n",
  "assertion_lines": [
    85
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertEquals(\"testPasswordDefault\", passwordUtils.readPassword(passwordFile.getAbsolutePath(), \"testPasswordDefault\"))",
  "test_method_name": "shouldReadDefaultPasswordIfPasswordPropertyIsPasswordFilePathButItDoesNotExists[]",
  "test_body": "{\n    final java.io.File passwordFile \u003d new java.io.File(\"/my/test/password/file.dat\");\n    org.junit.Assert.assertEquals(\"testPasswordDefault\", passwordUtils.readPassword(passwordFile.getAbsolutePath(), \"testPasswordDefault\"));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/PasswordUtilsTest.java",
  "refactorings": "# Refactorings in commit 2bfbef2cab3cac2c4720dca0942fed8d3efd9bc9\n\n- Change Parameter Type\tmasterKeyLocation : File to configuration : Configuration in method public CredentialProvider(masterKey String, configuration Configuration) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Rename Parameter\tmasterKeyLocation : File to configuration : Configuration in method public CredentialProvider(masterKey String, configuration Configuration) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Remove Parameter\tisMasterKeyPersisted : boolean in method public CredentialProvider(masterKey String, masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Remove Parameter\tmasterKeyStoreLocation : File in method public CredentialProvider(masterKey String, masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) from class org.apache.ambari.server.security.encryption.CredentialProvider\n\n- Inline Variable\tmasterKeyLocation : File in method public CredentialStoreServiceImpl(configuration Configuration, securePasswordHelper SecurePasswordHelper) from class org.apache.ambari.server.security.encryption.CredentialStoreServiceImpl\n\n- Rename Method\tprivate readMasterKey() : String renamed to private initializeFromEnv() : void in class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Extract Method\tprivate initFromFile(masterKeyFile File) : void extracted from public MasterKeyServiceImpl(masterKeyFile File) in class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Move Code\tfrom public MasterKeyServiceImpl() to private initializeFromEnv() : void in class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Change Return Type\tString to void in method private initializeFromEnv() : void from class org.apache.ambari.server.security.encryption.MasterKeyServiceImpl\n\n- Merge Parameter\t[masterKeyLocation : File, isMasterKeyPersisted : boolean, masterKeyStoreLocation : File] to configuration : Configuration in method public readPasswordFromStore(aliasStr String, configuration Configuration) : String from class org.apache.ambari.server.utils.PasswordUtils\n\n- Add Parameter\tconfiguration : Configuration in method private loadCredentialProvider(configuration Configuration) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Remove Parameter\tmasterKeyLocation : File in method private loadCredentialProvider(masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Remove Parameter\tisMasterKeyPersisted : boolean in method private loadCredentialProvider(masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Remove Parameter\tmasterKeyStoreLocation : File in method private loadCredentialProvider(masterKeyLocation File, isMasterKeyPersisted boolean, masterKeyStoreLocation File) : void from class org.apache.ambari.server.utils.PasswordUtils\n\n- Replace Attribute With Variable\tencryptionService : EncryptionService to encryptionService : EncryptionService in method public testEncryptAndDecryptUsingCustomKey(textEncoding TextEncoding) : void from class org.apache.ambari.server.security.encryption.EncryptionServiceTest\n\n- Replace Attribute With Variable\tencryptionService : EncryptionService to encryptionService : EncryptionService in method public testEncryptAndDecryptUsingPersistedMasterKey() : void from class org.apache.ambari.server.security.encryption.EncryptionServiceTest\n\n- Replace Attribute With Variable\tencryptionService : EncryptionService to encryptionService : EncryptionService in method public shouldThrowSecurityExceptionInCaseOfEncryptingWithNonExistingPersistedMasterKey() : void from class org.apache.ambari.server.security.encryption.EncryptionServiceTest\n\n",
  "assertion_lines": [
    94
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertEquals(\"testPasswordDefault\", passwordUtils.readPassword(passwordFile.getAbsolutePath(), \"testPasswordDefault\"))",
  "test_method_name": "shouldReadDefaultPasswordIfPasswordPropertyIsPasswordFilePathButItIsNotReadable[]",
  "test_body": "{\n    final java.lang.String testPassword \u003d \"ambariTest\";\n    final java.io.File passwordFile \u003d writeTestPasswordFile(testPassword);\n    passwordFile.setReadable(false);\n    org.junit.Assert.assertEquals(\"testPasswordDefault\", passwordUtils.readPassword(passwordFile.getAbsolutePath(), \"testPasswordDefault\"));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/RequestUtilsTest.java",
  "refactorings": "# Refactorings in commit b6a33413e518a20e186609996b34671d33573c51\n\n- Rename Parameter\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Parameter Type\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Type Declaration Kind\tclass to interface in type org.apache.ambari.server.security.authentication.AmbariUserDetails\n\n- Extract Method\tpublic translatePrincipalName(principalName String) : String extracted from public loadUserByUsername(principal String) : UserDetails in class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Rename Parameter\tprincipal : String to principalName : String in method public translatePrincipalName(principalName String) : String from class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Change Method Access Modifier\tpackage to public in method public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.tproxy.AmbariTProxyConfiguration\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS_MULTIPLE : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Push Down Method\tpublic getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Add Method Annotation\t@Override in method public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Extract And Move Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e extracted from public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getPassword() : String extracted from public getPassword() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getUsername() : String extracted from public getUsername() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n... and 10 more refactorings in this commit\n",
  "assertion_lines": [
    51
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertEquals(org.apache.ambari.server.utils.RequestUtilsTest.REMOTE_ADDRESS, remoteAddress)",
  "test_method_name": "testGetRemoteAddress[]",
  "test_body": "{\n    javax.servlet.http.HttpServletRequest mockedRequest \u003d createMock(javax.servlet.http.HttpServletRequest.class);\n    org.easymock.EasyMock.expect(mockedRequest.getHeader(\"X-Forwarded-For\")).andReturn(null);\n    org.easymock.EasyMock.expect(mockedRequest.getHeader(\"Proxy-Client-IP\")).andReturn(\"unknown\");\n    org.easymock.EasyMock.expect(mockedRequest.getHeader(\"WL-Proxy-Client-IP\")).andReturn(\"\");\n    org.easymock.EasyMock.expect(mockedRequest.getHeader(\"HTTP_CLIENT_IP\")).andReturn(\"unknown\");\n    org.easymock.EasyMock.expect(mockedRequest.getHeader(\"HTTP_X_FORWARDED_FOR\")).andReturn(org.apache.ambari.server.utils.RequestUtilsTest.REMOTE_ADDRESS);\n    replayAll();\n    java.lang.String remoteAddress \u003d org.apache.ambari.server.utils.RequestUtils.getRemoteAddress(mockedRequest);\n    org.junit.Assert.assertEquals(org.apache.ambari.server.utils.RequestUtilsTest.REMOTE_ADDRESS, remoteAddress);\n    verifyAll();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/RequestUtilsTest.java",
  "refactorings": "# Refactorings in commit b6a33413e518a20e186609996b34671d33573c51\n\n- Rename Parameter\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Parameter Type\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Type Declaration Kind\tclass to interface in type org.apache.ambari.server.security.authentication.AmbariUserDetails\n\n- Extract Method\tpublic translatePrincipalName(principalName String) : String extracted from public loadUserByUsername(principal String) : UserDetails in class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Rename Parameter\tprincipal : String to principalName : String in method public translatePrincipalName(principalName String) : String from class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Change Method Access Modifier\tpackage to public in method public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.tproxy.AmbariTProxyConfiguration\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS_MULTIPLE : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Push Down Method\tpublic getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Add Method Annotation\t@Override in method public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Extract And Move Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e extracted from public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getPassword() : String extracted from public getPassword() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getUsername() : String extracted from public getUsername() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n... and 10 more refactorings in this commit\n",
  "assertion_lines": [
    68
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertEquals(org.apache.ambari.server.utils.RequestUtilsTest.REMOTE_ADDRESS, remoteAddress)",
  "test_method_name": "testGetMultipleRemoteAddress[]",
  "test_body": "{\n    javax.servlet.http.HttpServletRequest mockedRequest \u003d createMock(javax.servlet.http.HttpServletRequest.class);\n    org.easymock.EasyMock.expect(mockedRequest.getHeader(\"X-Forwarded-For\")).andReturn(null);\n    org.easymock.EasyMock.expect(mockedRequest.getHeader(\"Proxy-Client-IP\")).andReturn(\"unknown\");\n    org.easymock.EasyMock.expect(mockedRequest.getHeader(\"WL-Proxy-Client-IP\")).andReturn(\"\");\n    org.easymock.EasyMock.expect(mockedRequest.getHeader(\"HTTP_CLIENT_IP\")).andReturn(\"unknown\");\n    org.easymock.EasyMock.expect(mockedRequest.getHeader(\"HTTP_X_FORWARDED_FOR\")).andReturn(org.apache.ambari.server.utils.RequestUtilsTest.REMOTE_ADDRESS_MULTIPLE);\n    replayAll();\n    java.lang.String remoteAddress \u003d org.apache.ambari.server.utils.RequestUtils.getRemoteAddress(mockedRequest);\n    org.junit.Assert.assertEquals(org.apache.ambari.server.utils.RequestUtilsTest.REMOTE_ADDRESS, remoteAddress);\n    verifyAll();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/RequestUtilsTest.java",
  "refactorings": "# Refactorings in commit b6a33413e518a20e186609996b34671d33573c51\n\n- Rename Parameter\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Parameter Type\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Type Declaration Kind\tclass to interface in type org.apache.ambari.server.security.authentication.AmbariUserDetails\n\n- Extract Method\tpublic translatePrincipalName(principalName String) : String extracted from public loadUserByUsername(principal String) : UserDetails in class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Rename Parameter\tprincipal : String to principalName : String in method public translatePrincipalName(principalName String) : String from class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Change Method Access Modifier\tpackage to public in method public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.tproxy.AmbariTProxyConfiguration\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS_MULTIPLE : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Push Down Method\tpublic getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Add Method Annotation\t@Override in method public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Extract And Move Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e extracted from public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getPassword() : String extracted from public getPassword() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getUsername() : String extracted from public getUsername() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n... and 10 more refactorings in this commit\n",
  "assertion_lines": [
    81
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertEquals(org.apache.ambari.server.utils.RequestUtilsTest.REMOTE_ADDRESS, remoteAddress)",
  "test_method_name": "testGetRemoteAddressFoundFirstHeader[]",
  "test_body": "{\n    javax.servlet.http.HttpServletRequest mockedRequest \u003d createMock(javax.servlet.http.HttpServletRequest.class);\n    org.easymock.EasyMock.expect(mockedRequest.getHeader(\"X-Forwarded-For\")).andReturn(org.apache.ambari.server.utils.RequestUtilsTest.REMOTE_ADDRESS);\n    replayAll();\n    java.lang.String remoteAddress \u003d org.apache.ambari.server.utils.RequestUtils.getRemoteAddress(mockedRequest);\n    org.junit.Assert.assertEquals(org.apache.ambari.server.utils.RequestUtilsTest.REMOTE_ADDRESS, remoteAddress);\n    verifyAll();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/RequestUtilsTest.java",
  "refactorings": "# Refactorings in commit b6a33413e518a20e186609996b34671d33573c51\n\n- Rename Parameter\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Parameter Type\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Type Declaration Kind\tclass to interface in type org.apache.ambari.server.security.authentication.AmbariUserDetails\n\n- Extract Method\tpublic translatePrincipalName(principalName String) : String extracted from public loadUserByUsername(principal String) : UserDetails in class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Rename Parameter\tprincipal : String to principalName : String in method public translatePrincipalName(principalName String) : String from class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Change Method Access Modifier\tpackage to public in method public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.tproxy.AmbariTProxyConfiguration\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS_MULTIPLE : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Push Down Method\tpublic getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Add Method Annotation\t@Override in method public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Extract And Move Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e extracted from public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getPassword() : String extracted from public getPassword() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getUsername() : String extracted from public getUsername() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n... and 10 more refactorings in this commit\n",
  "assertion_lines": [
    95
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertEquals(org.apache.ambari.server.utils.RequestUtilsTest.REMOTE_ADDRESS, remoteAddress)",
  "test_method_name": "testGetRemoteAddressWhenHeadersAreMissing[]",
  "test_body": "{\n    javax.servlet.http.HttpServletRequest mockedRequest \u003d createMock(javax.servlet.http.HttpServletRequest.class);\n    org.easymock.EasyMock.expect(mockedRequest.getHeader(org.easymock.EasyMock.anyString())).andReturn(null).times(5);\n    org.easymock.EasyMock.expect(mockedRequest.getRemoteAddr()).andReturn(org.apache.ambari.server.utils.RequestUtilsTest.REMOTE_ADDRESS);\n    replayAll();\n    java.lang.String remoteAddress \u003d org.apache.ambari.server.utils.RequestUtils.getRemoteAddress(mockedRequest);\n    org.junit.Assert.assertEquals(org.apache.ambari.server.utils.RequestUtilsTest.REMOTE_ADDRESS, remoteAddress);\n    verifyAll();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/RequestUtilsTest.java",
  "refactorings": "# Refactorings in commit b6a33413e518a20e186609996b34671d33573c51\n\n- Rename Parameter\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Parameter Type\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Type Declaration Kind\tclass to interface in type org.apache.ambari.server.security.authentication.AmbariUserDetails\n\n- Extract Method\tpublic translatePrincipalName(principalName String) : String extracted from public loadUserByUsername(principal String) : UserDetails in class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Rename Parameter\tprincipal : String to principalName : String in method public translatePrincipalName(principalName String) : String from class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Change Method Access Modifier\tpackage to public in method public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.tproxy.AmbariTProxyConfiguration\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS_MULTIPLE : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Push Down Method\tpublic getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Add Method Annotation\t@Override in method public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Extract And Move Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e extracted from public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getPassword() : String extracted from public getPassword() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getUsername() : String extracted from public getUsername() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n... and 10 more refactorings in this commit\n",
  "assertion_lines": [
    117,
    120,
    126,
    127,
    128,
    129,
    130,
    134,
    135,
    136,
    137,
    138,
    139,
    140,
    141,
    145,
    146,
    147,
    148,
    149,
    150,
    151,
    152,
    153
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 24,
  "assertion_type": "org.junit.Assert.assertNull(org.apache.ambari.server.utils.RequestUtils.getQueryStringParameters(request)), org.junit.Assert.assertNotNull(parameters), org.junit.Assert.assertEquals(1, parameters.size()), org.junit.Assert.assertNotNull(parameters.get(\"p1\")), org.junit.Assert.assertEquals(1, parameters.get(\"p1\").size()), org.junit.Assert.assertEquals(\"1\", parameters.get(\"p1\").get(0)), org.junit.Assert.assertEquals(2, parameters.size()), org.junit.Assert.assertNotNull(parameters.get(\"p2\")), org.junit.Assert.assertEquals(1, parameters.get(\"p2\").size()), org.junit.Assert.assertEquals(\"2\", parameters.get(\"p2\").get(0)), org.junit.Assert.assertEquals(2, parameters.get(\"p1\").size()), org.junit.Assert.assertEquals(\"1a\", parameters.get(\"p1\").get(0)), org.junit.Assert.assertEquals(\"1b\", parameters.get(\"p1\").get(1))",
  "test_method_name": "testGetQueryStringParameters[]",
  "test_body": "{\n    javax.servlet.http.HttpServletRequest request \u003d createMock(javax.servlet.http.HttpServletRequest.class);\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(null).once();\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(\"\").once();\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(\"p1\u003d1\").once();\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(\"p1\u003d1\u0026p2\u003d2\").once();\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(\"p1\u003d1a\u0026p2\u003d2\u0026p1\u003d1b\").once();\n    replayAll();\n    org.junit.Assert.assertNull(org.apache.ambari.server.utils.RequestUtils.getQueryStringParameters(request));\n    org.junit.Assert.assertNull(org.apache.ambari.server.utils.RequestUtils.getQueryStringParameters(request));\n    org.springframework.util.MultiValueMap\u003cjava.lang.String, java.lang.String\u003e parameters;\n    parameters \u003d org.apache.ambari.server.utils.RequestUtils.getQueryStringParameters(request);\n    org.junit.Assert.assertNotNull(parameters);\n    org.junit.Assert.assertEquals(1, parameters.size());\n    org.junit.Assert.assertNotNull(parameters.get(\"p1\"));\n    org.junit.Assert.assertEquals(1, parameters.get(\"p1\").size());\n    org.junit.Assert.assertEquals(\"1\", parameters.get(\"p1\").get(0));\n    parameters \u003d org.apache.ambari.server.utils.RequestUtils.getQueryStringParameters(request);\n    org.junit.Assert.assertNotNull(parameters);\n    org.junit.Assert.assertEquals(2, parameters.size());\n    org.junit.Assert.assertNotNull(parameters.get(\"p1\"));\n    org.junit.Assert.assertEquals(1, parameters.get(\"p1\").size());\n    org.junit.Assert.assertEquals(\"1\", parameters.get(\"p1\").get(0));\n    org.junit.Assert.assertNotNull(parameters.get(\"p2\"));\n    org.junit.Assert.assertEquals(1, parameters.get(\"p2\").size());\n    org.junit.Assert.assertEquals(\"2\", parameters.get(\"p2\").get(0));\n    parameters \u003d org.apache.ambari.server.utils.RequestUtils.getQueryStringParameters(request);\n    org.junit.Assert.assertNotNull(parameters);\n    org.junit.Assert.assertEquals(2, parameters.size());\n    org.junit.Assert.assertNotNull(parameters.get(\"p1\"));\n    org.junit.Assert.assertEquals(2, parameters.get(\"p1\").size());\n    org.junit.Assert.assertEquals(\"1a\", parameters.get(\"p1\").get(0));\n    org.junit.Assert.assertEquals(\"1b\", parameters.get(\"p1\").get(1));\n    org.junit.Assert.assertNotNull(parameters.get(\"p2\"));\n    org.junit.Assert.assertEquals(1, parameters.get(\"p2\").size());\n    org.junit.Assert.assertEquals(\"2\", parameters.get(\"p2\").get(0));\n    verifyAll();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/RequestUtilsTest.java",
  "refactorings": "# Refactorings in commit b6a33413e518a20e186609996b34671d33573c51\n\n- Rename Parameter\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Parameter Type\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Type Declaration Kind\tclass to interface in type org.apache.ambari.server.security.authentication.AmbariUserDetails\n\n- Extract Method\tpublic translatePrincipalName(principalName String) : String extracted from public loadUserByUsername(principal String) : UserDetails in class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Rename Parameter\tprincipal : String to principalName : String in method public translatePrincipalName(principalName String) : String from class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Change Method Access Modifier\tpackage to public in method public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.tproxy.AmbariTProxyConfiguration\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS_MULTIPLE : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Push Down Method\tpublic getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Add Method Annotation\t@Override in method public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Extract And Move Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e extracted from public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getPassword() : String extracted from public getPassword() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getUsername() : String extracted from public getUsername() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n... and 10 more refactorings in this commit\n",
  "assertion_lines": [
    174,
    177,
    183,
    184,
    185,
    189,
    190,
    191,
    195,
    196,
    197,
    198
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 12,
  "assertion_type": "org.junit.Assert.assertNull(org.apache.ambari.server.utils.RequestUtils.getQueryStringParameterValues(request, \"p1\")), org.junit.Assert.assertNotNull(parameterValues), org.junit.Assert.assertEquals(1, parameterValues.size()), org.junit.Assert.assertEquals(\"1\", parameterValues.get(0)), org.junit.Assert.assertEquals(\"2\", parameterValues.get(0)), org.junit.Assert.assertEquals(2, parameterValues.size()), org.junit.Assert.assertEquals(\"1a\", parameterValues.get(0)), org.junit.Assert.assertEquals(\"1b\", parameterValues.get(1))",
  "test_method_name": "testGetQueryStringParameterValues[]",
  "test_body": "{\n    javax.servlet.http.HttpServletRequest request \u003d createMock(javax.servlet.http.HttpServletRequest.class);\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(null).once();\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(\"\").once();\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(\"p1\u003d1\").once();\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(\"p1\u003d1\u0026p2\u003d2\").once();\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(\"p1\u003d1a\u0026p2\u003d2\u0026p1\u003d1b\").once();\n    replayAll();\n    org.junit.Assert.assertNull(org.apache.ambari.server.utils.RequestUtils.getQueryStringParameterValues(request, \"p1\"));\n    org.junit.Assert.assertNull(org.apache.ambari.server.utils.RequestUtils.getQueryStringParameterValues(request, \"p1\"));\n    java.util.List\u003cjava.lang.String\u003e parameterValues;\n    parameterValues \u003d org.apache.ambari.server.utils.RequestUtils.getQueryStringParameterValues(request, \"p1\");\n    org.junit.Assert.assertNotNull(parameterValues);\n    org.junit.Assert.assertEquals(1, parameterValues.size());\n    org.junit.Assert.assertEquals(\"1\", parameterValues.get(0));\n    parameterValues \u003d org.apache.ambari.server.utils.RequestUtils.getQueryStringParameterValues(request, \"p2\");\n    org.junit.Assert.assertNotNull(parameterValues);\n    org.junit.Assert.assertEquals(1, parameterValues.size());\n    org.junit.Assert.assertEquals(\"2\", parameterValues.get(0));\n    parameterValues \u003d org.apache.ambari.server.utils.RequestUtils.getQueryStringParameterValues(request, \"p1\");\n    org.junit.Assert.assertNotNull(parameterValues);\n    org.junit.Assert.assertEquals(2, parameterValues.size());\n    org.junit.Assert.assertEquals(\"1a\", parameterValues.get(0));\n    org.junit.Assert.assertEquals(\"1b\", parameterValues.get(1));\n    verifyAll();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/RequestUtilsTest.java",
  "refactorings": "# Refactorings in commit b6a33413e518a20e186609996b34671d33573c51\n\n- Rename Parameter\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Parameter Type\tkerberosServiceAuthenticationProvider : KerberosServiceAuthenticationProvider to ambariKerberosAuthenticationProvider : AmbariKerberosAuthenticationProvider in method public configureAuthenticationManager(auth AuthenticationManagerBuilder, ambariJwtAuthenticationProvider AmbariJwtAuthenticationProvider, ambariPamAuthenticationProvider AmbariPamAuthenticationProvider, ambariLocalAuthenticationProvider AmbariLocalAuthenticationProvider, ambariLdapAuthenticationProvider AmbariLdapAuthenticationProvider, ambariInternalAuthenticationProvider AmbariInternalAuthenticationProvider, ambariKerberosAuthenticationProvider AmbariKerberosAuthenticationProvider) : void from class org.apache.ambari.server.configuration.spring.ApiSecurityConfig\n\n- Change Type Declaration Kind\tclass to interface in type org.apache.ambari.server.security.authentication.AmbariUserDetails\n\n- Extract Method\tpublic translatePrincipalName(principalName String) : String extracted from public loadUserByUsername(principal String) : UserDetails in class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Rename Parameter\tprincipal : String to principalName : String in method public translatePrincipalName(principalName String) : String from class org.apache.ambari.server.security.authentication.kerberos.AmbariAuthToLocalUserDetailsService\n\n- Change Method Access Modifier\tpackage to public in method public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.tproxy.AmbariTProxyConfiguration\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Change Attribute Access Modifier\tpublic to private in attribute private REMOTE_ADDRESS_MULTIPLE : String from class org.apache.ambari.server.utils.RequestUtilsTest\n\n- Push Down Method\tpublic getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Add Method Annotation\t@Override in method public getUserId() : Integer from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getPassword() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public getUsername() : String from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isAccountNonLocked() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isCredentialsNonExpired() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Push Down Method\tpublic isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariUserDetails to public isEnabled() : boolean from class org.apache.ambari.server.security.authentication.AmbariProxiedUserDetailsImpl\n\n- Extract And Move Method\tpublic getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e extracted from public getAuthorities() : Collection\u003c? extends GrantedAuthority\u003e in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getPassword() : String extracted from public getPassword() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n- Extract And Move Method\tpublic getUsername() : String extracted from public getUsername() : String in class org.apache.ambari.server.security.authentication.AmbariUserDetails \u0026 moved to class org.apache.ambari.server.security.authentication.AmbariUserDetailsImpl\n\n... and 10 more refactorings in this commit\n",
  "assertion_lines": [
    219,
    222,
    228,
    232,
    236
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 5,
  "assertion_type": "org.junit.Assert.assertNull(org.apache.ambari.server.utils.RequestUtils.getQueryStringParameterValue(request, \"p1\")), org.junit.Assert.assertEquals(\"1\", parameterValue), org.junit.Assert.assertEquals(\"2\", parameterValue), org.junit.Assert.assertEquals(\"1a\", parameterValue)",
  "test_method_name": "testGetQueryStringParameterValue[]",
  "test_body": "{\n    javax.servlet.http.HttpServletRequest request \u003d createMock(javax.servlet.http.HttpServletRequest.class);\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(null).once();\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(\"\").once();\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(\"p1\u003d1\").once();\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(\"p1\u003d1\u0026p2\u003d2\").once();\n    org.easymock.EasyMock.expect(request.getQueryString()).andReturn(\"p1\u003d1a\u0026p2\u003d2\u0026p1\u003d1b\").once();\n    replayAll();\n    org.junit.Assert.assertNull(org.apache.ambari.server.utils.RequestUtils.getQueryStringParameterValue(request, \"p1\"));\n    org.junit.Assert.assertNull(org.apache.ambari.server.utils.RequestUtils.getQueryStringParameterValue(request, \"p1\"));\n    java.lang.String parameterValue;\n    parameterValue \u003d org.apache.ambari.server.utils.RequestUtils.getQueryStringParameterValue(request, \"p1\");\n    org.junit.Assert.assertEquals(\"1\", parameterValue);\n    parameterValue \u003d org.apache.ambari.server.utils.RequestUtils.getQueryStringParameterValue(request, \"p2\");\n    org.junit.Assert.assertEquals(\"2\", parameterValue);\n    parameterValue \u003d org.apache.ambari.server.utils.RequestUtils.getQueryStringParameterValue(request, \"p1\");\n    org.junit.Assert.assertEquals(\"1a\", parameterValue);\n    verifyAll();\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/SetUtilsTest.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [
    37,
    46,
    49,
    52,
    53,
    60,
    61,
    69,
    70,
    77,
    78,
    79,
    86,
    87,
    88,
    95,
    96,
    97,
    98
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 18,
  "assertion_type": "junit.framework.Assert.assertEquals(0, subsets.size()), junit.framework.Assert.assertEquals(1, subsets.size()), junit.framework.Assert.assertEquals(1, subsets.get(0).size()), junit.framework.Assert.assertEquals(5, subsets.get(0).size()), junit.framework.Assert.assertEquals(10, subsets.get(0).size()), junit.framework.Assert.assertEquals(2, subsets.size()), junit.framework.Assert.assertEquals(1, subsets.get(1).size()), junit.framework.Assert.assertEquals(10, subsets.get(1).size()), junit.framework.Assert.assertEquals(3, subsets.size()), junit.framework.Assert.assertEquals(7, subsets.get(2).size())",
  "test_method_name": "testSplit[]",
  "test_body": "{\n    try {\n        org.apache.ambari.server.utils.SetUtils.split(null, 0);\n        junit.framework.Assert.fail(\"Expected IllegalArgumentException.\");\n    } catch (java.lang.IllegalArgumentException e) {\n    }\n    int size \u003d 10;\n    java.util.List\u003cjava.util.Set\u003cjava.lang.Integer\u003e\u003e subsets \u003d org.apache.ambari.server.utils.SetUtils.split(null, size);\n    junit.framework.Assert.assertEquals(0, subsets.size());\n    subsets \u003d org.apache.ambari.server.utils.SetUtils.split(java.util.Collections.\u003cjava.lang.Integer\u003eemptySet(), size);\n    junit.framework.Assert.assertEquals(0, subsets.size());\n    subsets \u003d org.apache.ambari.server.utils.SetUtils.split(java.util.Collections.singleton(0), size);\n    junit.framework.Assert.assertEquals(1, subsets.size());\n    junit.framework.Assert.assertEquals(1, subsets.get(0).size());\n    java.util.Set\u003cjava.lang.Integer\u003e set \u003d new java.util.LinkedHashSet\u003c\u003e(5);\n    for (int i \u003d 0; i \u003c 5; i++) {\n        set.add(i);\n    }\n    subsets \u003d org.apache.ambari.server.utils.SetUtils.split(set, size);\n    junit.framework.Assert.assertEquals(1, subsets.size());\n    junit.framework.Assert.assertEquals(5, subsets.get(0).size());\n    set \u003d new java.util.LinkedHashSet\u003c\u003e(10);\n    for (int i \u003d 0; i \u003c 10; i++) {\n        set.add(i);\n    }\n    subsets \u003d org.apache.ambari.server.utils.SetUtils.split(set, size);\n    junit.framework.Assert.assertEquals(1, subsets.size());\n    junit.framework.Assert.assertEquals(10, subsets.get(0).size());\n    set \u003d new java.util.LinkedHashSet\u003c\u003e(11);\n    for (int i \u003d 0; i \u003c 11; i++) {\n        set.add(i);\n    }\n    subsets \u003d org.apache.ambari.server.utils.SetUtils.split(set, size);\n    junit.framework.Assert.assertEquals(2, subsets.size());\n    junit.framework.Assert.assertEquals(10, subsets.get(0).size());\n    junit.framework.Assert.assertEquals(1, subsets.get(1).size());\n    set \u003d new java.util.LinkedHashSet\u003c\u003e(20);\n    for (int i \u003d 0; i \u003c 20; i++) {\n        set.add(i);\n    }\n    subsets \u003d org.apache.ambari.server.utils.SetUtils.split(set, size);\n    junit.framework.Assert.assertEquals(2, subsets.size());\n    junit.framework.Assert.assertEquals(10, subsets.get(0).size());\n    junit.framework.Assert.assertEquals(10, subsets.get(1).size());\n    set \u003d new java.util.LinkedHashSet\u003c\u003e(27);\n    for (int i \u003d 0; i \u003c 27; i++) {\n        set.add(i);\n    }\n    subsets \u003d org.apache.ambari.server.utils.SetUtils.split(set, size);\n    junit.framework.Assert.assertEquals(3, subsets.size());\n    junit.framework.Assert.assertEquals(10, subsets.get(0).size());\n    junit.framework.Assert.assertEquals(10, subsets.get(1).size());\n    junit.framework.Assert.assertEquals(7, subsets.get(2).size());\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/StageUtilsTest.java",
  "refactorings": "# Refactorings in commit 07dbaffa58c68a7619ce2e34606ffed888cb7f9d\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public getCustomCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public setCustomCommand(customCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public getTaskId() : long from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public setTaskId(taskId long) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public getActionId() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public setActionId(actionId String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public getStdErr() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public setStdErr(stderr String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public getExitCode() : int from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public setExitCode(exitCode int) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public getStdOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public setStdOut(stdout String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public getStructuredOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public setStructuredOut(structuredOut String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public getRoleCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public setRoleCommand(roleCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public getRole() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public setRole(role String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public getStatus() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public setStatus(status String) : void from class org.apache.ambari.server.agent.CommandReport\n\n... and 270 more refactorings in this commit\n",
  "assertion_lines": [
    121
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "for (org.apache.ambari.server.actionmanager.ExecutionCommandWrapper wrapper : wrappers) {\n    org.junit.Assert.assertEquals(\"cluster1\", wrapper.getExecutionCommand().getClusterName());\n    org.junit.Assert.assertEquals(org.apache.ambari.server.utils.StageUtils.getActionId(1, 2), wrapper.getExecutionCommand().getCommandId());\n    org.junit.Assert.assertEquals(hostname, wrapper.getExecutionCommand().getHostname());\n}",
  "test_method_name": "testGetATestStage[]",
  "test_body": "{\n    org.apache.ambari.server.utils.StageUtils stageUtils \u003d new org.apache.ambari.server.utils.StageUtils(injector.getInstance(org.apache.ambari.server.actionmanager.StageFactory.class));\n    org.apache.ambari.server.actionmanager.Stage s \u003d org.apache.ambari.server.utils.StageUtils.getATestStage(1, 2, \"host2\", \"\", \"hostParamsStage\");\n    java.lang.String hostname \u003d s.getHosts().get(0);\n    java.util.List\u003corg.apache.ambari.server.actionmanager.ExecutionCommandWrapper\u003e wrappers \u003d s.getExecutionCommands(hostname);\n    for (org.apache.ambari.server.actionmanager.ExecutionCommandWrapper wrapper : wrappers) {\n        org.junit.Assert.assertEquals(\"cluster1\", wrapper.getExecutionCommand().getClusterName());\n        org.junit.Assert.assertEquals(org.apache.ambari.server.utils.StageUtils.getActionId(1, 2), wrapper.getExecutionCommand().getCommandId());\n        org.junit.Assert.assertEquals(hostname, wrapper.getExecutionCommand().getHostname());\n    }\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/StageUtilsTest.java",
  "refactorings": "# Refactorings in commit 07dbaffa58c68a7619ce2e34606ffed888cb7f9d\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public getCustomCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public setCustomCommand(customCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public getTaskId() : long from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public setTaskId(taskId long) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public getActionId() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public setActionId(actionId String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public getStdErr() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public setStdErr(stderr String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public getExitCode() : int from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public setExitCode(exitCode int) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public getStdOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public setStdOut(stdout String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public getStructuredOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public setStructuredOut(structuredOut String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public getRoleCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public setRoleCommand(roleCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public getRole() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public setRole(role String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public getStatus() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public setStatus(status String) : void from class org.apache.ambari.server.agent.CommandReport\n\n... and 270 more refactorings in this commit\n",
  "assertion_lines": [
    138
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertEquals(org.apache.ambari.server.utils.StageUtils.getActionId(1, 2), s.getActionId())",
  "test_method_name": "testJaxbToString[]",
  "test_body": "{\n    org.apache.ambari.server.utils.StageUtils stageUtils \u003d new org.apache.ambari.server.utils.StageUtils(injector.getInstance(org.apache.ambari.server.actionmanager.StageFactory.class));\n    org.apache.ambari.server.actionmanager.Stage s \u003d org.apache.ambari.server.utils.StageUtils.getATestStage(1, 2, \"host1\", \"\", \"hostParamsStage\");\n    java.lang.String hostname \u003d s.getHosts().get(0);\n    java.util.List\u003corg.apache.ambari.server.actionmanager.ExecutionCommandWrapper\u003e wrappers \u003d s.getExecutionCommands(hostname);\n    for (org.apache.ambari.server.actionmanager.ExecutionCommandWrapper wrapper : wrappers) {\n    }\n    org.junit.Assert.assertEquals(org.apache.ambari.server.utils.StageUtils.getActionId(1, 2), s.getActionId());\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/StageUtilsTest.java",
  "refactorings": "# Refactorings in commit 07dbaffa58c68a7619ce2e34606ffed888cb7f9d\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public getCustomCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public setCustomCommand(customCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public getTaskId() : long from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public setTaskId(taskId long) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public getActionId() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public setActionId(actionId String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public getStdErr() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public setStdErr(stderr String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public getExitCode() : int from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public setExitCode(exitCode int) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public getStdOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public setStdOut(stdout String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public getStructuredOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public setStructuredOut(structuredOut String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public getRoleCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public setRoleCommand(roleCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public getRole() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public setRole(role String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public getStatus() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public setStatus(status String) : void from class org.apache.ambari.server.agent.CommandReport\n\n... and 270 more refactorings in this commit\n",
  "assertion_lines": [
    155,
    156
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 2,
  "assertion_type": "org.junit.Assert.assertEquals(cmd.toString(), cmdDes.toString()), org.junit.Assert.assertEquals(cmd, cmdDes)",
  "test_method_name": "testJasonToExecutionCommand[]",
  "test_body": "{\n    org.apache.ambari.server.utils.StageUtils stageUtils \u003d new org.apache.ambari.server.utils.StageUtils(injector.getInstance(org.apache.ambari.server.actionmanager.StageFactory.class));\n    org.apache.ambari.server.actionmanager.Stage s \u003d org.apache.ambari.server.utils.StageUtils.getATestStage(1, 2, \"host1\", \"clusterHostInfo\", \"hostParamsStage\");\n    org.apache.ambari.server.agent.ExecutionCommand cmd \u003d s.getExecutionCommands(\"host1\").get(0).getExecutionCommand();\n    java.lang.String json \u003d org.apache.ambari.server.utils.StageUtils.jaxbToString(cmd);\n    java.io.InputStream is \u003d new java.io.ByteArrayInputStream(json.getBytes(java.nio.charset.Charset.forName(\"UTF8\")));\n    org.apache.ambari.server.agent.ExecutionCommand cmdDes \u003d new com.google.gson.Gson().fromJson(new java.io.InputStreamReader(is), org.apache.ambari.server.agent.ExecutionCommand.class);\n    org.junit.Assert.assertEquals(cmd.toString(), cmdDes.toString());\n    org.junit.Assert.assertEquals(cmd, cmdDes);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/StageUtilsTest.java",
  "refactorings": "# Refactorings in commit 07dbaffa58c68a7619ce2e34606ffed888cb7f9d\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public getCustomCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public setCustomCommand(customCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public getTaskId() : long from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public setTaskId(taskId long) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public getActionId() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public setActionId(actionId String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public getStdErr() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public setStdErr(stderr String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public getExitCode() : int from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public setExitCode(exitCode int) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public getStdOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public setStdOut(stdout String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public getStructuredOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public setStructuredOut(structuredOut String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public getRoleCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public setRoleCommand(roleCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public getRole() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public setRole(role String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public getStatus() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public setStatus(status String) : void from class org.apache.ambari.server.agent.CommandReport\n\n... and 270 more refactorings in this commit\n",
  "assertion_lines": [
    513,
    514,
    528,
    544,
    547,
    549,
    550,
    553
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 8,
  "assertion_type": "org.junit.Assert.assertEquals(hosts.size(), allHosts.size()), for (org.apache.ambari.server.state.Host host : hosts) {\n    org.junit.Assert.assertTrue(allHosts.contains(host.getHostName()));\n}, if (pingPorts.contains(null)) {\n    org.junit.Assert.assertEquals(new java.util.HashSet\u003c\u003e(pingPorts).size(), actualPingPorts.size() + 1);\n} else {\n    org.junit.Assert.assertEquals(new java.util.HashSet\u003c\u003e(pingPorts).size(), actualPingPorts.size());\n}, org.junit.Assert.assertEquals(expectedPingPorts, reindexedPorts), org.junit.Assert.assertTrue(info.containsKey(org.apache.ambari.server.utils.StageUtils.AMBARI_SERVER_HOST)), org.junit.Assert.assertEquals(1, serverHost.size()), org.junit.Assert.assertEquals(org.apache.ambari.server.utils.StageUtils.getHostName(), serverHost.iterator().next()), org.junit.Assert.assertTrue(getDecompressedSet(info.get(\"hbase_regionserver_hosts\")).contains(9))",
  "test_method_name": "testGetClusterHostInfo[]",
  "test_body": "{\n    final java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e hostAttributes \u003d new java.util.HashMap\u003cjava.lang.String, java.lang.String\u003e() {\n        {\n            put(\"os_family\", \"redhat\");\n            put(\"os_release_version\", \"5.9\");\n        }\n    };\n    final org.apache.ambari.server.state.Clusters clusters \u003d createNiceMock(org.apache.ambari.server.state.Clusters.class);\n    java.util.List\u003corg.apache.ambari.server.state.Host\u003e hosts \u003d new java.util.ArrayList\u003c\u003e();\n    java.util.List\u003cjava.lang.String\u003e hostNames \u003d new java.util.ArrayList\u003c\u003e();\n    java.util.List\u003cjava.lang.Integer\u003e pingPorts \u003d java.util.Arrays.asList(org.apache.ambari.server.utils.StageUtils.DEFAULT_PING_PORT, org.apache.ambari.server.utils.StageUtils.DEFAULT_PING_PORT, org.apache.ambari.server.utils.StageUtils.DEFAULT_PING_PORT, 8671, 8671, null, 8672, 8672, null, 8673);\n    for (int i \u003d 0; i \u003c 10; i++) {\n        java.lang.String hostname \u003d java.lang.String.format(\"h%d\", i);\n        org.apache.ambari.server.state.Host host \u003d createNiceMock(org.apache.ambari.server.state.Host.class);\n        org.easymock.EasyMock.expect(host.getHostName()).andReturn(hostname).anyTimes();\n        org.easymock.EasyMock.expect(host.getHostAttributes()).andReturn(hostAttributes).anyTimes();\n        org.easymock.EasyMock.expect(host.getCurrentPingPort()).andReturn(pingPorts.get(i)).anyTimes();\n        hosts.add(host);\n        hostNames.add(hostname);\n        org.easymock.EasyMock.expect(clusters.getHost(hostname)).andReturn(host).anyTimes();\n    }\n    final org.apache.ambari.server.state.ServiceComponentHost nnh0ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(nnh0ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost snnh1ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(snnh1ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost dnh0ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(dnh0ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost dnh1ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(dnh1ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost dnh2ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(dnh2ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost dnh3ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(dnh3ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost dnh5ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(dnh5ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost dnh7ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(dnh7ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost dnh8ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(dnh8ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost dnh9ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(dnh9ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost hbm5ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(hbm5ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost hbrs1ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(hbrs1ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost hbrs3ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(hbrs3ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost hbrs5ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(hbrs5ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost hbrs8ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(hbrs8ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost hbrs9ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(hbrs9ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost mrjt5ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(mrjt5ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost mrtt1ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(mrtt1ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost mrtt2ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(mrtt2ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.DECOMMISSIONED).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost mrtt3ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(mrtt3ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.DECOMMISSIONED).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost mrtt4ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(mrtt4ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost mrtt5ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(mrtt5ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost mrtt7ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(mrtt7ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost mrtt9ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(mrtt9ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponentHost nns7ServiceComponentHost \u003d createMock(org.apache.ambari.server.state.ServiceComponentHost.class);\n    org.easymock.EasyMock.expect(nns7ServiceComponentHost.getComponentAdminState()).andReturn(org.apache.ambari.server.state.HostComponentAdminState.INSERVICE).anyTimes();\n    java.util.Map\u003cjava.lang.String, java.util.Collection\u003cjava.lang.String\u003e\u003e projectedTopology \u003d new java.util.HashMap\u003c\u003e();\n    final java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e nnServiceComponentHosts \u003d new java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        {\n            put(\"h0\", nnh0ServiceComponentHost);\n        }\n    };\n    insertTopology(projectedTopology, \"NAMENODE\", nnServiceComponentHosts.keySet());\n    final java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e snnServiceComponentHosts \u003d new java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        {\n            put(\"h1\", snnh1ServiceComponentHost);\n        }\n    };\n    insertTopology(projectedTopology, \"SECONDARY_NAMENODE\", snnServiceComponentHosts.keySet());\n    final java.util.Map\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e dnServiceComponentHosts \u003d new java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        {\n            put(\"h0\", dnh0ServiceComponentHost);\n            put(\"h1\", dnh1ServiceComponentHost);\n            put(\"h2\", dnh2ServiceComponentHost);\n            put(\"h3\", dnh3ServiceComponentHost);\n            put(\"h5\", dnh5ServiceComponentHost);\n            put(\"h7\", dnh7ServiceComponentHost);\n            put(\"h8\", dnh8ServiceComponentHost);\n            put(\"h9\", dnh9ServiceComponentHost);\n        }\n    };\n    insertTopology(projectedTopology, \"DATANODE\", dnServiceComponentHosts.keySet());\n    final java.util.Map\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e hbmServiceComponentHosts \u003d new java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        {\n            put(\"h5\", hbm5ServiceComponentHost);\n        }\n    };\n    insertTopology(projectedTopology, \"HBASE_MASTER\", hbmServiceComponentHosts.keySet());\n    final java.util.Map\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e hbrsServiceComponentHosts \u003d new java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        {\n            put(\"h1\", hbrs1ServiceComponentHost);\n            put(\"h3\", hbrs3ServiceComponentHost);\n            put(\"h5\", hbrs5ServiceComponentHost);\n            put(\"h8\", hbrs8ServiceComponentHost);\n            put(\"h9\", hbrs9ServiceComponentHost);\n        }\n    };\n    insertTopology(projectedTopology, \"HBASE_REGIONSERVER\", hbrsServiceComponentHosts.keySet());\n    final java.util.Map\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e mrjtServiceComponentHosts \u003d new java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        {\n            put(\"h5\", mrjt5ServiceComponentHost);\n        }\n    };\n    insertTopology(projectedTopology, \"JOBTRACKER\", mrjtServiceComponentHosts.keySet());\n    final java.util.Map\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e mrttServiceComponentHosts \u003d new java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        {\n            put(\"h1\", mrtt1ServiceComponentHost);\n            put(\"h2\", mrtt2ServiceComponentHost);\n            put(\"h3\", mrtt3ServiceComponentHost);\n            put(\"h4\", mrtt4ServiceComponentHost);\n            put(\"h5\", mrtt5ServiceComponentHost);\n            put(\"h7\", mrtt7ServiceComponentHost);\n            put(\"h9\", mrtt9ServiceComponentHost);\n        }\n    };\n    insertTopology(projectedTopology, \"TASKTRACKER\", mrttServiceComponentHosts.keySet());\n    final java.util.Map\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e nnsServiceComponentHosts \u003d new java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        {\n            put(\"h7\", nns7ServiceComponentHost);\n        }\n    };\n    insertTopology(projectedTopology, \"NONAME_SERVER\", nnsServiceComponentHosts.keySet());\n    final org.apache.ambari.server.state.ServiceComponent nnComponent \u003d createMock(org.apache.ambari.server.state.ServiceComponent.class);\n    org.easymock.EasyMock.expect(nnComponent.getName()).andReturn(\"NAMENODE\").anyTimes();\n    org.easymock.EasyMock.expect(nnComponent.getServiceComponentHost(org.easymock.EasyMock.anyObject(java.lang.String.class))).andAnswer(new org.easymock.IAnswer\u003corg.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        @java.lang.Override\n        public org.apache.ambari.server.state.ServiceComponentHost answer() throws java.lang.Throwable {\n            java.lang.Object[] args \u003d org.easymock.EasyMock.getCurrentArguments();\n            return nnServiceComponentHosts.get(args[0]);\n        }\n    }).anyTimes();\n    org.easymock.EasyMock.expect(nnComponent.getServiceComponentHosts()).andReturn(nnServiceComponentHosts).anyTimes();\n    org.easymock.EasyMock.expect(nnComponent.isClientComponent()).andReturn(false).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponent snnComponent \u003d createMock(org.apache.ambari.server.state.ServiceComponent.class);\n    org.easymock.EasyMock.expect(snnComponent.getName()).andReturn(\"SECONDARY_NAMENODE\").anyTimes();\n    org.easymock.EasyMock.expect(snnComponent.getServiceComponentHost(org.easymock.EasyMock.anyObject(java.lang.String.class))).andAnswer(new org.easymock.IAnswer\u003corg.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        @java.lang.Override\n        public org.apache.ambari.server.state.ServiceComponentHost answer() throws java.lang.Throwable {\n            java.lang.Object[] args \u003d org.easymock.EasyMock.getCurrentArguments();\n            return snnServiceComponentHosts.get(args[0]);\n        }\n    }).anyTimes();\n    org.easymock.EasyMock.expect(snnComponent.getServiceComponentHosts()).andReturn(snnServiceComponentHosts).anyTimes();\n    org.easymock.EasyMock.expect(snnComponent.isClientComponent()).andReturn(false).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponent dnComponent \u003d createMock(org.apache.ambari.server.state.ServiceComponent.class);\n    org.easymock.EasyMock.expect(dnComponent.getName()).andReturn(\"DATANODE\").anyTimes();\n    org.easymock.EasyMock.expect(dnComponent.getServiceComponentHost(org.easymock.EasyMock.anyObject(java.lang.String.class))).andAnswer(new org.easymock.IAnswer\u003corg.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        @java.lang.Override\n        public org.apache.ambari.server.state.ServiceComponentHost answer() throws java.lang.Throwable {\n            java.lang.Object[] args \u003d org.easymock.EasyMock.getCurrentArguments();\n            return dnServiceComponentHosts.get(args[0]);\n        }\n    }).anyTimes();\n    org.easymock.EasyMock.expect(dnComponent.getServiceComponentHosts()).andReturn(dnServiceComponentHosts).anyTimes();\n    org.easymock.EasyMock.expect(dnComponent.isClientComponent()).andReturn(false).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponent hbmComponent \u003d createMock(org.apache.ambari.server.state.ServiceComponent.class);\n    org.easymock.EasyMock.expect(hbmComponent.getName()).andReturn(\"HBASE_MASTER\").anyTimes();\n    org.easymock.EasyMock.expect(hbmComponent.getServiceComponentHost(org.easymock.EasyMock.anyObject(java.lang.String.class))).andAnswer(new org.easymock.IAnswer\u003corg.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        @java.lang.Override\n        public org.apache.ambari.server.state.ServiceComponentHost answer() throws java.lang.Throwable {\n            java.lang.Object[] args \u003d org.easymock.EasyMock.getCurrentArguments();\n            return hbmServiceComponentHosts.get(args[0]);\n        }\n    }).anyTimes();\n    org.easymock.EasyMock.expect(hbmComponent.getServiceComponentHosts()).andReturn(hbmServiceComponentHosts).anyTimes();\n    org.easymock.EasyMock.expect(hbmComponent.isClientComponent()).andReturn(false).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponent hbrsComponent \u003d createMock(org.apache.ambari.server.state.ServiceComponent.class);\n    org.easymock.EasyMock.expect(hbrsComponent.getName()).andReturn(\"HBASE_REGIONSERVER\").anyTimes();\n    org.easymock.EasyMock.expect(hbrsComponent.getServiceComponentHost(org.easymock.EasyMock.anyObject(java.lang.String.class))).andAnswer(new org.easymock.IAnswer\u003corg.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        @java.lang.Override\n        public org.apache.ambari.server.state.ServiceComponentHost answer() throws java.lang.Throwable {\n            java.lang.Object[] args \u003d org.easymock.EasyMock.getCurrentArguments();\n            return hbrsServiceComponentHosts.get(args[0]);\n        }\n    }).anyTimes();\n    java.util.Map\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponentHost\u003e hbrsHosts \u003d com.google.common.collect.Maps.filterKeys(hbrsServiceComponentHosts, new com.google.common.base.Predicate\u003cjava.lang.String\u003e() {\n        @java.lang.Override\n        public boolean apply(java.lang.String s) {\n            return s.equals(\"h1\");\n        }\n    });\n    org.easymock.EasyMock.expect(hbrsComponent.getServiceComponentHosts()).andReturn(hbrsServiceComponentHosts).anyTimes();\n    org.easymock.EasyMock.expect(hbrsComponent.isClientComponent()).andReturn(false).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponent mrjtComponent \u003d createMock(org.apache.ambari.server.state.ServiceComponent.class);\n    org.easymock.EasyMock.expect(mrjtComponent.getName()).andReturn(\"JOBTRACKER\").anyTimes();\n    org.easymock.EasyMock.expect(mrjtComponent.getServiceComponentHost(org.easymock.EasyMock.anyObject(java.lang.String.class))).andAnswer(new org.easymock.IAnswer\u003corg.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        @java.lang.Override\n        public org.apache.ambari.server.state.ServiceComponentHost answer() throws java.lang.Throwable {\n            java.lang.Object[] args \u003d org.easymock.EasyMock.getCurrentArguments();\n            return mrjtServiceComponentHosts.get(args[0]);\n        }\n    }).anyTimes();\n    org.easymock.EasyMock.expect(mrjtComponent.getServiceComponentHosts()).andReturn(mrjtServiceComponentHosts).anyTimes();\n    org.easymock.EasyMock.expect(mrjtComponent.isClientComponent()).andReturn(false).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponent mrttCompomnent \u003d createMock(org.apache.ambari.server.state.ServiceComponent.class);\n    org.easymock.EasyMock.expect(mrttCompomnent.getName()).andReturn(\"TASKTRACKER\").anyTimes();\n    org.easymock.EasyMock.expect(mrttCompomnent.getServiceComponentHost(org.easymock.EasyMock.anyObject(java.lang.String.class))).andAnswer(new org.easymock.IAnswer\u003corg.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        @java.lang.Override\n        public org.apache.ambari.server.state.ServiceComponentHost answer() throws java.lang.Throwable {\n            java.lang.Object[] args \u003d org.easymock.EasyMock.getCurrentArguments();\n            return mrttServiceComponentHosts.get(args[0]);\n        }\n    }).anyTimes();\n    org.easymock.EasyMock.expect(mrttCompomnent.getServiceComponentHosts()).andReturn(mrttServiceComponentHosts).anyTimes();\n    org.easymock.EasyMock.expect(mrttCompomnent.isClientComponent()).andReturn(false).anyTimes();\n    final org.apache.ambari.server.state.ServiceComponent nnsComponent \u003d createMock(org.apache.ambari.server.state.ServiceComponent.class);\n    org.easymock.EasyMock.expect(nnsComponent.getName()).andReturn(\"NONAME_SERVER\").anyTimes();\n    org.easymock.EasyMock.expect(nnsComponent.getServiceComponentHost(org.easymock.EasyMock.anyObject(java.lang.String.class))).andAnswer(new org.easymock.IAnswer\u003corg.apache.ambari.server.state.ServiceComponentHost\u003e() {\n        @java.lang.Override\n        public org.apache.ambari.server.state.ServiceComponentHost answer() throws java.lang.Throwable {\n            java.lang.Object[] args \u003d org.easymock.EasyMock.getCurrentArguments();\n            return nnsServiceComponentHosts.get(args[0]);\n        }\n    }).anyTimes();\n    org.easymock.EasyMock.expect(nnsComponent.getServiceComponentHosts()).andReturn(nnsServiceComponentHosts).anyTimes();\n    org.easymock.EasyMock.expect(nnsComponent.isClientComponent()).andReturn(false).anyTimes();\n    final org.apache.ambari.server.state.Service hdfsService \u003d createMock(org.apache.ambari.server.state.Service.class);\n    org.easymock.EasyMock.expect(hdfsService.getServiceComponents()).andReturn(new java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponent\u003e() {\n        {\n            put(\"NAMENODE\", nnComponent);\n            put(\"SECONDARY_NAMENODE\", snnComponent);\n            put(\"DATANODE\", dnComponent);\n        }\n    }).anyTimes();\n    final org.apache.ambari.server.state.Service hbaseService \u003d createMock(org.apache.ambari.server.state.Service.class);\n    org.easymock.EasyMock.expect(hbaseService.getServiceComponents()).andReturn(new java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponent\u003e() {\n        {\n            put(\"HBASE_MASTER\", hbmComponent);\n            put(\"HBASE_REGIONSERVER\", hbrsComponent);\n        }\n    }).anyTimes();\n    final org.apache.ambari.server.state.Service mrService \u003d createMock(org.apache.ambari.server.state.Service.class);\n    org.easymock.EasyMock.expect(mrService.getServiceComponents()).andReturn(new java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponent\u003e() {\n        {\n            put(\"JOBTRACKER\", mrjtComponent);\n            put(\"TASKTRACKER\", mrttCompomnent);\n        }\n    }).anyTimes();\n    final org.apache.ambari.server.state.Service nnService \u003d createMock(org.apache.ambari.server.state.Service.class);\n    org.easymock.EasyMock.expect(nnService.getServiceComponents()).andReturn(new java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.ServiceComponent\u003e() {\n        {\n            put(\"NONAME_SERVER\", nnsComponent);\n        }\n    }).anyTimes();\n    org.apache.ambari.server.state.Cluster cluster \u003d createMock(org.apache.ambari.server.state.Cluster.class);\n    org.easymock.EasyMock.expect(cluster.getHosts()).andReturn(hosts).anyTimes();\n    org.easymock.EasyMock.expect(cluster.getServices()).andReturn(new java.util.HashMap\u003cjava.lang.String, org.apache.ambari.server.state.Service\u003e() {\n        {\n            put(\"HDFS\", hdfsService);\n            put(\"HBASE\", hbaseService);\n            put(\"MAPREDUCE\", mrService);\n            put(\"NONAME\", nnService);\n        }\n    }).anyTimes();\n    final org.apache.ambari.server.topology.TopologyManager topologyManager \u003d injector.getInstance(org.apache.ambari.server.topology.TopologyManager.class);\n    topologyManager.getPendingHostComponents();\n    org.easymock.EasyMock.expectLastCall().andReturn(projectedTopology).once();\n    replayAll();\n    injector.getInstance(org.apache.ambari.server.api.services.AmbariMetaInfo.class).init();\n    java.util.Map\u003cjava.lang.String, java.util.Set\u003cjava.lang.String\u003e\u003e info \u003d org.apache.ambari.server.utils.StageUtils.getClusterHostInfo(cluster);\n    verifyAll();\n    java.util.Set\u003cjava.lang.String\u003e allHosts \u003d info.get(org.apache.ambari.server.utils.StageUtils.HOSTS_LIST);\n    org.junit.Assert.assertEquals(hosts.size(), allHosts.size());\n    for (org.apache.ambari.server.state.Host host : hosts) {\n        org.junit.Assert.assertTrue(allHosts.contains(host.getHostName()));\n    }\n    checkServiceHostIndexes(info, \"DATANODE\", \"slave_hosts\", projectedTopology, hostNames);\n    checkServiceHostIndexes(info, \"NAMENODE\", \"namenode_host\", projectedTopology, hostNames);\n    checkServiceHostIndexes(info, \"SECONDARY_NAMENODE\", \"snamenode_host\", projectedTopology, hostNames);\n    checkServiceHostIndexes(info, \"HBASE_MASTER\", \"hbase_master_hosts\", projectedTopology, hostNames);\n    checkServiceHostIndexes(info, \"HBASE_REGIONSERVER\", \"hbase_rs_hosts\", projectedTopology, hostNames);\n    checkServiceHostIndexes(info, \"JOBTRACKER\", \"jtnode_host\", projectedTopology, hostNames);\n    checkServiceHostIndexes(info, \"TASKTRACKER\", \"mapred_tt_hosts\", projectedTopology, hostNames);\n    checkServiceHostIndexes(info, \"NONAME_SERVER\", \"noname_server_hosts\", projectedTopology, hostNames);\n    java.util.Set\u003cjava.lang.String\u003e actualPingPorts \u003d info.get(org.apache.ambari.server.utils.StageUtils.PORTS);\n    if (pingPorts.contains(null)) {\n        org.junit.Assert.assertEquals(new java.util.HashSet\u003c\u003e(pingPorts).size(), actualPingPorts.size() + 1);\n    } else {\n        org.junit.Assert.assertEquals(new java.util.HashSet\u003c\u003e(pingPorts).size(), actualPingPorts.size());\n    }\n    java.util.List\u003cjava.lang.Integer\u003e pingPortsActual \u003d getRangeMappedDecompressedSet(actualPingPorts);\n    java.util.List\u003cjava.lang.Integer\u003e reindexedPorts \u003d getReindexedList(pingPortsActual, new java.util.ArrayList\u003c\u003e(allHosts), hostNames);\n    java.util.List\u003cjava.lang.Integer\u003e expectedPingPorts \u003d new java.util.ArrayList\u003c\u003e(pingPorts);\n    for (int i \u003d 0; i \u003c expectedPingPorts.size(); i++) {\n        if (expectedPingPorts.get(i) \u003d\u003d null) {\n            expectedPingPorts.set(i, org.apache.ambari.server.utils.StageUtils.DEFAULT_PING_PORT);\n        }\n    }\n    org.junit.Assert.assertEquals(expectedPingPorts, reindexedPorts);\n    org.junit.Assert.assertTrue(info.containsKey(org.apache.ambari.server.utils.StageUtils.AMBARI_SERVER_HOST));\n    java.util.Set\u003cjava.lang.String\u003e serverHost \u003d info.get(org.apache.ambari.server.utils.StageUtils.AMBARI_SERVER_HOST);\n    org.junit.Assert.assertEquals(1, serverHost.size());\n    org.junit.Assert.assertEquals(org.apache.ambari.server.utils.StageUtils.getHostName(), serverHost.iterator().next());\n    org.junit.Assert.assertTrue(getDecompressedSet(info.get(\"hbase_regionserver_hosts\")).contains(9));\n    info \u003d org.apache.ambari.server.utils.StageUtils.substituteHostIndexes(info);\n    checkServiceHostNames(info, \"DATANODE\", projectedTopology);\n    checkServiceHostNames(info, \"NAMENODE\", projectedTopology);\n    checkServiceHostNames(info, \"SECONDARY_NAMENODE\", projectedTopology);\n    checkServiceHostNames(info, \"HBASE_MASTER\", projectedTopology);\n    checkServiceHostNames(info, \"HBASE_REGIONSERVER\", projectedTopology);\n    checkServiceHostNames(info, \"JOBTRACKER\", projectedTopology);\n    checkServiceHostNames(info, \"TASKTRACKER\", projectedTopology);\n    checkServiceHostNames(info, \"NONAME_SERVER\", projectedTopology);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/StageUtilsTest.java",
  "refactorings": "# Refactorings in commit 07dbaffa58c68a7619ce2e34606ffed888cb7f9d\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public getCustomCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public setCustomCommand(customCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public getTaskId() : long from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public setTaskId(taskId long) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public getActionId() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public setActionId(actionId String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public getStdErr() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public setStdErr(stderr String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public getExitCode() : int from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public setExitCode(exitCode int) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public getStdOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public setStdOut(stdout String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public getStructuredOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public setStructuredOut(structuredOut String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public getRoleCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public setRoleCommand(roleCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public getRole() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public setRole(role String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public getStatus() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public setStatus(status String) : void from class org.apache.ambari.server.agent.CommandReport\n\n... and 270 more refactorings in this commit\n",
  "assertion_lines": [
    591
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "org.junit.Assert.assertTrue(commandParams.isEmpty())",
  "test_method_name": "testUseAmbariJdkWithoutavaHome[]",
  "test_body": "{\n    java.util.Map\u003cjava.lang.String, java.lang.String\u003e commandParams \u003d new java.util.HashMap\u003c\u003e();\n    org.apache.ambari.server.configuration.Configuration configuration \u003d new org.apache.ambari.server.configuration.Configuration();\n    org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams(commandParams, configuration);\n    org.junit.Assert.assertTrue(commandParams.isEmpty());\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/StageUtilsTest.java",
  "refactorings": "# Refactorings in commit 07dbaffa58c68a7619ce2e34606ffed888cb7f9d\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public getCustomCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public setCustomCommand(customCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public getTaskId() : long from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public setTaskId(taskId long) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public getActionId() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public setActionId(actionId String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public getStdErr() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public setStdErr(stderr String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public getExitCode() : int from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public setExitCode(exitCode int) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public getStdOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public setStdOut(stdout String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public getStructuredOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public setStructuredOut(structuredOut String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public getRoleCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public setRoleCommand(roleCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public getRole() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public setRole(role String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public getStatus() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public setStatus(status String) : void from class org.apache.ambari.server.agent.CommandReport\n\n... and 270 more refactorings in this commit\n",
  "assertion_lines": [
    604,
    605
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 2,
  "assertion_type": "org.junit.Assert.assertEquals(\"ambari_java_home\", commandParams.get(\"ambari_java_home\")), org.junit.Assert.assertEquals(2, commandParams.size())",
  "test_method_name": "testUseAmbariJdkWithCustomJavaHome[]",
  "test_body": "{\n    java.util.Map\u003cjava.lang.String, java.lang.String\u003e commandParams \u003d new java.util.HashMap\u003c\u003e();\n    org.apache.ambari.server.configuration.Configuration configuration \u003d new org.apache.ambari.server.configuration.Configuration();\n    configuration.setProperty(\"java.home\", \"myJavaHome\");\n    configuration.setProperty(\"ambari.java.home\", \"ambari_java_home\");\n    org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams(commandParams, configuration);\n    org.junit.Assert.assertEquals(\"ambari_java_home\", commandParams.get(\"ambari_java_home\"));\n    org.junit.Assert.assertEquals(2, commandParams.size());\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/StageUtilsTest.java",
  "refactorings": "# Refactorings in commit 07dbaffa58c68a7619ce2e34606ffed888cb7f9d\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public getCustomCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public setCustomCommand(customCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public getTaskId() : long from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public setTaskId(taskId long) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public getActionId() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public setActionId(actionId String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public getStdErr() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public setStdErr(stderr String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public getExitCode() : int from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public setExitCode(exitCode int) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public getStdOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public setStdOut(stdout String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public getStructuredOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public setStructuredOut(structuredOut String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public getRoleCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public setRoleCommand(roleCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public getRole() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public setRole(role String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public getStatus() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public setStatus(status String) : void from class org.apache.ambari.server.agent.CommandReport\n\n... and 270 more refactorings in this commit\n",
  "assertion_lines": [
    620,
    621,
    622,
    623
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 4,
  "assertion_type": "org.junit.Assert.assertEquals(\"ambari_java_home\", commandParams.get(\"ambari_java_home\")), org.junit.Assert.assertEquals(\"myJdkName\", commandParams.get(\"ambari_jdk_name\")), org.junit.Assert.assertEquals(\"myJceName\", commandParams.get(\"ambari_jce_name\")), org.junit.Assert.assertEquals(4, commandParams.size())",
  "test_method_name": "testUseAmbariJdk[]",
  "test_body": "{\n    java.util.Map\u003cjava.lang.String, java.lang.String\u003e commandParams \u003d new java.util.HashMap\u003c\u003e();\n    org.apache.ambari.server.configuration.Configuration configuration \u003d new org.apache.ambari.server.configuration.Configuration();\n    configuration.setProperty(\"java.home\", \"myJavaHome\");\n    configuration.setProperty(\"jdk.name\", \"myJdkName\");\n    configuration.setProperty(\"jce.name\", \"myJceName\");\n    configuration.setProperty(\"ambari.java.home\", \"ambari_java_home\");\n    org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams(commandParams, configuration);\n    org.junit.Assert.assertEquals(\"ambari_java_home\", commandParams.get(\"ambari_java_home\"));\n    org.junit.Assert.assertEquals(\"myJdkName\", commandParams.get(\"ambari_jdk_name\"));\n    org.junit.Assert.assertEquals(\"myJceName\", commandParams.get(\"ambari_jce_name\"));\n    org.junit.Assert.assertEquals(4, commandParams.size());\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/StageUtilsTest.java",
  "refactorings": "# Refactorings in commit 07dbaffa58c68a7619ce2e34606ffed888cb7f9d\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public getCustomCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public setCustomCommand(customCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public getTaskId() : long from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public setTaskId(taskId long) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public getActionId() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public setActionId(actionId String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public getStdErr() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public setStdErr(stderr String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public getExitCode() : int from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public setExitCode(exitCode int) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public getStdOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public setStdOut(stdout String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public getStructuredOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public setStructuredOut(structuredOut String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public getRoleCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public setRoleCommand(roleCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public getRole() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public setRole(role String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public getStatus() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public setStatus(status String) : void from class org.apache.ambari.server.agent.CommandReport\n\n... and 270 more refactorings in this commit\n",
  "assertion_lines": [
    638,
    639,
    640,
    641
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 4,
  "assertion_type": "org.junit.Assert.assertEquals(\"myStackJavaHome\", hostLevelParams.get(\"java_home\")), org.junit.Assert.assertNull(hostLevelParams.get(\"jdk_name\")), org.junit.Assert.assertNull(hostLevelParams.get(\"jce_name\")), org.junit.Assert.assertEquals(4, hostLevelParams.size())",
  "test_method_name": "testUseStackJdkIfExistsWithCustomStackJdk[]",
  "test_body": "{\n    java.util.Map\u003cjava.lang.String, java.lang.String\u003e hostLevelParams \u003d new java.util.HashMap\u003c\u003e();\n    org.apache.ambari.server.configuration.Configuration configuration \u003d new org.apache.ambari.server.configuration.Configuration();\n    configuration.setProperty(\"java.home\", \"myJavaHome\");\n    configuration.setProperty(\"jdk.name\", \"myJdkName\");\n    configuration.setProperty(\"jce.name\", \"myJceName\");\n    configuration.setProperty(\"stack.java.home\", \"myStackJavaHome\");\n    org.apache.ambari.server.utils.StageUtils.useStackJdkIfExists(hostLevelParams, configuration);\n    org.junit.Assert.assertEquals(\"myStackJavaHome\", hostLevelParams.get(\"java_home\"));\n    org.junit.Assert.assertNull(hostLevelParams.get(\"jdk_name\"));\n    org.junit.Assert.assertNull(hostLevelParams.get(\"jce_name\"));\n    org.junit.Assert.assertEquals(4, hostLevelParams.size());\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/StageUtilsTest.java",
  "refactorings": "# Refactorings in commit 07dbaffa58c68a7619ce2e34606ffed888cb7f9d\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public getCustomCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public setCustomCommand(customCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public getTaskId() : long from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public setTaskId(taskId long) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public getActionId() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public setActionId(actionId String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public getStdErr() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public setStdErr(stderr String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public getExitCode() : int from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public setExitCode(exitCode int) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public getStdOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public setStdOut(stdout String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public getStructuredOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public setStructuredOut(structuredOut String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public getRoleCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public setRoleCommand(roleCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public getRole() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public setRole(role String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public getStatus() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public setStatus(status String) : void from class org.apache.ambari.server.agent.CommandReport\n\n... and 270 more refactorings in this commit\n",
  "assertion_lines": [
    659,
    660,
    661,
    662,
    663
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 5,
  "assertion_type": "org.junit.Assert.assertEquals(\"myStackJavaHome\", hostLevelParams.get(\"java_home\")), org.junit.Assert.assertEquals(\"myStackJdkName\", hostLevelParams.get(\"jdk_name\")), org.junit.Assert.assertEquals(\"myStackJceName\", hostLevelParams.get(\"jce_name\")), org.junit.Assert.assertEquals(\"7\", hostLevelParams.get(\"java_version\")), org.junit.Assert.assertEquals(4, hostLevelParams.size())",
  "test_method_name": "testUseStackJdkIfExists[]",
  "test_body": "{\n    java.util.Map\u003cjava.lang.String, java.lang.String\u003e hostLevelParams \u003d new java.util.HashMap\u003c\u003e();\n    org.apache.ambari.server.configuration.Configuration configuration \u003d new org.apache.ambari.server.configuration.Configuration();\n    configuration.setProperty(\"java.home\", \"myJavaHome\");\n    configuration.setProperty(\"jdk.name\", \"myJdkName\");\n    configuration.setProperty(\"jce.name\", \"myJceName\");\n    configuration.setProperty(\"stack.java.home\", \"myStackJavaHome\");\n    configuration.setProperty(\"stack.jdk.name\", \"myStackJdkName\");\n    configuration.setProperty(\"stack.jce.name\", \"myStackJceName\");\n    configuration.setProperty(\"stack.java.version\", \"7\");\n    org.apache.ambari.server.utils.StageUtils.useStackJdkIfExists(hostLevelParams, configuration);\n    org.junit.Assert.assertEquals(\"myStackJavaHome\", hostLevelParams.get(\"java_home\"));\n    org.junit.Assert.assertEquals(\"myStackJdkName\", hostLevelParams.get(\"jdk_name\"));\n    org.junit.Assert.assertEquals(\"myStackJceName\", hostLevelParams.get(\"jce_name\"));\n    org.junit.Assert.assertEquals(\"7\", hostLevelParams.get(\"java_version\"));\n    org.junit.Assert.assertEquals(4, hostLevelParams.size());\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/StageUtilsTest.java",
  "refactorings": "# Refactorings in commit 07dbaffa58c68a7619ce2e34606ffed888cb7f9d\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public getCustomCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"customCommand\") in method public setCustomCommand(customCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public getTaskId() : long from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"taskId\") in method public setTaskId(taskId long) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public getActionId() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"actionId\") in method public setActionId(actionId String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public getStdErr() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stderr\") in method public setStdErr(stderr String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public getExitCode() : int from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"exitcode\") in method public setExitCode(exitCode int) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public getStdOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"stdout\") in method public setStdOut(stdout String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public getStructuredOut() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"structuredOut\") in method public setStructuredOut(structuredOut String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public getRoleCommand() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"roleCommand\") in method public setRoleCommand(roleCommand String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public getRole() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"role\") in method public setRole(role String) : void from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public getStatus() : String from class org.apache.ambari.server.agent.CommandReport\n\n- Remove Method Annotation\t@com.fasterxml.jackson.annotation.JsonProperty(\"status\") in method public setStatus(status String) : void from class org.apache.ambari.server.agent.CommandReport\n\n... and 270 more refactorings in this commit\n",
  "assertion_lines": [
    677,
    678,
    679,
    680
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 4,
  "assertion_type": "org.junit.Assert.assertEquals(\"myJavaHome\", hostLevelParams.get(\"java_home\")), org.junit.Assert.assertEquals(\"myJdkName\", hostLevelParams.get(\"jdk_name\")), org.junit.Assert.assertEquals(\"myJceName\", hostLevelParams.get(\"jce_name\")), org.junit.Assert.assertEquals(4, hostLevelParams.size())",
  "test_method_name": "testUseStackJdkIfExistsWithoutStackJdk[]",
  "test_body": "{\n    java.util.Map\u003cjava.lang.String, java.lang.String\u003e hostLevelParams \u003d new java.util.HashMap\u003c\u003e();\n    org.apache.ambari.server.configuration.Configuration configuration \u003d new org.apache.ambari.server.configuration.Configuration();\n    configuration.setProperty(\"java.home\", \"myJavaHome\");\n    configuration.setProperty(\"jdk.name\", \"myJdkName\");\n    configuration.setProperty(\"jce.name\", \"myJceName\");\n    org.apache.ambari.server.utils.StageUtils.useStackJdkIfExists(hostLevelParams, configuration);\n    org.junit.Assert.assertEquals(\"myJavaHome\", hostLevelParams.get(\"java_home\"));\n    org.junit.Assert.assertEquals(\"myJdkName\", hostLevelParams.get(\"jdk_name\"));\n    org.junit.Assert.assertEquals(\"myJceName\", hostLevelParams.get(\"jce_name\"));\n    org.junit.Assert.assertEquals(4, hostLevelParams.size());\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/TestDateUtils.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [
    41
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "junit.framework.Assert.assertEquals(\"2014-01-07 20:15:37\", sdf.format(new java.text.SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(readableTime)))",
  "test_method_name": "testConvertToReadableTime[]",
  "test_body": "{\n    java.lang.Long timestamp \u003d 1389125737000L;\n    java.lang.String readableTime \u003d org.apache.ambari.server.utils.DateUtils.convertToReadableTime(timestamp);\n    java.text.SimpleDateFormat sdf \u003d new java.text.SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n    sdf.setTimeZone(java.util.TimeZone.getTimeZone(\"UTC\"));\n    junit.framework.Assert.assertEquals(\"2014-01-07 20:15:37\", sdf.format(new java.text.SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(readableTime)));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/TestDateUtils.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [
    49,
    59
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 2,
  "assertion_type": "junit.framework.Assert.assertNotNull(date), junit.framework.Assert.assertEquals(0, date.compareTo(calendar.getTime()))",
  "test_method_name": "testConvertToDate[]",
  "test_body": "{\n    java.lang.String time \u003d \"2013-11-18T14:29:29-0000\";\n    java.util.Date date \u003d org.apache.ambari.server.utils.DateUtils.convertToDate(time);\n    junit.framework.Assert.assertNotNull(date);\n    java.util.Calendar calendar \u003d java.util.Calendar.getInstance();\n    calendar.setTimeZone(java.util.TimeZone.getTimeZone(\"UTC\"));\n    calendar.set(java.util.Calendar.YEAR, 2013);\n    calendar.set(java.util.Calendar.MONTH, java.util.Calendar.NOVEMBER);\n    calendar.set(java.util.Calendar.DAY_OF_MONTH, 18);\n    calendar.set(java.util.Calendar.HOUR_OF_DAY, 14);\n    calendar.set(java.util.Calendar.MINUTE, 29);\n    calendar.set(java.util.Calendar.SECOND, 29);\n    calendar.set(java.util.Calendar.MILLISECOND, 0);\n    junit.framework.Assert.assertEquals(0, date.compareTo(calendar.getTime()));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/TestDateUtils.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [
    76
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "junit.framework.Assert.assertEquals(java.lang.Long.valueOf(20L).longValue(), diff.longValue())",
  "test_method_name": "testGetDateDifferenceInMinutes[]",
  "test_body": "{\n    java.util.Calendar calendar \u003d java.util.Calendar.getInstance();\n    calendar.setTimeZone(java.util.TimeZone.getTimeZone(\"UTC\"));\n    calendar.set(java.util.Calendar.YEAR, 2013);\n    calendar.set(java.util.Calendar.MONTH, java.util.Calendar.NOVEMBER);\n    calendar.set(java.util.Calendar.DAY_OF_MONTH, 18);\n    calendar.set(java.util.Calendar.HOUR_OF_DAY, 14);\n    calendar.set(java.util.Calendar.MINUTE, 49);\n    calendar.set(java.util.Calendar.SECOND, 29);\n    calendar.set(java.util.Calendar.MILLISECOND, 0);\n    java.lang.String time \u003d \"2013-11-18T14:29:29-0000\";\n    java.util.Date date \u003d org.apache.ambari.server.utils.DateUtils.convertToDate(time);\n    java.lang.Long diff \u003d (java.lang.Math.abs(date.getTime() - calendar.getTimeInMillis()) / (60 * 1000)) % 60;\n    junit.framework.Assert.assertEquals(java.lang.Long.valueOf(20L).longValue(), diff.longValue());\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/TestHTTPUtils.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [
    30,
    34,
    38,
    42,
    46,
    47,
    50,
    51
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 8,
  "assertion_type": "junit.framework.Assert.assertNull(hp), junit.framework.Assert.assertEquals(hp.host, \"c6401.ambari.apache.org\"), junit.framework.Assert.assertEquals(hp.port, 50070)",
  "test_method_name": "testGetHostAndPortFromProperty[]",
  "test_body": "{\n    java.lang.String value \u003d null;\n    org.apache.ambari.server.utils.HostAndPort hp \u003d org.apache.ambari.server.utils.HTTPUtils.getHostAndPortFromProperty(value);\n    junit.framework.Assert.assertNull(hp);\n    value \u003d \"\";\n    hp \u003d org.apache.ambari.server.utils.HTTPUtils.getHostAndPortFromProperty(value);\n    junit.framework.Assert.assertNull(hp);\n    value \u003d \"c6401.ambari.apache.org\";\n    hp \u003d org.apache.ambari.server.utils.HTTPUtils.getHostAndPortFromProperty(value);\n    junit.framework.Assert.assertNull(hp);\n    value \u003d \"c6401.ambari.apache.org:\";\n    hp \u003d org.apache.ambari.server.utils.HTTPUtils.getHostAndPortFromProperty(value);\n    junit.framework.Assert.assertNull(hp);\n    value \u003d \"c6401.ambari.apache.org:50070\";\n    hp \u003d org.apache.ambari.server.utils.HTTPUtils.getHostAndPortFromProperty(value);\n    junit.framework.Assert.assertEquals(hp.host, \"c6401.ambari.apache.org\");\n    junit.framework.Assert.assertEquals(hp.port, 50070);\n    value \u003d \"  c6401.ambari.apache.org:50070   \";\n    junit.framework.Assert.assertEquals(hp.host, \"c6401.ambari.apache.org\");\n    junit.framework.Assert.assertEquals(hp.port, 50070);\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/TestJsonUtils.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [
    34,
    35,
    36,
    37,
    38,
    39,
    40,
    44
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 8,
  "assertion_type": "junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.JsonUtils.isValidJson(null)), junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.JsonUtils.isValidJson(\"\")), junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.JsonUtils.isValidJson(\"{\")), junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.JsonUtils.isValidJson(\"}\")), junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.JsonUtils.isValidJson(\"{}\")), junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.JsonUtils.isValidJson(\"{ \\\"stack\\\" : \\\"HDP\\\" }\")), junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.JsonUtils.isValidJson(((\"{\\n\" + \"  \\\"stack_selector\\\": [\\\"hdp-select\\\", \\\"/usr/bin/hdp-select\\\", \\\"hdp-select\\\"],\\n\") + \"  \\\"conf_selector\\\": [\\\"conf-select\\\", \\\"/usr/bin/conf-select\\\", \\\"conf-select\\\"]\\n\") + \"}\")), junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.JsonUtils.isValidJson(((\"{\\n\" + \"  \\\"stack_selector\\\": [\\\"hdp-select\\\", \\\"/usr/bin/hdp-select\\\", \\\"hdp-select\\\"],\\n\") + \"  \\\"conf_selector\\\": [\\\"conf-select\\\", \\\"/usr/bin/conf-select\\\", \\\"conf-select\\\"]\\n\") + \"\"))",
  "test_method_name": "testIsValidJson[]",
  "test_body": "{\n    junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.JsonUtils.isValidJson(null));\n    junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.JsonUtils.isValidJson(\"\"));\n    junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.JsonUtils.isValidJson(\"{\"));\n    junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.JsonUtils.isValidJson(\"}\"));\n    junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.JsonUtils.isValidJson(\"{}\"));\n    junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.JsonUtils.isValidJson(\"{ \\\"stack\\\" : \\\"HDP\\\" }\"));\n    junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.JsonUtils.isValidJson(((\"{\\n\" + \"  \\\"stack_selector\\\": [\\\"hdp-select\\\", \\\"/usr/bin/hdp-select\\\", \\\"hdp-select\\\"],\\n\") + \"  \\\"conf_selector\\\": [\\\"conf-select\\\", \\\"/usr/bin/conf-select\\\", \\\"conf-select\\\"]\\n\") + \"}\"));\n    junit.framework.Assert.assertFalse(org.apache.ambari.server.utils.JsonUtils.isValidJson(((\"{\\n\" + \"  \\\"stack_selector\\\": [\\\"hdp-select\\\", \\\"/usr/bin/hdp-select\\\", \\\"hdp-select\\\"],\\n\") + \"  \\\"conf_selector\\\": [\\\"conf-select\\\", \\\"/usr/bin/conf-select\\\", \\\"conf-select\\\"]\\n\") + \"\"));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/TestShellCommandUtil.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [
    56,
    58
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 2,
  "assertion_type": "junit.framework.Assert.assertTrue((org.apache.ambari.server.utils.ShellCommandUtil.LINUX ^ org.apache.ambari.server.utils.ShellCommandUtil.WINDOWS) ^ org.apache.ambari.server.utils.ShellCommandUtil.MAC), junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.ShellCommandUtil.LINUX || (org.apache.ambari.server.utils.ShellCommandUtil.MAC \u003d\u003d org.apache.ambari.server.utils.ShellCommandUtil.UNIX_LIKE))",
  "test_method_name": "testOSDetection[]",
  "test_body": "{\n    junit.framework.Assert.assertTrue((org.apache.ambari.server.utils.ShellCommandUtil.LINUX ^ org.apache.ambari.server.utils.ShellCommandUtil.WINDOWS) ^ org.apache.ambari.server.utils.ShellCommandUtil.MAC);\n    junit.framework.Assert.assertTrue(org.apache.ambari.server.utils.ShellCommandUtil.LINUX || (org.apache.ambari.server.utils.ShellCommandUtil.MAC \u003d\u003d org.apache.ambari.server.utils.ShellCommandUtil.UNIX_LIKE));\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/TestShellCommandUtil.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [
    66
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "if (org.apache.ambari.server.utils.ShellCommandUtil.LINUX) {\n    org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions(\"600\", dummyFile.getAbsolutePath());\n    java.lang.String p \u003d org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions(dummyFile.getAbsolutePath());\n    junit.framework.Assert.assertEquals(\"600\", p);\n    org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions(\"444\", dummyFile.getAbsolutePath());\n    p \u003d org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions(dummyFile.getAbsolutePath());\n    junit.framework.Assert.assertEquals(\"444\", p);\n    org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions(\"777\", dummyFile.getAbsolutePath());\n    p \u003d org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions(dummyFile.getAbsolutePath());\n    junit.framework.Assert.assertEquals(\"777\", p);\n} else {\n    org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions(org.apache.ambari.server.utils.ShellCommandUtil.MASK_OWNER_ONLY_RW, dummyFile.getAbsolutePath());\n    java.lang.String p \u003d org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions(dummyFile.getAbsolutePath());\n    junit.framework.Assert.assertEquals(p, org.apache.ambari.server.utils.ShellCommandUtil.MASK_EVERYBODY_RWX);\n}",
  "test_method_name": "testUnixFilePermissions[]",
  "test_body": "{\n    java.io.File dummyFile \u003d new java.io.File((temp.getRoot() + java.io.File.separator) + \"dummy\");\n    new java.io.FileOutputStream(dummyFile).close();\n    if (org.apache.ambari.server.utils.ShellCommandUtil.LINUX) {\n        org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions(\"600\", dummyFile.getAbsolutePath());\n        java.lang.String p \u003d org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions(dummyFile.getAbsolutePath());\n        junit.framework.Assert.assertEquals(\"600\", p);\n        org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions(\"444\", dummyFile.getAbsolutePath());\n        p \u003d org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions(dummyFile.getAbsolutePath());\n        junit.framework.Assert.assertEquals(\"444\", p);\n        org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions(\"777\", dummyFile.getAbsolutePath());\n        p \u003d org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions(dummyFile.getAbsolutePath());\n        junit.framework.Assert.assertEquals(\"777\", p);\n    } else {\n        org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions(org.apache.ambari.server.utils.ShellCommandUtil.MASK_OWNER_ONLY_RW, dummyFile.getAbsolutePath());\n        java.lang.String p \u003d org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions(dummyFile.getAbsolutePath());\n        junit.framework.Assert.assertEquals(p, org.apache.ambari.server.utils.ShellCommandUtil.MASK_EVERYBODY_RWX);\n    }\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/TestShellCommandUtil.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [
    100
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 1,
  "assertion_type": "if (org.apache.ambari.server.utils.ShellCommandUtil.LINUX) {\n    result \u003d org.apache.ambari.server.utils.ShellCommandUtil.runCommand(new java.lang.String[]{ \"echo\", \"dummy\" });\n    junit.framework.Assert.assertEquals(0, result.getExitCode());\n    junit.framework.Assert.assertEquals(\"dummy\\n\", result.getStdout());\n    junit.framework.Assert.assertEquals(\"\", result.getStderr());\n    junit.framework.Assert.assertTrue(result.isSuccessful());\n    result \u003d org.apache.ambari.server.utils.ShellCommandUtil.runCommand(new java.lang.String[]{ \"false\" });\n    junit.framework.Assert.assertEquals(1, result.getExitCode());\n    junit.framework.Assert.assertFalse(result.isSuccessful());\n} else {\n}",
  "test_method_name": "testRunCommand[]",
  "test_body": "{\n    org.apache.ambari.server.utils.ShellCommandUtil.Result result;\n    if (org.apache.ambari.server.utils.ShellCommandUtil.LINUX) {\n        result \u003d org.apache.ambari.server.utils.ShellCommandUtil.runCommand(new java.lang.String[]{ \"echo\", \"dummy\" });\n        junit.framework.Assert.assertEquals(0, result.getExitCode());\n        junit.framework.Assert.assertEquals(\"dummy\\n\", result.getStdout());\n        junit.framework.Assert.assertEquals(\"\", result.getStderr());\n        junit.framework.Assert.assertTrue(result.isSuccessful());\n        result \u003d org.apache.ambari.server.utils.ShellCommandUtil.runCommand(new java.lang.String[]{ \"false\" });\n        junit.framework.Assert.assertEquals(1, result.getExitCode());\n        junit.framework.Assert.assertFalse(result.isSuccessful());\n    } else {\n    }\n}"
},
{
  "file_path": "/Users/jesusvaladez/Desktop/RefactoringMiner 2/src/main/resources/ambari/ambari-server/src/test/java/org/apache/ambari/server/utils/TestShellCommandUtil.java",
  "refactorings": "No refactorings found",
  "assertion_lines": [
    147,
    148,
    149
  ],
  "annotations": "@org.junit.Test",
  "assertion_amount": 3,
  "assertion_type": "junit.framework.Assert.assertEquals(0, result.getExitCode()), junit.framework.Assert.assertTrue(result.isSuccessful()), junit.framework.Assert.assertEquals(\"a1\\na2\\n\", result.getStdout())",
  "test_method_name": "testRunInteractiveCommand[]",
  "test_body": "{\n    org.apache.ambari.server.utils.ShellCommandUtil.InteractiveHandler interactiveHandler \u003d new org.apache.ambari.server.utils.ShellCommandUtil.InteractiveHandler() {\n        boolean done \u003d false;\n\n        @java.lang.Override\n        public boolean done() {\n            return done;\n        }\n\n        @java.lang.Override\n        public java.lang.String getResponse(java.lang.String query) {\n            if (query.contains(\"Arg1\")) {\n                return \"a1\";\n            } else if (query.contains(\"Arg2\")) {\n                done \u003d true;\n                return \"a2\";\n            } else {\n                return null;\n            }\n        }\n\n        @java.lang.Override\n        public void start() {\n        }\n    };\n    org.apache.ambari.server.utils.ShellCommandUtil.Result result \u003d org.apache.ambari.server.utils.ShellCommandUtil.runCommand(new java.lang.String[]{ \"./src/test/resources/interactive_shell_test.sh\" }, null, interactiveHandler, false);\n    junit.framework.Assert.assertEquals(0, result.getExitCode());\n    junit.framework.Assert.assertTrue(result.isSuccessful());\n    junit.framework.Assert.assertEquals(\"a1\\na2\\n\", result.getStdout());\n}"
},
