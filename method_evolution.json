{
  "StrBuilderTest.java": {
    "test_LANG_1131_EqualsWithNullStrBuilder": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void test_LANG_1131_EqualsWithNullStrBuilder() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final org.apache.commons.lang3.text.StrBuilder other \u003d null;\n    org.junit.jupiter.api.Assertions.assertFalse(sb.equals(other));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void test_LANG_1131_EqualsWithNullStrBuilder() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final org.apache.commons.lang3.text.StrBuilder other \u003d null;\n    org.junit.jupiter.api.Assertions.assertFalse(sb.equals(other));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void test_LANG_1131_EqualsWithNullStrBuilder() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final org.apache.commons.lang3.text.StrBuilder other \u003d null;\n    org.junit.jupiter.api.Assertions.assertFalse(sb.equals(other));\n}"
    },
    "testAppendCharBuffer": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testAppendCharBuffer() {\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final java.nio.CharBuffer buf \u003d java.nio.CharBuffer.allocate(10);\n    buf.append(\"0123456789\");\n    buf.flip();\n    sb1.append(buf);\n    org.junit.jupiter.api.Assertions.assertEquals(\"0123456789\", sb1.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb2.append(buf, 1, 8);\n    org.junit.jupiter.api.Assertions.assertEquals(\"12345678\", sb2.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testAppendCharBuffer() {\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final java.nio.CharBuffer buf \u003d java.nio.CharBuffer.allocate(10);\n    buf.append(\"0123456789\");\n    buf.flip();\n    sb1.append(buf);\n    org.junit.jupiter.api.Assertions.assertEquals(\"0123456789\", sb1.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb2.append(buf, 1, 8);\n    org.junit.jupiter.api.Assertions.assertEquals(\"12345678\", sb2.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testAppendCharBuffer() {\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final java.nio.CharBuffer buf \u003d java.nio.CharBuffer.allocate(10);\n    buf.append(\"0123456789\");\n    buf.flip();\n    sb1.append(buf);\n    org.junit.jupiter.api.Assertions.assertEquals(\"0123456789\", sb1.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb2.append(buf, 1, 8);\n    org.junit.jupiter.api.Assertions.assertEquals(\"12345678\", sb2.toString());\n}"
    },
    "testAppendToCharBuffer": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testAppendToCharBuffer() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"1234567890\");\n    final java.lang.String text \u003d \"Test \";\n    final java.nio.CharBuffer buffer \u003d java.nio.CharBuffer.allocate(sb.size() + text.length());\n    buffer.put(text);\n    sb.appendTo(buffer);\n    buffer.flip();\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 1234567890\", buffer.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testAppendToCharBuffer() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"1234567890\");\n    final java.lang.String text \u003d \"Test \";\n    final java.nio.CharBuffer buffer \u003d java.nio.CharBuffer.allocate(sb.size() + text.length());\n    buffer.put(text);\n    sb.appendTo(buffer);\n    buffer.flip();\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 1234567890\", buffer.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testAppendToCharBuffer() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"1234567890\");\n    final java.lang.String text \u003d \"Test \";\n    final java.nio.CharBuffer buffer \u003d java.nio.CharBuffer.allocate(sb.size() + text.length());\n    buffer.put(text);\n    sb.appendTo(buffer);\n    buffer.flip();\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 1234567890\", buffer.toString());\n}"
    },
    "testAppendToStringBuffer": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testAppendToStringBuffer() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"1234567890\");\n    final java.lang.StringBuffer buffer \u003d new java.lang.StringBuffer(\"Test \");\n    sb.appendTo(buffer);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 1234567890\", buffer.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testAppendToStringBuffer() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"1234567890\");\n    final java.lang.StringBuffer buffer \u003d new java.lang.StringBuffer(\"Test \");\n    sb.appendTo(buffer);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 1234567890\", buffer.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testAppendToStringBuffer() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"1234567890\");\n    final java.lang.StringBuffer buffer \u003d new java.lang.StringBuffer(\"Test \");\n    sb.appendTo(buffer);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 1234567890\", buffer.toString());\n}"
    },
    "testAppendToStringBuilder": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testAppendToStringBuilder() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"1234567890\");\n    final java.lang.StringBuilder builder \u003d new java.lang.StringBuilder(\"Test \");\n    sb.appendTo(builder);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 1234567890\", builder.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testAppendToStringBuilder() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"1234567890\");\n    final java.lang.StringBuilder builder \u003d new java.lang.StringBuilder(\"Test \");\n    sb.appendTo(builder);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 1234567890\", builder.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testAppendToStringBuilder() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"1234567890\");\n    final java.lang.StringBuilder builder \u003d new java.lang.StringBuilder(\"Test \");\n    sb.appendTo(builder);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 1234567890\", builder.toString());\n}"
    },
    "testAppendToWriter": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testAppendToWriter() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"1234567890\");\n    final java.io.StringWriter writer \u003d new java.io.StringWriter();\n    writer.append(\"Test \");\n    sb.appendTo(writer);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 1234567890\", writer.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testAppendToWriter() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"1234567890\");\n    final java.io.StringWriter writer \u003d new java.io.StringWriter();\n    writer.append(\"Test \");\n    sb.appendTo(writer);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 1234567890\", writer.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testAppendToWriter() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"1234567890\");\n    final java.io.StringWriter writer \u003d new java.io.StringWriter();\n    writer.append(\"Test \");\n    sb.appendTo(writer);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 1234567890\", writer.toString());\n}"
    },
    "testAsBuilder": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testAsBuilder() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder().appendAll(\"Lorem\", \" \", \"ipsum\", \" \", \"dolor\");\n    org.junit.jupiter.api.Assertions.assertEquals(sb.toString(), sb.build());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testAsBuilder() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder().appendAll(\"Lorem\", \" \", \"ipsum\", \" \", \"dolor\");\n    org.junit.jupiter.api.Assertions.assertEquals(sb.toString(), sb.build());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testAsBuilder() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder().appendAll(\"Lorem\", \" \", \"ipsum\", \" \", \"dolor\");\n    org.junit.jupiter.api.Assertions.assertEquals(sb.toString(), sb.build());\n}"
    },
    "testAsReader": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testAsReader() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"some text\");\n    try (java.io.Reader reader \u003d sb.asReader()) {\n        org.junit.jupiter.api.Assertions.assertTrue(reader.ready());\n        final char[] buf \u003d new char[40];\n        org.junit.jupiter.api.Assertions.assertEquals(9, reader.read(buf));\n        org.junit.jupiter.api.Assertions.assertEquals(\"some text\", new java.lang.String(buf, 0, 9));\n        org.junit.jupiter.api.Assertions.assertEquals(-1, reader.read());\n        org.junit.jupiter.api.Assertions.assertFalse(reader.ready());\n        org.junit.jupiter.api.Assertions.assertEquals(0, reader.skip(2));\n        org.junit.jupiter.api.Assertions.assertEquals(0, reader.skip(-1));\n        org.junit.jupiter.api.Assertions.assertTrue(reader.markSupported());\n    }\n    char[] array \u003d new char[3];\n    try (java.io.Reader reader \u003d sb.asReader()) {\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027s\u0027, reader.read());\n        reader.mark(-1);\n        org.junit.jupiter.api.Assertions.assertEquals(3, reader.read(array, 0, 3));\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, array[0]);\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027m\u0027, array[1]);\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027e\u0027, array[2]);\n        reader.reset();\n        org.junit.jupiter.api.Assertions.assertEquals(1, reader.read(array, 1, 1));\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, array[0]);\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, array[1]);\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027e\u0027, array[2]);\n        org.junit.jupiter.api.Assertions.assertEquals(2, reader.skip(2));\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027 \u0027, reader.read());\n        org.junit.jupiter.api.Assertions.assertTrue(reader.ready());\n        reader.close();\n        org.junit.jupiter.api.Assertions.assertTrue(reader.ready());\n    }\n    try (java.io.Reader r \u003d sb.asReader()) {\n        final char[] arr \u003d new char[3];\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, -1, 0));\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, 0, -1));\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, 100, 1));\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, 0, 100));\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, java.lang.Integer.MAX_VALUE, java.lang.Integer.MAX_VALUE));\n        org.junit.jupiter.api.Assertions.assertEquals(0, r.read(arr, 0, 0));\n        org.junit.jupiter.api.Assertions.assertEquals(0, arr[0]);\n        org.junit.jupiter.api.Assertions.assertEquals(0, arr[1]);\n        org.junit.jupiter.api.Assertions.assertEquals(0, arr[2]);\n        r.skip(9);\n        org.junit.jupiter.api.Assertions.assertEquals(-1, r.read(arr, 0, 1));\n        r.reset();\n        array \u003d new char[30];\n        org.junit.jupiter.api.Assertions.assertEquals(9, r.read(array, 0, 30));\n    }\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testAsReader() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"some text\");\n    try (java.io.Reader reader \u003d sb.asReader()) {\n        org.junit.jupiter.api.Assertions.assertTrue(reader.ready());\n        final char[] buf \u003d new char[40];\n        org.junit.jupiter.api.Assertions.assertEquals(9, reader.read(buf));\n        org.junit.jupiter.api.Assertions.assertEquals(\"some text\", new java.lang.String(buf, 0, 9));\n        org.junit.jupiter.api.Assertions.assertEquals(-1, reader.read());\n        org.junit.jupiter.api.Assertions.assertFalse(reader.ready());\n        org.junit.jupiter.api.Assertions.assertEquals(0, reader.skip(2));\n        org.junit.jupiter.api.Assertions.assertEquals(0, reader.skip(-1));\n        org.junit.jupiter.api.Assertions.assertTrue(reader.markSupported());\n    }\n    char[] array \u003d new char[3];\n    try (java.io.Reader reader \u003d sb.asReader()) {\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027s\u0027, reader.read());\n        reader.mark(-1);\n        org.junit.jupiter.api.Assertions.assertEquals(3, reader.read(array, 0, 3));\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, array[0]);\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027m\u0027, array[1]);\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027e\u0027, array[2]);\n        reader.reset();\n        org.junit.jupiter.api.Assertions.assertEquals(1, reader.read(array, 1, 1));\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, array[0]);\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, array[1]);\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027e\u0027, array[2]);\n        org.junit.jupiter.api.Assertions.assertEquals(2, reader.skip(2));\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027 \u0027, reader.read());\n        org.junit.jupiter.api.Assertions.assertTrue(reader.ready());\n        reader.close();\n        org.junit.jupiter.api.Assertions.assertTrue(reader.ready());\n    }\n    try (java.io.Reader r \u003d sb.asReader()) {\n        final char[] arr \u003d new char[3];\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, -1, 0));\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, 0, -1));\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, 100, 1));\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, 0, 100));\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, java.lang.Integer.MAX_VALUE, java.lang.Integer.MAX_VALUE));\n        org.junit.jupiter.api.Assertions.assertEquals(0, r.read(arr, 0, 0));\n        org.junit.jupiter.api.Assertions.assertEquals(0, arr[0]);\n        org.junit.jupiter.api.Assertions.assertEquals(0, arr[1]);\n        org.junit.jupiter.api.Assertions.assertEquals(0, arr[2]);\n        r.skip(9);\n        org.junit.jupiter.api.Assertions.assertEquals(-1, r.read(arr, 0, 1));\n        r.reset();\n        array \u003d new char[30];\n        org.junit.jupiter.api.Assertions.assertEquals(9, r.read(array, 0, 30));\n    }\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testAsReader() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"some text\");\n    try (java.io.Reader reader \u003d sb.asReader()) {\n        org.junit.jupiter.api.Assertions.assertTrue(reader.ready());\n        final char[] buf \u003d new char[40];\n        org.junit.jupiter.api.Assertions.assertEquals(9, reader.read(buf));\n        org.junit.jupiter.api.Assertions.assertEquals(\"some text\", new java.lang.String(buf, 0, 9));\n        org.junit.jupiter.api.Assertions.assertEquals(-1, reader.read());\n        org.junit.jupiter.api.Assertions.assertFalse(reader.ready());\n        org.junit.jupiter.api.Assertions.assertEquals(0, reader.skip(2));\n        org.junit.jupiter.api.Assertions.assertEquals(0, reader.skip(-1));\n        org.junit.jupiter.api.Assertions.assertTrue(reader.markSupported());\n    }\n    char[] array \u003d new char[3];\n    try (java.io.Reader reader \u003d sb.asReader()) {\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027s\u0027, reader.read());\n        reader.mark(-1);\n        org.junit.jupiter.api.Assertions.assertEquals(3, reader.read(array, 0, 3));\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, array[0]);\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027m\u0027, array[1]);\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027e\u0027, array[2]);\n        reader.reset();\n        org.junit.jupiter.api.Assertions.assertEquals(1, reader.read(array, 1, 1));\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, array[0]);\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, array[1]);\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027e\u0027, array[2]);\n        org.junit.jupiter.api.Assertions.assertEquals(2, reader.skip(2));\n        org.junit.jupiter.api.Assertions.assertEquals(\u0027 \u0027, reader.read());\n        org.junit.jupiter.api.Assertions.assertTrue(reader.ready());\n        reader.close();\n        org.junit.jupiter.api.Assertions.assertTrue(reader.ready());\n    }\n    try (java.io.Reader r \u003d sb.asReader()) {\n        final char[] arr \u003d new char[3];\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, -1, 0));\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, 0, -1));\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, 100, 1));\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, 0, 100));\n        org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e r.read(arr, java.lang.Integer.MAX_VALUE, java.lang.Integer.MAX_VALUE));\n        org.junit.jupiter.api.Assertions.assertEquals(0, r.read(arr, 0, 0));\n        org.junit.jupiter.api.Assertions.assertEquals(0, arr[0]);\n        org.junit.jupiter.api.Assertions.assertEquals(0, arr[1]);\n        org.junit.jupiter.api.Assertions.assertEquals(0, arr[2]);\n        r.skip(9);\n        org.junit.jupiter.api.Assertions.assertEquals(-1, r.read(arr, 0, 1));\n        r.reset();\n        array \u003d new char[30];\n        org.junit.jupiter.api.Assertions.assertEquals(9, r.read(array, 0, 30));\n    }\n}"
    },
    "testAsTokenizer": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testAsTokenizer() {\n    // from Javadoc\n    final org.apache.commons.lang3.text.StrBuilder b \u003d new org.apache.commons.lang3.text.StrBuilder();\n    b.append(\"a b \");\n    final org.apache.commons.lang3.text.StrTokenizer t \u003d b.asTokenizer();\n    final java.lang.String[] tokens1 \u003d t.getTokenArray();\n    org.junit.jupiter.api.Assertions.assertEquals(2, tokens1.length);\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", tokens1[0]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", tokens1[1]);\n    org.junit.jupiter.api.Assertions.assertEquals(2, t.size());\n    b.append(\"c d \");\n    final java.lang.String[] tokens2 \u003d t.getTokenArray();\n    org.junit.jupiter.api.Assertions.assertEquals(2, tokens2.length);\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", tokens2[0]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", tokens2[1]);\n    org.junit.jupiter.api.Assertions.assertEquals(2, t.size());\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", t.next());\n    t.reset();\n    final java.lang.String[] tokens3 \u003d t.getTokenArray();\n    org.junit.jupiter.api.Assertions.assertEquals(4, tokens3.length);\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", tokens3[0]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", tokens3[1]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"c\", tokens3[2]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"d\", tokens3[3]);\n    org.junit.jupiter.api.Assertions.assertEquals(4, t.size());\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"c\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"d\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c d \", t.getContent());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testAsTokenizer() {\n    // from Javadoc\n    final org.apache.commons.lang3.text.StrBuilder b \u003d new org.apache.commons.lang3.text.StrBuilder();\n    b.append(\"a b \");\n    final org.apache.commons.lang3.text.StrTokenizer t \u003d b.asTokenizer();\n    final java.lang.String[] tokens1 \u003d t.getTokenArray();\n    org.junit.jupiter.api.Assertions.assertEquals(2, tokens1.length);\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", tokens1[0]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", tokens1[1]);\n    org.junit.jupiter.api.Assertions.assertEquals(2, t.size());\n    b.append(\"c d \");\n    final java.lang.String[] tokens2 \u003d t.getTokenArray();\n    org.junit.jupiter.api.Assertions.assertEquals(2, tokens2.length);\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", tokens2[0]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", tokens2[1]);\n    org.junit.jupiter.api.Assertions.assertEquals(2, t.size());\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", t.next());\n    t.reset();\n    final java.lang.String[] tokens3 \u003d t.getTokenArray();\n    org.junit.jupiter.api.Assertions.assertEquals(4, tokens3.length);\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", tokens3[0]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", tokens3[1]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"c\", tokens3[2]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"d\", tokens3[3]);\n    org.junit.jupiter.api.Assertions.assertEquals(4, t.size());\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"c\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"d\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c d \", t.getContent());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testAsTokenizer() {\n    // from Javadoc\n    final org.apache.commons.lang3.text.StrBuilder b \u003d new org.apache.commons.lang3.text.StrBuilder();\n    b.append(\"a b \");\n    final org.apache.commons.lang3.text.StrTokenizer t \u003d b.asTokenizer();\n    final java.lang.String[] tokens1 \u003d t.getTokenArray();\n    org.junit.jupiter.api.Assertions.assertEquals(2, tokens1.length);\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", tokens1[0]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", tokens1[1]);\n    org.junit.jupiter.api.Assertions.assertEquals(2, t.size());\n    b.append(\"c d \");\n    final java.lang.String[] tokens2 \u003d t.getTokenArray();\n    org.junit.jupiter.api.Assertions.assertEquals(2, tokens2.length);\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", tokens2[0]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", tokens2[1]);\n    org.junit.jupiter.api.Assertions.assertEquals(2, t.size());\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", t.next());\n    t.reset();\n    final java.lang.String[] tokens3 \u003d t.getTokenArray();\n    org.junit.jupiter.api.Assertions.assertEquals(4, tokens3.length);\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", tokens3[0]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", tokens3[1]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"c\", tokens3[2]);\n    org.junit.jupiter.api.Assertions.assertEquals(\"d\", tokens3[3]);\n    org.junit.jupiter.api.Assertions.assertEquals(4, t.size());\n    org.junit.jupiter.api.Assertions.assertEquals(\"a\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"c\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"d\", t.next());\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c d \", t.getContent());\n}"
    },
    "testAsWriter": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testAsWriter() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"base\");\n    try (java.io.Writer writer \u003d sb.asWriter()) {\n        writer.write(\u0027l\u0027);\n        org.junit.jupiter.api.Assertions.assertEquals(\"basel\", sb.toString());\n        writer.write(new char[]{ \u0027i\u0027, \u0027n\u0027 });\n        org.junit.jupiter.api.Assertions.assertEquals(\"baselin\", sb.toString());\n        writer.write(new char[]{ \u0027n\u0027, \u0027e\u0027, \u0027r\u0027 }, 1, 2);\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner\", sb.toString());\n        writer.write(\" rout\");\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner rout\", sb.toString());\n        writer.write(\"ping that server\", 1, 3);\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner routing\", sb.toString());\n        writer.flush();// no effect\n\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner routing\", sb.toString());\n        writer.close();// no effect\n\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner routing\", sb.toString());\n        writer.write(\" hi\");// works after close\n\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner routing hi\", sb.toString());\n        sb.setLength(4);// mix and match\n\n        writer.write(\u0027d\u0027);\n        org.junit.jupiter.api.Assertions.assertEquals(\"based\", sb.toString());\n    }\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testAsWriter() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"base\");\n    try (java.io.Writer writer \u003d sb.asWriter()) {\n        writer.write(\u0027l\u0027);\n        org.junit.jupiter.api.Assertions.assertEquals(\"basel\", sb.toString());\n        writer.write(new char[]{ \u0027i\u0027, \u0027n\u0027 });\n        org.junit.jupiter.api.Assertions.assertEquals(\"baselin\", sb.toString());\n        writer.write(new char[]{ \u0027n\u0027, \u0027e\u0027, \u0027r\u0027 }, 1, 2);\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner\", sb.toString());\n        writer.write(\" rout\");\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner rout\", sb.toString());\n        writer.write(\"ping that server\", 1, 3);\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner routing\", sb.toString());\n        writer.flush();// no effect\n\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner routing\", sb.toString());\n        writer.close();// no effect\n\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner routing\", sb.toString());\n        writer.write(\" hi\");// works after close\n\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner routing hi\", sb.toString());\n        sb.setLength(4);// mix and match\n\n        writer.write(\u0027d\u0027);\n        org.junit.jupiter.api.Assertions.assertEquals(\"based\", sb.toString());\n    }\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testAsWriter() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"base\");\n    try (java.io.Writer writer \u003d sb.asWriter()) {\n        writer.write(\u0027l\u0027);\n        org.junit.jupiter.api.Assertions.assertEquals(\"basel\", sb.toString());\n        writer.write(new char[]{ \u0027i\u0027, \u0027n\u0027 });\n        org.junit.jupiter.api.Assertions.assertEquals(\"baselin\", sb.toString());\n        writer.write(new char[]{ \u0027n\u0027, \u0027e\u0027, \u0027r\u0027 }, 1, 2);\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner\", sb.toString());\n        writer.write(\" rout\");\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner rout\", sb.toString());\n        writer.write(\"ping that server\", 1, 3);\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner routing\", sb.toString());\n        writer.flush();// no effect\n\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner routing\", sb.toString());\n        writer.close();// no effect\n\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner routing\", sb.toString());\n        writer.write(\" hi\");// works after close\n\n        org.junit.jupiter.api.Assertions.assertEquals(\"baseliner routing hi\", sb.toString());\n        sb.setLength(4);// mix and match\n\n        writer.write(\u0027d\u0027);\n        org.junit.jupiter.api.Assertions.assertEquals(\"based\", sb.toString());\n    }\n}"
    },
    "testCapacity": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testCapacity() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(sb.buffer.length, sb.capacity());\n    sb.append(\"HelloWorldHelloWorldHelloWorldHelloWorld\");\n    org.junit.jupiter.api.Assertions.assertEquals(sb.buffer.length, sb.capacity());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testCapacity() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(sb.buffer.length, sb.capacity());\n    sb.append(\"HelloWorldHelloWorldHelloWorldHelloWorld\");\n    org.junit.jupiter.api.Assertions.assertEquals(sb.buffer.length, sb.capacity());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testCapacity() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(sb.buffer.length, sb.capacity());\n    sb.append(\"HelloWorldHelloWorldHelloWorldHelloWorld\");\n    org.junit.jupiter.api.Assertions.assertEquals(sb.buffer.length, sb.capacity());\n}"
    },
    "testCapacityAndLength": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testCapacityAndLength() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.minimizeCapacity();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.ensureCapacity(32);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.append(\"foo\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.clear();\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.append(\"123456789012345678901234567890123\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e 32);\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.ensureCapacity(16);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e 16);\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.minimizeCapacity();\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setLength(-1), \"setLength(-1) expected StringIndexOutOfBoundsException\");\n    sb.setLength(33);\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.setLength(16);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 16);\n    org.junit.jupiter.api.Assertions.assertEquals(16, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(16, sb.size());\n    org.junit.jupiter.api.Assertions.assertEquals(\"1234567890123456\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.setLength(32);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb.size());\n    org.junit.jupiter.api.Assertions.assertEquals(\"1234567890123456\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.setLength(0);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testCapacityAndLength() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.minimizeCapacity();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.ensureCapacity(32);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.append(\"foo\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.clear();\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.append(\"123456789012345678901234567890123\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e 32);\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.ensureCapacity(16);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e 16);\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.minimizeCapacity();\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setLength(-1), \"setLength(-1) expected StringIndexOutOfBoundsException\");\n    sb.setLength(33);\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.setLength(16);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 16);\n    org.junit.jupiter.api.Assertions.assertEquals(16, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(16, sb.size());\n    org.junit.jupiter.api.Assertions.assertEquals(\"1234567890123456\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.setLength(32);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb.size());\n    org.junit.jupiter.api.Assertions.assertEquals(\"1234567890123456\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.setLength(0);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testCapacityAndLength() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.minimizeCapacity();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.ensureCapacity(32);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.append(\"foo\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.clear();\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.append(\"123456789012345678901234567890123\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e 32);\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.ensureCapacity(16);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e 16);\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.minimizeCapacity();\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setLength(-1), \"setLength(-1) expected StringIndexOutOfBoundsException\");\n    sb.setLength(33);\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(33, sb.size());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.setLength(16);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 16);\n    org.junit.jupiter.api.Assertions.assertEquals(16, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(16, sb.size());\n    org.junit.jupiter.api.Assertions.assertEquals(\"1234567890123456\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.setLength(32);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb.size());\n    org.junit.jupiter.api.Assertions.assertEquals(\"1234567890123456\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.setLength(0);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 32);\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n}"
    },
    "testChaining": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testChaining() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.setNewLineText(null));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.setNullText(null));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.setLength(1));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.setCharAt(0, \u0027a\u0027));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.ensureCapacity(0));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.minimizeCapacity());\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.clear());\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.reverse());\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.trim());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testChaining() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.setNewLineText(null));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.setNullText(null));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.setLength(1));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.setCharAt(0, \u0027a\u0027));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.ensureCapacity(0));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.minimizeCapacity());\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.clear());\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.reverse());\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.trim());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testChaining() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.setNewLineText(null));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.setNullText(null));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.setLength(1));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.setCharAt(0, \u0027a\u0027));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.ensureCapacity(0));\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.minimizeCapacity());\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.clear());\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.reverse());\n    org.junit.jupiter.api.Assertions.assertSame(sb, sb.trim());\n}"
    },
    "testCharAt": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testCharAt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.charAt(0), \"charAt(0) expected IndexOutOfBoundsException\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.charAt(-1), \"charAt(-1) expected IndexOutOfBoundsException\");\n    sb.append(\"foo\");\n    org.junit.jupiter.api.Assertions.assertEquals(\u0027f\u0027, sb.charAt(0));\n    org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, sb.charAt(1));\n    org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, sb.charAt(2));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.charAt(-1), \"charAt(-1) expected IndexOutOfBoundsException\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.charAt(3), \"charAt(3) expected IndexOutOfBoundsException\");\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testCharAt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.charAt(0), \"charAt(0) expected IndexOutOfBoundsException\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.charAt(-1), \"charAt(-1) expected IndexOutOfBoundsException\");\n    sb.append(\"foo\");\n    org.junit.jupiter.api.Assertions.assertEquals(\u0027f\u0027, sb.charAt(0));\n    org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, sb.charAt(1));\n    org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, sb.charAt(2));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.charAt(-1), \"charAt(-1) expected IndexOutOfBoundsException\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.charAt(3), \"charAt(3) expected IndexOutOfBoundsException\");\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testCharAt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.charAt(0), \"charAt(0) expected IndexOutOfBoundsException\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.charAt(-1), \"charAt(-1) expected IndexOutOfBoundsException\");\n    sb.append(\"foo\");\n    org.junit.jupiter.api.Assertions.assertEquals(\u0027f\u0027, sb.charAt(0));\n    org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, sb.charAt(1));\n    org.junit.jupiter.api.Assertions.assertEquals(\u0027o\u0027, sb.charAt(2));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.charAt(-1), \"charAt(-1) expected IndexOutOfBoundsException\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.charAt(3), \"charAt(3) expected IndexOutOfBoundsException\");\n}"
    },
    "testClear": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testClear() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.append(\"Hello\");\n    sb.clear();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.buffer.length \u003e\u003d 5);\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testClear() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.append(\"Hello\");\n    sb.clear();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.buffer.length \u003e\u003d 5);\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testClear() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.append(\"Hello\");\n    sb.clear();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    org.junit.jupiter.api.Assertions.assertTrue(sb.buffer.length \u003e\u003d 5);\n}"
    },
    "testConstructors": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testConstructors() {\n    final org.apache.commons.lang3.text.StrBuilder sb0 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb0.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb0.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb0.size());\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder(32);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb1.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb1.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb1.size());\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder(0);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb2.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb2.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb2.size());\n    final org.apache.commons.lang3.text.StrBuilder sb3 \u003d new org.apache.commons.lang3.text.StrBuilder(-1);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb3.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb3.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb3.size());\n    final org.apache.commons.lang3.text.StrBuilder sb4 \u003d new org.apache.commons.lang3.text.StrBuilder(1);\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb4.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb4.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb4.size());\n    final org.apache.commons.lang3.text.StrBuilder sb5 \u003d new org.apache.commons.lang3.text.StrBuilder(null);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb5.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb5.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb5.size());\n    final org.apache.commons.lang3.text.StrBuilder sb6 \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb6.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb6.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb6.size());\n    final org.apache.commons.lang3.text.StrBuilder sb7 \u003d new org.apache.commons.lang3.text.StrBuilder(\"foo\");\n    org.junit.jupiter.api.Assertions.assertEquals(35, sb7.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb7.length());\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb7.size());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testConstructors() {\n    final org.apache.commons.lang3.text.StrBuilder sb0 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb0.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb0.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb0.size());\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder(32);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb1.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb1.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb1.size());\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder(0);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb2.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb2.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb2.size());\n    final org.apache.commons.lang3.text.StrBuilder sb3 \u003d new org.apache.commons.lang3.text.StrBuilder(-1);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb3.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb3.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb3.size());\n    final org.apache.commons.lang3.text.StrBuilder sb4 \u003d new org.apache.commons.lang3.text.StrBuilder(1);\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb4.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb4.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb4.size());\n    final org.apache.commons.lang3.text.StrBuilder sb5 \u003d new org.apache.commons.lang3.text.StrBuilder(null);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb5.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb5.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb5.size());\n    final org.apache.commons.lang3.text.StrBuilder sb6 \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb6.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb6.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb6.size());\n    final org.apache.commons.lang3.text.StrBuilder sb7 \u003d new org.apache.commons.lang3.text.StrBuilder(\"foo\");\n    org.junit.jupiter.api.Assertions.assertEquals(35, sb7.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb7.length());\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb7.size());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testConstructors() {\n    final org.apache.commons.lang3.text.StrBuilder sb0 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb0.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb0.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb0.size());\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder(32);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb1.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb1.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb1.size());\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder(0);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb2.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb2.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb2.size());\n    final org.apache.commons.lang3.text.StrBuilder sb3 \u003d new org.apache.commons.lang3.text.StrBuilder(-1);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb3.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb3.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb3.size());\n    final org.apache.commons.lang3.text.StrBuilder sb4 \u003d new org.apache.commons.lang3.text.StrBuilder(1);\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb4.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb4.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb4.size());\n    final org.apache.commons.lang3.text.StrBuilder sb5 \u003d new org.apache.commons.lang3.text.StrBuilder(null);\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb5.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb5.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb5.size());\n    final org.apache.commons.lang3.text.StrBuilder sb6 \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    org.junit.jupiter.api.Assertions.assertEquals(32, sb6.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb6.length());\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb6.size());\n    final org.apache.commons.lang3.text.StrBuilder sb7 \u003d new org.apache.commons.lang3.text.StrBuilder(\"foo\");\n    org.junit.jupiter.api.Assertions.assertEquals(35, sb7.capacity());\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb7.length());\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb7.size());\n}"
    },
    "testContains_char": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testContains_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcdefghijklmnopqrstuvwxyz\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\u0027a\u0027));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\u0027o\u0027));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\u0027z\u0027));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(\u00271\u0027));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testContains_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcdefghijklmnopqrstuvwxyz\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\u0027a\u0027));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\u0027o\u0027));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\u0027z\u0027));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(\u00271\u0027));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testContains_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcdefghijklmnopqrstuvwxyz\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\u0027a\u0027));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\u0027o\u0027));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\u0027z\u0027));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(\u00271\u0027));\n}"
    },
    "testContains_String": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testContains_String() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcdefghijklmnopqrstuvwxyz\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\"a\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\"pq\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\"z\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(\"zyx\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(((java.lang.String) (null))));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testContains_String() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcdefghijklmnopqrstuvwxyz\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\"a\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\"pq\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\"z\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(\"zyx\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(((java.lang.String) (null))));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testContains_String() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcdefghijklmnopqrstuvwxyz\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\"a\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\"pq\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(\"z\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(\"zyx\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(((java.lang.String) (null))));\n}"
    },
    "testContains_StrMatcher": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testContains_StrMatcher() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcdefghijklmnopqrstuvwxyz\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"pq\")));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027z\u0027)));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"zy\")));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER));\n    sb.append(\"B A1 C\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testContains_StrMatcher() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcdefghijklmnopqrstuvwxyz\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"pq\")));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027z\u0027)));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"zy\")));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER));\n    sb.append(\"B A1 C\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testContains_StrMatcher() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcdefghijklmnopqrstuvwxyz\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"pq\")));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027z\u0027)));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"zy\")));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER));\n    sb.append(\"B A1 C\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.contains(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER));\n}"
    },
    "testDeleteAll_char": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testDeleteAll_char() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteAll(\u0027X\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteAll(\u0027a\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccb\", sb.toString());\n    sb.deleteAll(\u0027c\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bbb\", sb.toString());\n    sb.deleteAll(\u0027b\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteAll(\u0027b\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testDeleteAll_char() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteAll(\u0027X\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteAll(\u0027a\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccb\", sb.toString());\n    sb.deleteAll(\u0027c\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bbb\", sb.toString());\n    sb.deleteAll(\u0027b\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteAll(\u0027b\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testDeleteAll_char() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteAll(\u0027X\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteAll(\u0027a\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccb\", sb.toString());\n    sb.deleteAll(\u0027c\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bbb\", sb.toString());\n    sb.deleteAll(\u0027b\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteAll(\u0027b\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}"
    },
    "testDeleteAll_String": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testDeleteAll_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteAll(((java.lang.String) (null)));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteAll(\"\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteAll(\"X\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteAll(\"a\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccb\", sb.toString());\n    sb.deleteAll(\"c\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bbb\", sb.toString());\n    sb.deleteAll(\"b\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteAll(\"bc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"acba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteAll(\"bc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testDeleteAll_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteAll(((java.lang.String) (null)));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteAll(\"\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteAll(\"X\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteAll(\"a\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccb\", sb.toString());\n    sb.deleteAll(\"c\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bbb\", sb.toString());\n    sb.deleteAll(\"b\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteAll(\"bc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"acba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteAll(\"bc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testDeleteAll_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteAll(((java.lang.String) (null)));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteAll(\"\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteAll(\"X\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteAll(\"a\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccb\", sb.toString());\n    sb.deleteAll(\"c\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bbb\", sb.toString());\n    sb.deleteAll(\"b\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteAll(\"bc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"acba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteAll(\"bc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}"
    },
    "testDeleteAll_StrMatcher": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testDeleteAll_StrMatcher() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A0xA1A2yA3\");\n    sb.deleteAll(((org.apache.commons.lang3.text.StrMatcher) (null)));\n    org.junit.jupiter.api.Assertions.assertEquals(\"A0xA1A2yA3\", sb.toString());\n    sb.deleteAll(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"xy\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Ax1\");\n    sb.deleteAll(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Ax1\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteAll(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testDeleteAll_StrMatcher() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A0xA1A2yA3\");\n    sb.deleteAll(((org.apache.commons.lang3.text.StrMatcher) (null)));\n    org.junit.jupiter.api.Assertions.assertEquals(\"A0xA1A2yA3\", sb.toString());\n    sb.deleteAll(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"xy\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Ax1\");\n    sb.deleteAll(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Ax1\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteAll(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testDeleteAll_StrMatcher() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A0xA1A2yA3\");\n    sb.deleteAll(((org.apache.commons.lang3.text.StrMatcher) (null)));\n    org.junit.jupiter.api.Assertions.assertEquals(\"A0xA1A2yA3\", sb.toString());\n    sb.deleteAll(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"xy\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Ax1\");\n    sb.deleteAll(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Ax1\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteAll(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}"
    },
    "testDeleteCharAt": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testDeleteCharAt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abc\");\n    sb.deleteCharAt(0);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bc\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.deleteCharAt(1000));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testDeleteCharAt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abc\");\n    sb.deleteCharAt(0);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bc\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.deleteCharAt(1000));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testDeleteCharAt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abc\");\n    sb.deleteCharAt(0);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bc\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.deleteCharAt(1000));\n}"
    },
    "testDeleteFirst_char": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testDeleteFirst_char() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.deleteFirst(\u0027X\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcba\", sb.toString());\n    sb.deleteFirst(\u0027a\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcba\", sb.toString());\n    sb.deleteFirst(\u0027c\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bba\", sb.toString());\n    sb.deleteFirst(\u0027b\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"ba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteFirst(\u0027b\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testDeleteFirst_char() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.deleteFirst(\u0027X\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcba\", sb.toString());\n    sb.deleteFirst(\u0027a\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcba\", sb.toString());\n    sb.deleteFirst(\u0027c\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bba\", sb.toString());\n    sb.deleteFirst(\u0027b\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"ba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteFirst(\u0027b\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testDeleteFirst_char() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.deleteFirst(\u0027X\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcba\", sb.toString());\n    sb.deleteFirst(\u0027a\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcba\", sb.toString());\n    sb.deleteFirst(\u0027c\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bba\", sb.toString());\n    sb.deleteFirst(\u0027b\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"ba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteFirst(\u0027b\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}"
    },
    "testDeleteFirst_String": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testDeleteFirst_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteFirst(((java.lang.String) (null)));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteFirst(\"\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteFirst(\"X\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteFirst(\"a\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccba\", sb.toString());\n    sb.deleteFirst(\"c\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bbccba\", sb.toString());\n    sb.deleteFirst(\"b\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteFirst(\"bc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteFirst(\"bc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testDeleteFirst_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteFirst(((java.lang.String) (null)));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteFirst(\"\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteFirst(\"X\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteFirst(\"a\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccba\", sb.toString());\n    sb.deleteFirst(\"c\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bbccba\", sb.toString());\n    sb.deleteFirst(\"b\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteFirst(\"bc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteFirst(\"bc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testDeleteFirst_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteFirst(((java.lang.String) (null)));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteFirst(\"\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteFirst(\"X\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.deleteFirst(\"a\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccba\", sb.toString());\n    sb.deleteFirst(\"c\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bbccba\", sb.toString());\n    sb.deleteFirst(\"b\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.deleteFirst(\"bc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteFirst(\"bc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}"
    },
    "testDeleteFirst_StrMatcher": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testDeleteFirst_StrMatcher() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A0xA1A2yA3\");\n    sb.deleteFirst(((org.apache.commons.lang3.text.StrMatcher) (null)));\n    org.junit.jupiter.api.Assertions.assertEquals(\"A0xA1A2yA3\", sb.toString());\n    sb.deleteFirst(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"xA1A2yA3\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Ax1\");\n    sb.deleteFirst(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Ax1\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteFirst(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testDeleteFirst_StrMatcher() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A0xA1A2yA3\");\n    sb.deleteFirst(((org.apache.commons.lang3.text.StrMatcher) (null)));\n    org.junit.jupiter.api.Assertions.assertEquals(\"A0xA1A2yA3\", sb.toString());\n    sb.deleteFirst(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"xA1A2yA3\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Ax1\");\n    sb.deleteFirst(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Ax1\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteFirst(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testDeleteFirst_StrMatcher() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A0xA1A2yA3\");\n    sb.deleteFirst(((org.apache.commons.lang3.text.StrMatcher) (null)));\n    org.junit.jupiter.api.Assertions.assertEquals(\"A0xA1A2yA3\", sb.toString());\n    sb.deleteFirst(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"xA1A2yA3\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Ax1\");\n    sb.deleteFirst(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"Ax1\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\");\n    sb.deleteFirst(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}"
    },
    "testDeleteIntInt": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testDeleteIntInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abc\");\n    sb.delete(0, 1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bc\", sb.toString());\n    sb.delete(1, 2);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", sb.toString());\n    sb.delete(0, 1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n    sb.delete(0, 1000);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.delete(1, 2));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.delete(-1, 1));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e new org.apache.commons.lang3.text.StrBuilder(\"anything\").delete(2, 1));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testDeleteIntInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abc\");\n    sb.delete(0, 1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bc\", sb.toString());\n    sb.delete(1, 2);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", sb.toString());\n    sb.delete(0, 1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n    sb.delete(0, 1000);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.delete(1, 2));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.delete(-1, 1));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e new org.apache.commons.lang3.text.StrBuilder(\"anything\").delete(2, 1));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testDeleteIntInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abc\");\n    sb.delete(0, 1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bc\", sb.toString());\n    sb.delete(1, 2);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", sb.toString());\n    sb.delete(0, 1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n    sb.delete(0, 1000);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.delete(1, 2));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.delete(-1, 1));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e new org.apache.commons.lang3.text.StrBuilder(\"anything\").delete(2, 1));\n}"
    },
    "testEndsWith": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testEndsWith() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"a\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"c\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.endsWith(\"\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(null));\n    sb.append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.endsWith(\"c\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.endsWith(\"bc\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.endsWith(\"abc\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"cba\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"abcd\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\" abc\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"abc \"));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testEndsWith() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"a\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"c\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.endsWith(\"\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(null));\n    sb.append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.endsWith(\"c\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.endsWith(\"bc\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.endsWith(\"abc\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"cba\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"abcd\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\" abc\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"abc \"));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testEndsWith() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"a\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"c\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.endsWith(\"\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(null));\n    sb.append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.endsWith(\"c\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.endsWith(\"bc\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.endsWith(\"abc\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"cba\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"abcd\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\" abc\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.endsWith(\"abc \"));\n}"
    },
    "testEnsureCapacity": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testEnsureCapacity() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.ensureCapacity(2);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 2);\n    sb.ensureCapacity(-1);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 0);\n    sb.append(\"HelloWorld\");\n    sb.ensureCapacity(40);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 40);\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testEnsureCapacity() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.ensureCapacity(2);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 2);\n    sb.ensureCapacity(-1);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 0);\n    sb.append(\"HelloWorld\");\n    sb.ensureCapacity(40);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 40);\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testEnsureCapacity() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.ensureCapacity(2);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 2);\n    sb.ensureCapacity(-1);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 0);\n    sb.append(\"HelloWorld\");\n    sb.ensureCapacity(40);\n    org.junit.jupiter.api.Assertions.assertTrue(sb.capacity() \u003e\u003d 40);\n}"
    },
    "testEquals": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testEquals() {\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equals(sb1));\n    org.junit.jupiter.api.Assertions.assertTrue(sb2.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertEquals(sb1, sb2);\n    sb1.append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb1.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertNotEquals(sb1, sb2);\n    sb2.append(\"ABC\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb1.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertNotEquals(sb1, sb2);\n    sb2.clear().append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertEquals(sb1, sb2);\n    org.junit.jupiter.api.Assertions.assertNotEquals(sb1, java.lang.Integer.valueOf(1));\n    org.junit.jupiter.api.Assertions.assertNotEquals(\"abc\", sb1);\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testEquals() {\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equals(sb1));\n    org.junit.jupiter.api.Assertions.assertTrue(sb2.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertEquals(sb1, sb2);\n    sb1.append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb1.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertNotEquals(sb1, sb2);\n    sb2.append(\"ABC\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb1.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertNotEquals(sb1, sb2);\n    sb2.clear().append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertEquals(sb1, sb2);\n    org.junit.jupiter.api.Assertions.assertNotEquals(sb1, java.lang.Integer.valueOf(1));\n    org.junit.jupiter.api.Assertions.assertNotEquals(\"abc\", sb1);\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testEquals() {\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equals(sb1));\n    org.junit.jupiter.api.Assertions.assertTrue(sb2.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertEquals(sb1, sb2);\n    sb1.append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb1.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertNotEquals(sb1, sb2);\n    sb2.append(\"ABC\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb1.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertNotEquals(sb1, sb2);\n    sb2.clear().append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equals(sb2));\n    org.junit.jupiter.api.Assertions.assertEquals(sb1, sb2);\n    org.junit.jupiter.api.Assertions.assertNotEquals(sb1, java.lang.Integer.valueOf(1));\n    org.junit.jupiter.api.Assertions.assertNotEquals(\"abc\", sb1);\n}"
    },
    "testEqualsIgnoreCase": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testEqualsIgnoreCase() {\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb1));\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb2));\n    org.junit.jupiter.api.Assertions.assertTrue(sb2.equalsIgnoreCase(sb2));\n    sb1.append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb1.equalsIgnoreCase(sb2));\n    sb2.append(\"ABC\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb2));\n    sb2.clear().append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb2));\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb1));\n    org.junit.jupiter.api.Assertions.assertTrue(sb2.equalsIgnoreCase(sb2));\n    sb2.clear().append(\"aBc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb2));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testEqualsIgnoreCase() {\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb1));\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb2));\n    org.junit.jupiter.api.Assertions.assertTrue(sb2.equalsIgnoreCase(sb2));\n    sb1.append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb1.equalsIgnoreCase(sb2));\n    sb2.append(\"ABC\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb2));\n    sb2.clear().append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb2));\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb1));\n    org.junit.jupiter.api.Assertions.assertTrue(sb2.equalsIgnoreCase(sb2));\n    sb2.clear().append(\"aBc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb2));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testEqualsIgnoreCase() {\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb1));\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb2));\n    org.junit.jupiter.api.Assertions.assertTrue(sb2.equalsIgnoreCase(sb2));\n    sb1.append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb1.equalsIgnoreCase(sb2));\n    sb2.append(\"ABC\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb2));\n    sb2.clear().append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb2));\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb1));\n    org.junit.jupiter.api.Assertions.assertTrue(sb2.equalsIgnoreCase(sb2));\n    sb2.clear().append(\"aBc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb1.equalsIgnoreCase(sb2));\n}"
    },
    "testGetChars": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testGetChars() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    char[] input \u003d new char[10];\n    char[] a \u003d sb.getChars(input);\n    org.junit.jupiter.api.Assertions.assertSame(input, a);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(new char[10], a);\n    sb.append(\"junit\");\n    a \u003d sb.getChars(input);\n    org.junit.jupiter.api.Assertions.assertSame(input, a);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(new char[]{ \u0027j\u0027, \u0027u\u0027, \u0027n\u0027, \u0027i\u0027, \u0027t\u0027, 0, 0, 0, 0, 0 }, a);\n    a \u003d sb.getChars(null);\n    org.junit.jupiter.api.Assertions.assertNotSame(input, a);\n    org.junit.jupiter.api.Assertions.assertEquals(5, a.length);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"junit\".toCharArray(), a);\n    input \u003d new char[5];\n    a \u003d sb.getChars(input);\n    org.junit.jupiter.api.Assertions.assertSame(input, a);\n    input \u003d new char[4];\n    a \u003d sb.getChars(input);\n    org.junit.jupiter.api.Assertions.assertNotSame(input, a);\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testGetChars() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    char[] input \u003d new char[10];\n    char[] a \u003d sb.getChars(input);\n    org.junit.jupiter.api.Assertions.assertSame(input, a);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(new char[10], a);\n    sb.append(\"junit\");\n    a \u003d sb.getChars(input);\n    org.junit.jupiter.api.Assertions.assertSame(input, a);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(new char[]{ \u0027j\u0027, \u0027u\u0027, \u0027n\u0027, \u0027i\u0027, \u0027t\u0027, 0, 0, 0, 0, 0 }, a);\n    a \u003d sb.getChars(null);\n    org.junit.jupiter.api.Assertions.assertNotSame(input, a);\n    org.junit.jupiter.api.Assertions.assertEquals(5, a.length);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"junit\".toCharArray(), a);\n    input \u003d new char[5];\n    a \u003d sb.getChars(input);\n    org.junit.jupiter.api.Assertions.assertSame(input, a);\n    input \u003d new char[4];\n    a \u003d sb.getChars(input);\n    org.junit.jupiter.api.Assertions.assertNotSame(input, a);\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testGetChars() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    char[] input \u003d new char[10];\n    char[] a \u003d sb.getChars(input);\n    org.junit.jupiter.api.Assertions.assertSame(input, a);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(new char[10], a);\n    sb.append(\"junit\");\n    a \u003d sb.getChars(input);\n    org.junit.jupiter.api.Assertions.assertSame(input, a);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(new char[]{ \u0027j\u0027, \u0027u\u0027, \u0027n\u0027, \u0027i\u0027, \u0027t\u0027, 0, 0, 0, 0, 0 }, a);\n    a \u003d sb.getChars(null);\n    org.junit.jupiter.api.Assertions.assertNotSame(input, a);\n    org.junit.jupiter.api.Assertions.assertEquals(5, a.length);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"junit\".toCharArray(), a);\n    input \u003d new char[5];\n    a \u003d sb.getChars(input);\n    org.junit.jupiter.api.Assertions.assertSame(input, a);\n    input \u003d new char[4];\n    a \u003d sb.getChars(input);\n    org.junit.jupiter.api.Assertions.assertNotSame(input, a);\n}"
    },
    "testGetCharsIntIntCharArrayInt": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testGetCharsIntIntCharArrayInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.append(\"junit\");\n    final char[] a \u003d new char[5];\n    sb.getChars(0, 5, a, 0);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(new char[]{ \u0027j\u0027, \u0027u\u0027, \u0027n\u0027, \u0027i\u0027, \u0027t\u0027 }, a);\n    final char[] b \u003d new char[5];\n    sb.getChars(0, 2, b, 3);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(new char[]{ 0, 0, 0, \u0027j\u0027, \u0027u\u0027 }, b);\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.getChars(-1, 0, b, 0));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.getChars(0, -1, b, 0));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.getChars(0, 20, b, 0));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.getChars(4, 2, b, 0));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testGetCharsIntIntCharArrayInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.append(\"junit\");\n    final char[] a \u003d new char[5];\n    sb.getChars(0, 5, a, 0);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(new char[]{ \u0027j\u0027, \u0027u\u0027, \u0027n\u0027, \u0027i\u0027, \u0027t\u0027 }, a);\n    final char[] b \u003d new char[5];\n    sb.getChars(0, 2, b, 3);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(new char[]{ 0, 0, 0, \u0027j\u0027, \u0027u\u0027 }, b);\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.getChars(-1, 0, b, 0));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.getChars(0, -1, b, 0));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.getChars(0, 20, b, 0));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.getChars(4, 2, b, 0));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testGetCharsIntIntCharArrayInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.append(\"junit\");\n    final char[] a \u003d new char[5];\n    sb.getChars(0, 5, a, 0);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(new char[]{ \u0027j\u0027, \u0027u\u0027, \u0027n\u0027, \u0027i\u0027, \u0027t\u0027 }, a);\n    final char[] b \u003d new char[5];\n    sb.getChars(0, 2, b, 3);\n    org.junit.jupiter.api.Assertions.assertArrayEquals(new char[]{ 0, 0, 0, \u0027j\u0027, \u0027u\u0027 }, b);\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.getChars(-1, 0, b, 0));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.getChars(0, -1, b, 0));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.getChars(0, 20, b, 0));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.getChars(4, 2, b, 0));\n}"
    },
    "testGetSetNewLineText": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testGetSetNewLineText() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNewLineText());\n    sb.setNewLineText(\"#\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"#\", sb.getNewLineText());\n    sb.setNewLineText(\"\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.getNewLineText());\n    sb.setNewLineText(null);\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNewLineText());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testGetSetNewLineText() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNewLineText());\n    sb.setNewLineText(\"#\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"#\", sb.getNewLineText());\n    sb.setNewLineText(\"\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.getNewLineText());\n    sb.setNewLineText(null);\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNewLineText());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testGetSetNewLineText() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNewLineText());\n    sb.setNewLineText(\"#\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"#\", sb.getNewLineText());\n    sb.setNewLineText(\"\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.getNewLineText());\n    sb.setNewLineText(null);\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNewLineText());\n}"
    },
    "testGetSetNullText": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testGetSetNullText() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNullText());\n    sb.setNullText(\"null\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"null\", sb.getNullText());\n    sb.setNullText(\"\");\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNullText());\n    sb.setNullText(\"NULL\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"NULL\", sb.getNullText());\n    sb.setNullText(null);\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNullText());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testGetSetNullText() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNullText());\n    sb.setNullText(\"null\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"null\", sb.getNullText());\n    sb.setNullText(\"\");\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNullText());\n    sb.setNullText(\"NULL\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"NULL\", sb.getNullText());\n    sb.setNullText(null);\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNullText());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testGetSetNullText() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNullText());\n    sb.setNullText(\"null\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"null\", sb.getNullText());\n    sb.setNullText(\"\");\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNullText());\n    sb.setNullText(\"NULL\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"NULL\", sb.getNullText());\n    sb.setNullText(null);\n    org.junit.jupiter.api.Assertions.assertNull(sb.getNullText());\n}"
    },
    "testHashCode": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testHashCode() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final int hc1a \u003d sb.hashCode();\n    final int hc1b \u003d sb.hashCode();\n    org.junit.jupiter.api.Assertions.assertEquals(0, hc1a);\n    org.junit.jupiter.api.Assertions.assertEquals(hc1a, hc1b);\n    sb.append(\"abc\");\n    final int hc2a \u003d sb.hashCode();\n    final int hc2b \u003d sb.hashCode();\n    org.junit.jupiter.api.Assertions.assertTrue(hc2a !\u003d 0);\n    org.junit.jupiter.api.Assertions.assertEquals(hc2a, hc2b);\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testHashCode() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final int hc1a \u003d sb.hashCode();\n    final int hc1b \u003d sb.hashCode();\n    org.junit.jupiter.api.Assertions.assertEquals(0, hc1a);\n    org.junit.jupiter.api.Assertions.assertEquals(hc1a, hc1b);\n    sb.append(\"abc\");\n    final int hc2a \u003d sb.hashCode();\n    final int hc2b \u003d sb.hashCode();\n    org.junit.jupiter.api.Assertions.assertTrue(hc2a !\u003d 0);\n    org.junit.jupiter.api.Assertions.assertEquals(hc2a, hc2b);\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testHashCode() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    final int hc1a \u003d sb.hashCode();\n    final int hc1b \u003d sb.hashCode();\n    org.junit.jupiter.api.Assertions.assertEquals(0, hc1a);\n    org.junit.jupiter.api.Assertions.assertEquals(hc1a, hc1b);\n    sb.append(\"abc\");\n    final int hc2a \u003d sb.hashCode();\n    final int hc2b \u003d sb.hashCode();\n    org.junit.jupiter.api.Assertions.assertTrue(hc2a !\u003d 0);\n    org.junit.jupiter.api.Assertions.assertEquals(hc2a, hc2b);\n}"
    },
    "testIndexOf_char": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testIndexOf_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\u0027a\u0027));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\u0027a\u0027), sb.indexOf(\u0027a\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\u0027b\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\u0027b\u0027), sb.indexOf(\u0027b\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027z\u0027));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testIndexOf_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\u0027a\u0027));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\u0027a\u0027), sb.indexOf(\u0027a\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\u0027b\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\u0027b\u0027), sb.indexOf(\u0027b\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027z\u0027));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testIndexOf_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\u0027a\u0027));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\u0027a\u0027), sb.indexOf(\u0027a\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\u0027b\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\u0027b\u0027), sb.indexOf(\u0027b\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027z\u0027));\n}"
    },
    "testIndexOf_char_int": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testIndexOf_char_int() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\u0027a\u0027, -1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\u0027a\u0027, 0));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\u0027a\u0027, 1));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027a\u0027, 4));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027a\u0027, 5));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\u0027a\u0027, 1), sb.indexOf(\u0027a\u0027, 1));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.indexOf(\u0027b\u0027, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\u0027b\u0027, 2), sb.indexOf(\u0027b\u0027, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027z\u0027, 2));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"xyzabc\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\u0027z\u0027, 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027z\u0027, 3));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testIndexOf_char_int() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\u0027a\u0027, -1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\u0027a\u0027, 0));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\u0027a\u0027, 1));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027a\u0027, 4));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027a\u0027, 5));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\u0027a\u0027, 1), sb.indexOf(\u0027a\u0027, 1));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.indexOf(\u0027b\u0027, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\u0027b\u0027, 2), sb.indexOf(\u0027b\u0027, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027z\u0027, 2));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"xyzabc\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\u0027z\u0027, 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027z\u0027, 3));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testIndexOf_char_int() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\u0027a\u0027, -1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\u0027a\u0027, 0));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\u0027a\u0027, 1));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027a\u0027, 4));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027a\u0027, 5));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\u0027a\u0027, 1), sb.indexOf(\u0027a\u0027, 1));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.indexOf(\u0027b\u0027, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\u0027b\u0027, 2), sb.indexOf(\u0027b\u0027, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027z\u0027, 2));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"xyzabc\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\u0027z\u0027, 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027z\u0027, 3));\n}"
    },
    "testIndexOf_String": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testIndexOf_String() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"a\"));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"a\"), sb.indexOf(\"a\"));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"ab\"));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"ab\"), sb.indexOf(\"ab\"));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\"b\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"b\"), sb.indexOf(\"b\"));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\"ba\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"ba\"), sb.indexOf(\"ba\"));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"z\"));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((java.lang.String) (null))));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testIndexOf_String() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"a\"));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"a\"), sb.indexOf(\"a\"));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"ab\"));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"ab\"), sb.indexOf(\"ab\"));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\"b\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"b\"), sb.indexOf(\"b\"));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\"ba\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"ba\"), sb.indexOf(\"ba\"));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"z\"));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((java.lang.String) (null))));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testIndexOf_String() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"a\"));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"a\"), sb.indexOf(\"a\"));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"ab\"));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"ab\"), sb.indexOf(\"ab\"));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\"b\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"b\"), sb.indexOf(\"b\"));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\"ba\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"ba\"), sb.indexOf(\"ba\"));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"z\"));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((java.lang.String) (null))));\n}"
    },
    "testIndexOf_String_int": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testIndexOf_String_int() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"a\", -1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"a\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\"a\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\"a\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"a\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"a\", 4));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"a\", 5));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"abcdef\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\"\", 1));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"a\", 1), sb.indexOf(\"a\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\"ab\", 1));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"ab\", 1), sb.indexOf(\"ab\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.indexOf(\"b\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"b\", 2), sb.indexOf(\"b\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\"ba\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"ba\", 2), sb.indexOf(\"ba\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"z\", 2));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"xyzabc\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\"za\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"za\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((java.lang.String) (null)), 2));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testIndexOf_String_int() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"a\", -1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"a\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\"a\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\"a\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"a\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"a\", 4));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"a\", 5));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"abcdef\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\"\", 1));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"a\", 1), sb.indexOf(\"a\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\"ab\", 1));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"ab\", 1), sb.indexOf(\"ab\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.indexOf(\"b\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"b\", 2), sb.indexOf(\"b\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\"ba\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"ba\", 2), sb.indexOf(\"ba\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"z\", 2));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"xyzabc\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\"za\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"za\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((java.lang.String) (null)), 2));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testIndexOf_String_int() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"a\", -1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"a\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\"a\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\"a\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"a\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"a\", 4));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"a\", 5));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"abcdef\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(\"\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\"\", 1));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"a\", 1), sb.indexOf(\"a\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\"ab\", 1));\n    // should work like String#indexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"ab\", 1), sb.indexOf(\"ab\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.indexOf(\"b\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"b\", 2), sb.indexOf(\"b\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(\"ba\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".indexOf(\"ba\", 2), sb.indexOf(\"ba\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"z\", 2));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"xyzabc\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(\"za\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"za\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((java.lang.String) (null)), 2));\n}"
    },
    "testIndexOf_StrMatcher": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testIndexOf_StrMatcher() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    sb.append(\"ab bd\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher()));\n    org.junit.jupiter.api.Assertions.assertEquals(4, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027d\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.noneMatcher()));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    sb.append(\" A1 junction\");\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testIndexOf_StrMatcher() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    sb.append(\"ab bd\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher()));\n    org.junit.jupiter.api.Assertions.assertEquals(4, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027d\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.noneMatcher()));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    sb.append(\" A1 junction\");\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testIndexOf_StrMatcher() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    sb.append(\"ab bd\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher()));\n    org.junit.jupiter.api.Assertions.assertEquals(4, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027d\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.noneMatcher()));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    sb.append(\" A1 junction\");\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER));\n}"
    },
    "testIndexOf_StrMatcher_int": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testIndexOf_StrMatcher_int() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((org.apache.commons.lang3.text.StrMatcher) (null)), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 0));\n    sb.append(\"ab bd\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), -2));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 20));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), -1));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 1));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 3));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 4));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 5));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 6));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), -2));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 4));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 20));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((org.apache.commons.lang3.text.StrMatcher) (null)), 0));\n    sb.append(\" A1 junction with A2\");\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 6));\n    org.junit.jupiter.api.Assertions.assertEquals(23, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 7));\n    org.junit.jupiter.api.Assertions.assertEquals(23, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 22));\n    org.junit.jupiter.api.Assertions.assertEquals(23, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 23));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 24));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testIndexOf_StrMatcher_int() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((org.apache.commons.lang3.text.StrMatcher) (null)), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 0));\n    sb.append(\"ab bd\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), -2));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 20));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), -1));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 1));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 3));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 4));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 5));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 6));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), -2));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 4));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 20));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((org.apache.commons.lang3.text.StrMatcher) (null)), 0));\n    sb.append(\" A1 junction with A2\");\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 6));\n    org.junit.jupiter.api.Assertions.assertEquals(23, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 7));\n    org.junit.jupiter.api.Assertions.assertEquals(23, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 22));\n    org.junit.jupiter.api.Assertions.assertEquals(23, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 23));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 24));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testIndexOf_StrMatcher_int() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((org.apache.commons.lang3.text.StrMatcher) (null)), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 0));\n    sb.append(\"ab bd\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), -2));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 20));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), -1));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 1));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 3));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 4));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 5));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 6));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), -2));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 4));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 20));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(((org.apache.commons.lang3.text.StrMatcher) (null)), 0));\n    sb.append(\" A1 junction with A2\");\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 6));\n    org.junit.jupiter.api.Assertions.assertEquals(23, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 7));\n    org.junit.jupiter.api.Assertions.assertEquals(23, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 22));\n    org.junit.jupiter.api.Assertions.assertEquals(23, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 23));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 24));\n}"
    },
    "testIndexOfLang294": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testIndexOfLang294() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"onetwothree\");\n    sb.deleteFirst(\"three\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"three\"));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testIndexOfLang294() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"onetwothree\");\n    sb.deleteFirst(\"three\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"three\"));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testIndexOfLang294() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"onetwothree\");\n    sb.deleteFirst(\"three\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\"three\"));\n}"
    },
    "testIsEmpty": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testIsEmpty() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.append(\"Hello\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.clear();\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testIsEmpty() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.append(\"Hello\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.clear();\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testIsEmpty() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n    sb.append(\"Hello\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb.isEmpty());\n    sb.clear();\n    org.junit.jupiter.api.Assertions.assertTrue(sb.isEmpty());\n}"
    },
    "testLang294": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testLang294() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\\n%BLAH%\\nDo more stuff\\neven more stuff\\n%BLAH%\\n\");\n    sb.deleteAll(\"\\n%BLAH%\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\\nDo more stuff\\neven more stuff\\n\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testLang294() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\\n%BLAH%\\nDo more stuff\\neven more stuff\\n%BLAH%\\n\");\n    sb.deleteAll(\"\\n%BLAH%\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\\nDo more stuff\\neven more stuff\\n\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testLang294() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"\\n%BLAH%\\nDo more stuff\\neven more stuff\\n%BLAH%\\n\");\n    sb.deleteAll(\"\\n%BLAH%\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\\nDo more stuff\\neven more stuff\\n\", sb.toString());\n}"
    },
    "testLang295": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testLang295() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"onetwothree\");\n    sb.deleteFirst(\"three\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(\u0027h\u0027), \"The contains(char) method is looking beyond the end of the string\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027h\u0027), \"The indexOf(char) method is looking beyond the end of the string\");\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testLang295() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"onetwothree\");\n    sb.deleteFirst(\"three\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(\u0027h\u0027), \"The contains(char) method is looking beyond the end of the string\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027h\u0027), \"The indexOf(char) method is looking beyond the end of the string\");\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testLang295() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"onetwothree\");\n    sb.deleteFirst(\"three\");\n    org.junit.jupiter.api.Assertions.assertFalse(sb.contains(\u0027h\u0027), \"The contains(char) method is looking beyond the end of the string\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.indexOf(\u0027h\u0027), \"The indexOf(char) method is looking beyond the end of the string\");\n}"
    },
    "testLang412Left": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testLang412Left() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.appendFixedWidthPadLeft(null, 10, \u0027*\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"**********\", sb.toString(), \"Failed to invoke appendFixedWidthPadLeft correctly\");\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testLang412Left() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.appendFixedWidthPadLeft(null, 10, \u0027*\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"**********\", sb.toString(), \"Failed to invoke appendFixedWidthPadLeft correctly\");\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testLang412Left() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.appendFixedWidthPadLeft(null, 10, \u0027*\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"**********\", sb.toString(), \"Failed to invoke appendFixedWidthPadLeft correctly\");\n}"
    },
    "testLang412Right": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testLang412Right() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.appendFixedWidthPadRight(null, 10, \u0027*\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"**********\", sb.toString(), \"Failed to invoke appendFixedWidthPadRight correctly\");\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testLang412Right() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.appendFixedWidthPadRight(null, 10, \u0027*\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"**********\", sb.toString(), \"Failed to invoke appendFixedWidthPadRight correctly\");\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testLang412Right() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.appendFixedWidthPadRight(null, 10, \u0027*\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"**********\", sb.toString(), \"Failed to invoke appendFixedWidthPadRight correctly\");\n}"
    },
    "testLastIndexOf_char": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\u0027a\u0027));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\u0027a\u0027), sb.lastIndexOf(\u0027a\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(\u0027b\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\u0027b\u0027), sb.lastIndexOf(\u0027b\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\u0027z\u0027));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\u0027a\u0027));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\u0027a\u0027), sb.lastIndexOf(\u0027a\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(\u0027b\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\u0027b\u0027), sb.lastIndexOf(\u0027b\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\u0027z\u0027));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\u0027a\u0027));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\u0027a\u0027), sb.lastIndexOf(\u0027a\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(\u0027b\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\u0027b\u0027), sb.lastIndexOf(\u0027b\u0027));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\u0027z\u0027));\n}"
    },
    "testLastIndexOf_char_int": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_char_int() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\u0027a\u0027, -1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\u0027a\u0027, 0));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\u0027a\u0027, 1));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\u0027a\u0027, 1), sb.lastIndexOf(\u0027a\u0027, 1));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(\u0027b\u0027, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\u0027b\u0027, 2), sb.lastIndexOf(\u0027b\u0027, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\u0027z\u0027, 2));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"xyzabc\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\u0027z\u0027, sb.length()));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\u0027z\u0027, 1));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_char_int() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\u0027a\u0027, -1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\u0027a\u0027, 0));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\u0027a\u0027, 1));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\u0027a\u0027, 1), sb.lastIndexOf(\u0027a\u0027, 1));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(\u0027b\u0027, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\u0027b\u0027, 2), sb.lastIndexOf(\u0027b\u0027, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\u0027z\u0027, 2));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"xyzabc\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\u0027z\u0027, sb.length()));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\u0027z\u0027, 1));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_char_int() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\u0027a\u0027, -1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\u0027a\u0027, 0));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\u0027a\u0027, 1));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\u0027a\u0027, 1), sb.lastIndexOf(\u0027a\u0027, 1));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(\u0027b\u0027, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\u0027b\u0027, 2), sb.lastIndexOf(\u0027b\u0027, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\u0027z\u0027, 2));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"xyzabc\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\u0027z\u0027, sb.length()));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\u0027z\u0027, 1));\n}"
    },
    "testLastIndexOf_String": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_String() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\"));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"a\"), sb.lastIndexOf(\"a\"));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"ab\"));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"ab\"), sb.lastIndexOf(\"ab\"));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(\"b\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"b\"), sb.lastIndexOf(\"b\"));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(\"ba\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"ba\"), sb.lastIndexOf(\"ba\"));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"z\"));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((java.lang.String) (null))));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_String() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\"));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"a\"), sb.lastIndexOf(\"a\"));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"ab\"));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"ab\"), sb.lastIndexOf(\"ab\"));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(\"b\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"b\"), sb.lastIndexOf(\"b\"));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(\"ba\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"ba\"), sb.lastIndexOf(\"ba\"));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"z\"));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((java.lang.String) (null))));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_String() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\"));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"a\"), sb.lastIndexOf(\"a\"));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"ab\"));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"ab\"), sb.lastIndexOf(\"ab\"));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(\"b\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"b\"), sb.lastIndexOf(\"b\"));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(\"ba\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"ba\"), sb.lastIndexOf(\"ba\"));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"z\"));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((java.lang.String) (null))));\n}"
    },
    "testLastIndexOf_String_int": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_String_int() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"a\", -1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\"a\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\"a\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\", 4));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\", 5));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"abcdef\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"\", 3), sb.lastIndexOf(\"\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"\", 1), sb.lastIndexOf(\"\", 1));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"a\", 1), sb.lastIndexOf(\"a\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\"ab\", 1));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"ab\", 1), sb.lastIndexOf(\"ab\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(\"b\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"b\", 2), sb.lastIndexOf(\"b\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(\"ba\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"ba\", 2), sb.lastIndexOf(\"ba\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"z\", 2));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"xyzabc\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"za\", sb.length()));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"za\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((java.lang.String) (null)), 2));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_String_int() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"a\", -1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\"a\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\"a\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\", 4));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\", 5));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"abcdef\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"\", 3), sb.lastIndexOf(\"\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"\", 1), sb.lastIndexOf(\"\", 1));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"a\", 1), sb.lastIndexOf(\"a\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\"ab\", 1));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"ab\", 1), sb.lastIndexOf(\"ab\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(\"b\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"b\", 2), sb.lastIndexOf(\"b\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(\"ba\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"ba\", 2), sb.lastIndexOf(\"ba\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"z\", 2));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"xyzabc\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"za\", sb.length()));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"za\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((java.lang.String) (null)), 2));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_String_int() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abab\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"a\", -1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\"a\", 0));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\"a\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\", 4));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"a\", 5));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"abcdef\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"\", 3), sb.lastIndexOf(\"\", 3));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"\", 1), sb.lastIndexOf(\"\", 1));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"a\", 1), sb.lastIndexOf(\"a\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(\"ab\", 1));\n    // should work like String#lastIndexOf\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"ab\", 1), sb.lastIndexOf(\"ab\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(\"b\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"b\", 2), sb.lastIndexOf(\"b\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(\"ba\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"abab\".lastIndexOf(\"ba\", 2), sb.lastIndexOf(\"ba\", 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"z\", 2));\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"xyzabc\");\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(\"za\", sb.length()));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(\"za\", 1));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((java.lang.String) (null)), 2));\n}"
    },
    "testLastIndexOf_StrMatcher": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_StrMatcher() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    sb.append(\"ab bd\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher()));\n    org.junit.jupiter.api.Assertions.assertEquals(4, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027d\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.noneMatcher()));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    sb.append(\" A1 junction\");\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_StrMatcher() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    sb.append(\"ab bd\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher()));\n    org.junit.jupiter.api.Assertions.assertEquals(4, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027d\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.noneMatcher()));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    sb.append(\" A1 junction\");\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_StrMatcher() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    sb.append(\"ab bd\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher()));\n    org.junit.jupiter.api.Assertions.assertEquals(4, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027d\u0027)));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.noneMatcher()));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((org.apache.commons.lang3.text.StrMatcher) (null))));\n    sb.append(\" A1 junction\");\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER));\n}"
    },
    "testLastIndexOf_StrMatcher_int": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_StrMatcher_int() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((org.apache.commons.lang3.text.StrMatcher) (null)), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), -1));\n    sb.append(\"ab bd\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), -2));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 20));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), -1));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 1));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 3));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 4));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 5));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 6));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), -2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 4));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 20));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((org.apache.commons.lang3.text.StrMatcher) (null)), 0));\n    sb.append(\" A1 junction with A2\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 6));// A matches, 1 is outside bounds\n\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 7));\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 22));\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 23));// A matches, 2 is outside bounds\n\n    org.junit.jupiter.api.Assertions.assertEquals(23, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 24));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_StrMatcher_int() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((org.apache.commons.lang3.text.StrMatcher) (null)), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), -1));\n    sb.append(\"ab bd\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), -2));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 20));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), -1));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 1));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 3));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 4));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 5));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 6));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), -2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 4));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 20));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((org.apache.commons.lang3.text.StrMatcher) (null)), 0));\n    sb.append(\" A1 junction with A2\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 6));// A matches, 1 is outside bounds\n\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 7));\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 22));\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 23));// A matches, 2 is outside bounds\n\n    org.junit.jupiter.api.Assertions.assertEquals(23, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 24));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testLastIndexOf_StrMatcher_int() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((org.apache.commons.lang3.text.StrMatcher) (null)), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), -1));\n    sb.append(\"ab bd\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), -2));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), 20));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), -1));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 1));\n    org.junit.jupiter.api.Assertions.assertEquals(1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 3));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 4));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 5));\n    org.junit.jupiter.api.Assertions.assertEquals(3, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), 6));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), -2));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 2));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 4));\n    org.junit.jupiter.api.Assertions.assertEquals(2, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.spaceMatcher(), 20));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), 0));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(((org.apache.commons.lang3.text.StrMatcher) (null)), 0));\n    sb.append(\" A1 junction with A2\");\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(-1, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 6));// A matches, 1 is outside bounds\n\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 7));\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 22));\n    org.junit.jupiter.api.Assertions.assertEquals(6, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 23));// A matches, 2 is outside bounds\n\n    org.junit.jupiter.api.Assertions.assertEquals(23, sb.lastIndexOf(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, 24));\n}"
    },
    "testLeftString": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testLeftString() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"left right\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"left\", sb.leftString(4));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.leftString(0));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.leftString(-5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"left right\", sb.leftString(15));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testLeftString() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"left right\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"left\", sb.leftString(4));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.leftString(0));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.leftString(-5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"left right\", sb.leftString(15));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testLeftString() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"left right\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"left\", sb.leftString(4));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.leftString(0));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.leftString(-5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"left right\", sb.leftString(15));\n}"
    },
    "testLength": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testLength() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    sb.append(\"Hello\");\n    org.junit.jupiter.api.Assertions.assertEquals(5, sb.length());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testLength() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    sb.append(\"Hello\");\n    org.junit.jupiter.api.Assertions.assertEquals(5, sb.length());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testLength() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.length());\n    sb.append(\"Hello\");\n    org.junit.jupiter.api.Assertions.assertEquals(5, sb.length());\n}"
    },
    "testMidString": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testMidString() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"hello goodbye hello\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.midString(6, 7));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.midString(0, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.midString(-5, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.midString(0, -1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.midString(20, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.midString(14, 22));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testMidString() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"hello goodbye hello\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.midString(6, 7));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.midString(0, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.midString(-5, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.midString(0, -1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.midString(20, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.midString(14, 22));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testMidString() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"hello goodbye hello\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.midString(6, 7));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.midString(0, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.midString(-5, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.midString(0, -1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.midString(20, 2));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.midString(14, 22));\n}"
    },
    "testMinimizeCapacity": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testMinimizeCapacity() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.minimizeCapacity();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.capacity());\n    sb.append(\"HelloWorld\");\n    sb.minimizeCapacity();\n    org.junit.jupiter.api.Assertions.assertEquals(10, sb.capacity());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testMinimizeCapacity() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.minimizeCapacity();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.capacity());\n    sb.append(\"HelloWorld\");\n    sb.minimizeCapacity();\n    org.junit.jupiter.api.Assertions.assertEquals(10, sb.capacity());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testMinimizeCapacity() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.minimizeCapacity();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.capacity());\n    sb.append(\"HelloWorld\");\n    sb.minimizeCapacity();\n    org.junit.jupiter.api.Assertions.assertEquals(10, sb.capacity());\n}"
    },
    "testReadFromCharBuffer": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReadFromCharBuffer() throws java.lang.Exception {\n    java.lang.String s \u003d \"\";\n    for (int i \u003d 0; i \u003c 100; ++i) {\n        final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n        final int len \u003d sb.readFrom(java.nio.CharBuffer.wrap(s));\n        org.junit.jupiter.api.Assertions.assertEquals(s.length(), len);\n        org.junit.jupiter.api.Assertions.assertEquals(s, sb.toString());\n        s +\u003d java.lang.Integer.toString(i);\n    }\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReadFromCharBuffer() throws java.lang.Exception {\n    java.lang.String s \u003d \"\";\n    for (int i \u003d 0; i \u003c 100; ++i) {\n        final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n        final int len \u003d sb.readFrom(java.nio.CharBuffer.wrap(s));\n        org.junit.jupiter.api.Assertions.assertEquals(s.length(), len);\n        org.junit.jupiter.api.Assertions.assertEquals(s, sb.toString());\n        s +\u003d java.lang.Integer.toString(i);\n    }\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReadFromCharBuffer() throws java.lang.Exception {\n    java.lang.String s \u003d \"\";\n    for (int i \u003d 0; i \u003c 100; ++i) {\n        final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n        final int len \u003d sb.readFrom(java.nio.CharBuffer.wrap(s));\n        org.junit.jupiter.api.Assertions.assertEquals(s.length(), len);\n        org.junit.jupiter.api.Assertions.assertEquals(s, sb.toString());\n        s +\u003d java.lang.Integer.toString(i);\n    }\n}"
    },
    "testReadFromCharBufferAppendsToEnd": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReadFromCharBufferAppendsToEnd() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Test\");\n    sb.readFrom(java.nio.CharBuffer.wrap(\" 123\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 123\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReadFromCharBufferAppendsToEnd() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Test\");\n    sb.readFrom(java.nio.CharBuffer.wrap(\" 123\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 123\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReadFromCharBufferAppendsToEnd() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Test\");\n    sb.readFrom(java.nio.CharBuffer.wrap(\" 123\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 123\", sb.toString());\n}"
    },
    "testReadFromReadable": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReadFromReadable() throws java.lang.Exception {\n    java.lang.String s \u003d \"\";\n    for (int i \u003d 0; i \u003c 100; ++i) {\n        final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n        final int len \u003d sb.readFrom(new org.apache.commons.lang3.text.StrBuilderTest.MockReadable(s));\n        org.junit.jupiter.api.Assertions.assertEquals(s.length(), len);\n        org.junit.jupiter.api.Assertions.assertEquals(s, sb.toString());\n        s +\u003d java.lang.Integer.toString(i);\n    }\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReadFromReadable() throws java.lang.Exception {\n    java.lang.String s \u003d \"\";\n    for (int i \u003d 0; i \u003c 100; ++i) {\n        final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n        final int len \u003d sb.readFrom(new org.apache.commons.lang3.text.StrBuilderTest.MockReadable(s));\n        org.junit.jupiter.api.Assertions.assertEquals(s.length(), len);\n        org.junit.jupiter.api.Assertions.assertEquals(s, sb.toString());\n        s +\u003d java.lang.Integer.toString(i);\n    }\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReadFromReadable() throws java.lang.Exception {\n    java.lang.String s \u003d \"\";\n    for (int i \u003d 0; i \u003c 100; ++i) {\n        final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n        final int len \u003d sb.readFrom(new org.apache.commons.lang3.text.StrBuilderTest.MockReadable(s));\n        org.junit.jupiter.api.Assertions.assertEquals(s.length(), len);\n        org.junit.jupiter.api.Assertions.assertEquals(s, sb.toString());\n        s +\u003d java.lang.Integer.toString(i);\n    }\n}"
    },
    "testReadFromReadableAppendsToEnd": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReadFromReadableAppendsToEnd() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Test\");\n    sb.readFrom(new org.apache.commons.lang3.text.StrBuilderTest.MockReadable(\" 123\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 123\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReadFromReadableAppendsToEnd() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Test\");\n    sb.readFrom(new org.apache.commons.lang3.text.StrBuilderTest.MockReadable(\" 123\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 123\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReadFromReadableAppendsToEnd() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Test\");\n    sb.readFrom(new org.apache.commons.lang3.text.StrBuilderTest.MockReadable(\" 123\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 123\", sb.toString());\n}"
    },
    "testReadFromReader": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReadFromReader() throws java.lang.Exception {\n    java.lang.String s \u003d \"\";\n    for (int i \u003d 0; i \u003c 100; ++i) {\n        final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n        final int len \u003d sb.readFrom(new java.io.StringReader(s));\n        org.junit.jupiter.api.Assertions.assertEquals(s.length(), len);\n        org.junit.jupiter.api.Assertions.assertEquals(s, sb.toString());\n        s +\u003d java.lang.Integer.toString(i);\n    }\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReadFromReader() throws java.lang.Exception {\n    java.lang.String s \u003d \"\";\n    for (int i \u003d 0; i \u003c 100; ++i) {\n        final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n        final int len \u003d sb.readFrom(new java.io.StringReader(s));\n        org.junit.jupiter.api.Assertions.assertEquals(s.length(), len);\n        org.junit.jupiter.api.Assertions.assertEquals(s, sb.toString());\n        s +\u003d java.lang.Integer.toString(i);\n    }\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReadFromReader() throws java.lang.Exception {\n    java.lang.String s \u003d \"\";\n    for (int i \u003d 0; i \u003c 100; ++i) {\n        final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n        final int len \u003d sb.readFrom(new java.io.StringReader(s));\n        org.junit.jupiter.api.Assertions.assertEquals(s.length(), len);\n        org.junit.jupiter.api.Assertions.assertEquals(s, sb.toString());\n        s +\u003d java.lang.Integer.toString(i);\n    }\n}"
    },
    "testReadFromReaderAppendsToEnd": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReadFromReaderAppendsToEnd() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Test\");\n    sb.readFrom(new java.io.StringReader(\" 123\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 123\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReadFromReaderAppendsToEnd() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Test\");\n    sb.readFrom(new java.io.StringReader(\" 123\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 123\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReadFromReaderAppendsToEnd() throws java.lang.Exception {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Test\");\n    sb.readFrom(new java.io.StringReader(\" 123\"));\n    org.junit.jupiter.api.Assertions.assertEquals(\"Test 123\", sb.toString());\n}"
    },
    "testReplace_int_int_String": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReplace_int_int_String() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abc\");\n    sb.replace(0, 1, \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbc\", sb.toString());\n    sb.replace(0, 1, \"aaa\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaabc\", sb.toString());\n    sb.replace(0, 3, \"\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bc\", sb.toString());\n    sb.replace(1, 2, null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", sb.toString());\n    sb.replace(1, 1000, \"text\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"btext\", sb.toString());\n    sb.replace(0, 1000, \"text\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"text\", sb.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder(\"atext\");\n    sb1.replace(1, 1, \"ny\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"anytext\", sb1.toString());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb1.replace(2, 1, \"anything\"));\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb2.replace(1, 2, \"anything\"));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb2.replace(-1, 1, \"anything\"));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReplace_int_int_String() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abc\");\n    sb.replace(0, 1, \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbc\", sb.toString());\n    sb.replace(0, 1, \"aaa\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaabc\", sb.toString());\n    sb.replace(0, 3, \"\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bc\", sb.toString());\n    sb.replace(1, 2, null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", sb.toString());\n    sb.replace(1, 1000, \"text\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"btext\", sb.toString());\n    sb.replace(0, 1000, \"text\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"text\", sb.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder(\"atext\");\n    sb1.replace(1, 1, \"ny\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"anytext\", sb1.toString());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb1.replace(2, 1, \"anything\"));\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb2.replace(1, 2, \"anything\"));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb2.replace(-1, 1, \"anything\"));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReplace_int_int_String() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abc\");\n    sb.replace(0, 1, \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbc\", sb.toString());\n    sb.replace(0, 1, \"aaa\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaabc\", sb.toString());\n    sb.replace(0, 3, \"\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bc\", sb.toString());\n    sb.replace(1, 2, null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"b\", sb.toString());\n    sb.replace(1, 1000, \"text\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"btext\", sb.toString());\n    sb.replace(0, 1000, \"text\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"text\", sb.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder(\"atext\");\n    sb1.replace(1, 1, \"ny\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"anytext\", sb1.toString());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb1.replace(2, 1, \"anything\"));\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb2.replace(1, 2, \"anything\"));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb2.replace(-1, 1, \"anything\"));\n}"
    },
    "testReplace_StrMatcher_String_int_int_int_VaryCount": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryCount() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 0);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-xaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 2);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x-aayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 3);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--yaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 4);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 5);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryCount() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 0);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-xaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 2);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x-aayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 3);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--yaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 4);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 5);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryCount() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 0);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-xaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 2);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x-aayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 3);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--yaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 4);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, 5);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n}"
    },
    "testReplace_StrMatcher_String_int_int_int_VaryEndIndex": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryEndIndex() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 0, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 2, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-xaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 3, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-xaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 4, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-xaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 5, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x-aayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 6, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x-aayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 7, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--yaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 8, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--yaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 9, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--yaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 1000, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb1.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 2, 1, -1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb1.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryEndIndex() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 0, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 2, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-xaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 3, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-xaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 4, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-xaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 5, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x-aayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 6, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x-aayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 7, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--yaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 8, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--yaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 9, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--yaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 1000, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb1.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 2, 1, -1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb1.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryEndIndex() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 0, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 2, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-xaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 3, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-xaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 4, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-xaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 5, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x-aayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 6, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x-aayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 7, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--yaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 8, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--yaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 9, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--yaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 10, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, 1000, -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb1.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 2, 1, -1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb1.toString());\n}"
    },
    "testReplace_StrMatcher_String_int_int_int_VaryMatcher": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryMatcher() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(null, \"x\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), \"x\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbcbccbx\", sb.toString());\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"x\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxcxx\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A1-A2A3-A4\");\n    sb.replace(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, \"***\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"***-******-***\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.replace(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, \"***\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryMatcher() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(null, \"x\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), \"x\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbcbccbx\", sb.toString());\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"x\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxcxx\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A1-A2A3-A4\");\n    sb.replace(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, \"***\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"***-******-***\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.replace(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, \"***\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryMatcher() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(null, \"x\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), \"x\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbcbccbx\", sb.toString());\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"x\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxcxx\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A1-A2A3-A4\");\n    sb.replace(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, \"***\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"***-******-***\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.replace(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, \"***\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.toString());\n}"
    },
    "testReplace_StrMatcher_String_int_int_int_VaryReplace": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryReplace() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"cb\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"-\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"ab-c-a\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"+++\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"ab+++c+++a\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abca\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), null, 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abca\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryReplace() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"cb\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"-\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"ab-c-a\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"+++\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"ab+++c+++a\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abca\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), null, 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abca\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryReplace() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"cb\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"-\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"ab-c-a\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"+++\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"ab+++c+++a\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abca\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), null, 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abca\", sb.toString());\n}"
    },
    "testReplace_StrMatcher_String_int_int_int_VaryStartIndex": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryStartIndex() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 1, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aax--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 2, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aax--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 3, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aax--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 4, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxa-ay-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 5, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaa-y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 6, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaay-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 7, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaay-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 8, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaay-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 9, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 10, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb1.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 11, sb1.length(), -1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb1.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb2.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", -1, sb2.length(), -1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb2.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryStartIndex() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 1, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aax--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 2, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aax--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 3, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aax--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 4, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxa-ay-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 5, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaa-y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 6, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaay-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 7, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaay-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 8, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaay-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 9, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 10, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb1.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 11, sb1.length(), -1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb1.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb2.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", -1, sb2.length(), -1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb2.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReplace_StrMatcher_String_int_int_int_VaryStartIndex() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 0, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"-x--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 1, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aax--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 2, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aax--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 3, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aax--y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 4, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxa-ay-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 5, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaa-y-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 6, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaay-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 7, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaay-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 8, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaay-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 9, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    sb.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 10, sb.length(), -1);\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb1 \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb1.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", 11, sb1.length(), -1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb1.toString());\n    final org.apache.commons.lang3.text.StrBuilder sb2 \u003d new org.apache.commons.lang3.text.StrBuilder(\"aaxaaaayaa\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb2.replace(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"aa\"), \"-\", -1, sb2.length(), -1));\n    org.junit.jupiter.api.Assertions.assertEquals(\"aaxaaaayaa\", sb2.toString());\n}"
    },
    "testReplaceAll_char_char": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReplaceAll_char_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceAll(\u0027x\u0027, \u0027y\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\u0027a\u0027, \u0027d\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccbd\", sb.toString());\n    sb.replaceAll(\u0027b\u0027, \u0027e\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"dececced\", sb.toString());\n    sb.replaceAll(\u0027c\u0027, \u0027f\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"defeffed\", sb.toString());\n    sb.replaceAll(\u0027d\u0027, \u0027d\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"defeffed\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReplaceAll_char_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceAll(\u0027x\u0027, \u0027y\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\u0027a\u0027, \u0027d\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccbd\", sb.toString());\n    sb.replaceAll(\u0027b\u0027, \u0027e\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"dececced\", sb.toString());\n    sb.replaceAll(\u0027c\u0027, \u0027f\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"defeffed\", sb.toString());\n    sb.replaceAll(\u0027d\u0027, \u0027d\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"defeffed\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReplaceAll_char_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceAll(\u0027x\u0027, \u0027y\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\u0027a\u0027, \u0027d\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccbd\", sb.toString());\n    sb.replaceAll(\u0027b\u0027, \u0027e\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"dececced\", sb.toString());\n    sb.replaceAll(\u0027c\u0027, \u0027f\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"defeffed\", sb.toString());\n    sb.replaceAll(\u0027d\u0027, \u0027d\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"defeffed\", sb.toString());\n}"
    },
    "testReplaceAll_String_String": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReplaceAll_String_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceAll(((java.lang.String) (null)), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(((java.lang.String) (null)), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\"\", null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\"\", \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\"x\", \"y\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\"a\", \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccbd\", sb.toString());\n    sb.replaceAll(\"d\", null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccb\", sb.toString());\n    sb.replaceAll(\"cb\", \"-\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"b-c-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.replaceAll(\"b\", \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"axbxcxbxa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"bb\");\n    sb.replaceAll(\"b\", \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxxbx\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReplaceAll_String_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceAll(((java.lang.String) (null)), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(((java.lang.String) (null)), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\"\", null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\"\", \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\"x\", \"y\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\"a\", \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccbd\", sb.toString());\n    sb.replaceAll(\"d\", null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccb\", sb.toString());\n    sb.replaceAll(\"cb\", \"-\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"b-c-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.replaceAll(\"b\", \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"axbxcxbxa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"bb\");\n    sb.replaceAll(\"b\", \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxxbx\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReplaceAll_String_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceAll(((java.lang.String) (null)), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(((java.lang.String) (null)), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\"\", null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\"\", \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\"x\", \"y\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(\"a\", \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccbd\", sb.toString());\n    sb.replaceAll(\"d\", null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccb\", sb.toString());\n    sb.replaceAll(\"cb\", \"-\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"b-c-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.replaceAll(\"b\", \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"axbxcxbxa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"bb\");\n    sb.replaceAll(\"b\", \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxxbx\", sb.toString());\n}"
    },
    "testReplaceAll_StrMatcher_String": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReplaceAll_StrMatcher_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceAll(((org.apache.commons.lang3.text.StrMatcher) (null)), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(((org.apache.commons.lang3.text.StrMatcher) (null)), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027x\u0027), \"y\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccbd\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027d\u0027), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccb\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"-\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"b-c-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"axbxcxbxa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"bb\");\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxxbx\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A1-A2A3-A4\");\n    sb.replaceAll(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, \"***\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"***-******-***\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Dear X, hello X.\");\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"X\"), \"012345678901234567\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"Dear 012345678901234567, hello 012345678901234567.\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReplaceAll_StrMatcher_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceAll(((org.apache.commons.lang3.text.StrMatcher) (null)), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(((org.apache.commons.lang3.text.StrMatcher) (null)), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027x\u0027), \"y\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccbd\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027d\u0027), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccb\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"-\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"b-c-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"axbxcxbxa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"bb\");\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxxbx\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A1-A2A3-A4\");\n    sb.replaceAll(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, \"***\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"***-******-***\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Dear X, hello X.\");\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"X\"), \"012345678901234567\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"Dear 012345678901234567, hello 012345678901234567.\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReplaceAll_StrMatcher_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceAll(((org.apache.commons.lang3.text.StrMatcher) (null)), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(((org.apache.commons.lang3.text.StrMatcher) (null)), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027x\u0027), \"y\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccbd\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027d\u0027), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccb\", sb.toString());\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"-\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"b-c-\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"axbxcxbxa\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"bb\");\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxxbx\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A1-A2A3-A4\");\n    sb.replaceAll(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, \"***\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"***-******-***\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"Dear X, hello X.\");\n    sb.replaceAll(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"X\"), \"012345678901234567\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"Dear 012345678901234567, hello 012345678901234567.\", sb.toString());\n}"
    },
    "testReplaceFirst_char_char": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReplaceFirst_char_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceFirst(\u0027x\u0027, \u0027y\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\u0027a\u0027, \u0027d\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccba\", sb.toString());\n    sb.replaceFirst(\u0027b\u0027, \u0027e\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"decbccba\", sb.toString());\n    sb.replaceFirst(\u0027c\u0027, \u0027f\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"defbccba\", sb.toString());\n    sb.replaceFirst(\u0027d\u0027, \u0027d\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"defbccba\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReplaceFirst_char_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceFirst(\u0027x\u0027, \u0027y\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\u0027a\u0027, \u0027d\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccba\", sb.toString());\n    sb.replaceFirst(\u0027b\u0027, \u0027e\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"decbccba\", sb.toString());\n    sb.replaceFirst(\u0027c\u0027, \u0027f\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"defbccba\", sb.toString());\n    sb.replaceFirst(\u0027d\u0027, \u0027d\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"defbccba\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReplaceFirst_char_char() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceFirst(\u0027x\u0027, \u0027y\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\u0027a\u0027, \u0027d\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccba\", sb.toString());\n    sb.replaceFirst(\u0027b\u0027, \u0027e\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"decbccba\", sb.toString());\n    sb.replaceFirst(\u0027c\u0027, \u0027f\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"defbccba\", sb.toString());\n    sb.replaceFirst(\u0027d\u0027, \u0027d\u0027);\n    org.junit.jupiter.api.Assertions.assertEquals(\"defbccba\", sb.toString());\n}"
    },
    "testReplaceFirst_String_String": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReplaceFirst_String_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceFirst(((java.lang.String) (null)), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(((java.lang.String) (null)), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\"\", null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\"\", \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\"x\", \"y\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\"a\", \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccba\", sb.toString());\n    sb.replaceFirst(\"d\", null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccba\", sb.toString());\n    sb.replaceFirst(\"cb\", \"-\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"b-ccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.replaceFirst(\"b\", \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"axbxcba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"bb\");\n    sb.replaceFirst(\"b\", \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxb\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReplaceFirst_String_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceFirst(((java.lang.String) (null)), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(((java.lang.String) (null)), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\"\", null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\"\", \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\"x\", \"y\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\"a\", \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccba\", sb.toString());\n    sb.replaceFirst(\"d\", null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccba\", sb.toString());\n    sb.replaceFirst(\"cb\", \"-\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"b-ccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.replaceFirst(\"b\", \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"axbxcba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"bb\");\n    sb.replaceFirst(\"b\", \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxb\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReplaceFirst_String_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceFirst(((java.lang.String) (null)), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(((java.lang.String) (null)), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\"\", null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\"\", \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\"x\", \"y\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(\"a\", \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccba\", sb.toString());\n    sb.replaceFirst(\"d\", null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccba\", sb.toString());\n    sb.replaceFirst(\"cb\", \"-\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"b-ccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.replaceFirst(\"b\", \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"axbxcba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"bb\");\n    sb.replaceFirst(\"b\", \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxb\", sb.toString());\n}"
    },
    "testReplaceFirst_StrMatcher_String": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReplaceFirst_StrMatcher_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceFirst(((org.apache.commons.lang3.text.StrMatcher) (null)), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(((org.apache.commons.lang3.text.StrMatcher) (null)), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027x\u0027), \"y\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027d\u0027), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"-\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"b-ccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"axbxcba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"bb\");\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxb\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A1-A2A3-A4\");\n    sb.replaceFirst(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, \"***\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"***-A2A3-A4\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReplaceFirst_StrMatcher_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceFirst(((org.apache.commons.lang3.text.StrMatcher) (null)), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(((org.apache.commons.lang3.text.StrMatcher) (null)), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027x\u0027), \"y\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027d\u0027), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"-\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"b-ccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"axbxcba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"bb\");\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxb\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A1-A2A3-A4\");\n    sb.replaceFirst(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, \"***\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"***-A2A3-A4\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReplaceFirst_StrMatcher_String() {\n    org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcbccba\");\n    sb.replaceFirst(((org.apache.commons.lang3.text.StrMatcher) (null)), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(((org.apache.commons.lang3.text.StrMatcher) (null)), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.noneMatcher(), \"anything\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027x\u0027), \"y\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027a\u0027), \"d\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"dbcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027d\u0027), null);\n    org.junit.jupiter.api.Assertions.assertEquals(\"bcbccba\", sb.toString());\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"cb\"), \"-\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"b-ccba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abcba\");\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"axbxcba\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"bb\");\n    sb.replaceFirst(org.apache.commons.lang3.text.StrMatcher.charMatcher(\u0027b\u0027), \"xbx\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"xbxb\", sb.toString());\n    sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"A1-A2A3-A4\");\n    sb.replaceFirst(org.apache.commons.lang3.text.StrBuilderTest.A_NUMBER_MATCHER, \"***\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"***-A2A3-A4\", sb.toString());\n}"
    },
    "testReverse": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testReverse() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.reverse().toString());\n    sb.clear().append(true);\n    org.junit.jupiter.api.Assertions.assertEquals(\"eurt\", sb.reverse().toString());\n    org.junit.jupiter.api.Assertions.assertEquals(\"true\", sb.reverse().toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testReverse() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.reverse().toString());\n    sb.clear().append(true);\n    org.junit.jupiter.api.Assertions.assertEquals(\"eurt\", sb.reverse().toString());\n    org.junit.jupiter.api.Assertions.assertEquals(\"true\", sb.reverse().toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testReverse() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.reverse().toString());\n    sb.clear().append(true);\n    org.junit.jupiter.api.Assertions.assertEquals(\"eurt\", sb.reverse().toString());\n    org.junit.jupiter.api.Assertions.assertEquals(\"true\", sb.reverse().toString());\n}"
    },
    "testRightString": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testRightString() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"left right\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"right\", sb.rightString(5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.rightString(0));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.rightString(-5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"left right\", sb.rightString(15));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testRightString() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"left right\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"right\", sb.rightString(5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.rightString(0));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.rightString(-5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"left right\", sb.rightString(15));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testRightString() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"left right\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"right\", sb.rightString(5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.rightString(0));\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.rightString(-5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"left right\", sb.rightString(15));\n}"
    },
    "testSetCharAt": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testSetCharAt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setCharAt(0, \u0027f\u0027), \"setCharAt(0, ) expected IndexOutOfBoundsException\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setCharAt(-1, \u0027f\u0027), \"setCharAt(-1, ) expected IndexOutOfBoundsException\");\n    sb.append(\"foo\");\n    sb.setCharAt(0, \u0027b\u0027);\n    sb.setCharAt(1, \u0027a\u0027);\n    sb.setCharAt(2, \u0027r\u0027);\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setCharAt(3, \u0027!\u0027), \"setCharAt(3, ) expected IndexOutOfBoundsException\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bar\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testSetCharAt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setCharAt(0, \u0027f\u0027), \"setCharAt(0, ) expected IndexOutOfBoundsException\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setCharAt(-1, \u0027f\u0027), \"setCharAt(-1, ) expected IndexOutOfBoundsException\");\n    sb.append(\"foo\");\n    sb.setCharAt(0, \u0027b\u0027);\n    sb.setCharAt(1, \u0027a\u0027);\n    sb.setCharAt(2, \u0027r\u0027);\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setCharAt(3, \u0027!\u0027), \"setCharAt(3, ) expected IndexOutOfBoundsException\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bar\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testSetCharAt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setCharAt(0, \u0027f\u0027), \"setCharAt(0, ) expected IndexOutOfBoundsException\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setCharAt(-1, \u0027f\u0027), \"setCharAt(-1, ) expected IndexOutOfBoundsException\");\n    sb.append(\"foo\");\n    sb.setCharAt(0, \u0027b\u0027);\n    sb.setCharAt(1, \u0027a\u0027);\n    sb.setCharAt(2, \u0027r\u0027);\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setCharAt(3, \u0027!\u0027), \"setCharAt(3, ) expected IndexOutOfBoundsException\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"bar\", sb.toString());\n}"
    },
    "testSetLength": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testSetLength() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.append(\"Hello\");\n    sb.setLength(2);// shorten\n\n    org.junit.jupiter.api.Assertions.assertEquals(\"He\", sb.toString());\n    sb.setLength(2);// no change\n\n    org.junit.jupiter.api.Assertions.assertEquals(\"He\", sb.toString());\n    sb.setLength(3);// lengthen\n\n    org.junit.jupiter.api.Assertions.assertEquals(\"He\\u0000\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setLength(-1), \"setLength(-1) expected StringIndexOutOfBoundsException\");\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testSetLength() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.append(\"Hello\");\n    sb.setLength(2);// shorten\n\n    org.junit.jupiter.api.Assertions.assertEquals(\"He\", sb.toString());\n    sb.setLength(2);// no change\n\n    org.junit.jupiter.api.Assertions.assertEquals(\"He\", sb.toString());\n    sb.setLength(3);// lengthen\n\n    org.junit.jupiter.api.Assertions.assertEquals(\"He\\u0000\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setLength(-1), \"setLength(-1) expected StringIndexOutOfBoundsException\");\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testSetLength() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    sb.append(\"Hello\");\n    sb.setLength(2);// shorten\n\n    org.junit.jupiter.api.Assertions.assertEquals(\"He\", sb.toString());\n    sb.setLength(2);// no change\n\n    org.junit.jupiter.api.Assertions.assertEquals(\"He\", sb.toString());\n    sb.setLength(3);// lengthen\n\n    org.junit.jupiter.api.Assertions.assertEquals(\"He\\u0000\", sb.toString());\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.setLength(-1), \"setLength(-1) expected StringIndexOutOfBoundsException\");\n}"
    },
    "testSize": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testSize() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    sb.append(\"Hello\");\n    org.junit.jupiter.api.Assertions.assertEquals(5, sb.size());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testSize() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    sb.append(\"Hello\");\n    org.junit.jupiter.api.Assertions.assertEquals(5, sb.size());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testSize() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(0, sb.size());\n    sb.append(\"Hello\");\n    org.junit.jupiter.api.Assertions.assertEquals(5, sb.size());\n}"
    },
    "testStartsWith": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testStartsWith() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertFalse(sb.startsWith(\"a\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.startsWith(null));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.startsWith(\"\"));\n    sb.append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.startsWith(\"a\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.startsWith(\"ab\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.startsWith(\"abc\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.startsWith(\"cba\"));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testStartsWith() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertFalse(sb.startsWith(\"a\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.startsWith(null));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.startsWith(\"\"));\n    sb.append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.startsWith(\"a\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.startsWith(\"ab\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.startsWith(\"abc\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.startsWith(\"cba\"));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testStartsWith() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertFalse(sb.startsWith(\"a\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.startsWith(null));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.startsWith(\"\"));\n    sb.append(\"abc\");\n    org.junit.jupiter.api.Assertions.assertTrue(sb.startsWith(\"a\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.startsWith(\"ab\"));\n    org.junit.jupiter.api.Assertions.assertTrue(sb.startsWith(\"abc\"));\n    org.junit.jupiter.api.Assertions.assertFalse(sb.startsWith(\"cba\"));\n}"
    },
    "testSubSequenceIntInt": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testSubSequenceIntInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"hello goodbye\");\n    // Start index is negative\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.subSequence(-1, 5));\n    // End index is negative\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.subSequence(2, -1));\n    // End index greater than length()\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.subSequence(2, sb.length() + 1));\n    // Start index greater then end index\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.subSequence(3, 2));\n    // Normal cases\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.subSequence(0, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".subSequence(0, 6), sb.subSequence(0, 6));\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.subSequence(6, 13));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".subSequence(6, 13), sb.subSequence(6, 13));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testSubSequenceIntInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"hello goodbye\");\n    // Start index is negative\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.subSequence(-1, 5));\n    // End index is negative\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.subSequence(2, -1));\n    // End index greater than length()\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.subSequence(2, sb.length() + 1));\n    // Start index greater then end index\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.subSequence(3, 2));\n    // Normal cases\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.subSequence(0, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".subSequence(0, 6), sb.subSequence(0, 6));\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.subSequence(6, 13));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".subSequence(6, 13), sb.subSequence(6, 13));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testSubSequenceIntInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"hello goodbye\");\n    // Start index is negative\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.subSequence(-1, 5));\n    // End index is negative\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.subSequence(2, -1));\n    // End index greater than length()\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.subSequence(2, sb.length() + 1));\n    // Start index greater then end index\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.subSequence(3, 2));\n    // Normal cases\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.subSequence(0, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".subSequence(0, 6), sb.subSequence(0, 6));\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.subSequence(6, 13));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".subSequence(6, 13), sb.subSequence(6, 13));\n}"
    },
    "testSubstringInt": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testSubstringInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"hello goodbye\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.substring(6));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".substring(6), sb.substring(6));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\", sb.substring(0));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".substring(0), sb.substring(0));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.substring(-1));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.substring(15));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testSubstringInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"hello goodbye\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.substring(6));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".substring(6), sb.substring(6));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\", sb.substring(0));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".substring(0), sb.substring(0));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.substring(-1));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.substring(15));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testSubstringInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"hello goodbye\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.substring(6));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".substring(6), sb.substring(6));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\", sb.substring(0));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".substring(0), sb.substring(0));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.substring(-1));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.substring(15));\n}"
    },
    "testSubstringIntInt": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testSubstringIntInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"hello goodbye\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.substring(0, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".substring(0, 6), sb.substring(0, 6));\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.substring(6, 13));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".substring(6, 13), sb.substring(6, 13));\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.substring(6, 20));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.substring(-1, 5));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.substring(15, 20));\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testSubstringIntInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"hello goodbye\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.substring(0, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".substring(0, 6), sb.substring(0, 6));\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.substring(6, 13));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".substring(6, 13), sb.substring(6, 13));\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.substring(6, 20));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.substring(-1, 5));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.substring(15, 20));\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testSubstringIntInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"hello goodbye\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello\", sb.substring(0, 5));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".substring(0, 6), sb.substring(0, 6));\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.substring(6, 13));\n    org.junit.jupiter.api.Assertions.assertEquals(\"hello goodbye\".substring(6, 13), sb.substring(6, 13));\n    org.junit.jupiter.api.Assertions.assertEquals(\"goodbye\", sb.substring(6, 20));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.substring(-1, 5));\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.substring(15, 20));\n}"
    },
    "testToCharArray": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testToCharArray() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY, sb.toCharArray());\n    char[] a \u003d sb.toCharArray();\n    org.junit.jupiter.api.Assertions.assertNotNull(a, \"toCharArray() result is null\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, a.length, \"toCharArray() result is too large\");\n    sb.append(\"junit\");\n    a \u003d sb.toCharArray();\n    org.junit.jupiter.api.Assertions.assertEquals(5, a.length, \"toCharArray() result incorrect length\");\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"junit\".toCharArray(), a, \"toCharArray() result does not match\");\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testToCharArray() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY, sb.toCharArray());\n    char[] a \u003d sb.toCharArray();\n    org.junit.jupiter.api.Assertions.assertNotNull(a, \"toCharArray() result is null\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, a.length, \"toCharArray() result is too large\");\n    sb.append(\"junit\");\n    a \u003d sb.toCharArray();\n    org.junit.jupiter.api.Assertions.assertEquals(5, a.length, \"toCharArray() result incorrect length\");\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"junit\".toCharArray(), a, \"toCharArray() result does not match\");\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testToCharArray() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY, sb.toCharArray());\n    char[] a \u003d sb.toCharArray();\n    org.junit.jupiter.api.Assertions.assertNotNull(a, \"toCharArray() result is null\");\n    org.junit.jupiter.api.Assertions.assertEquals(0, a.length, \"toCharArray() result is too large\");\n    sb.append(\"junit\");\n    a \u003d sb.toCharArray();\n    org.junit.jupiter.api.Assertions.assertEquals(5, a.length, \"toCharArray() result incorrect length\");\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"junit\".toCharArray(), a, \"toCharArray() result does not match\");\n}"
    },
    "testToCharArrayIntInt": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testToCharArrayIntInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY, sb.toCharArray(0, 0));\n    sb.append(\"junit\");\n    char[] a \u003d sb.toCharArray(0, 20);// too large test\n\n    org.junit.jupiter.api.Assertions.assertEquals(5, a.length, \"toCharArray(int, int) result incorrect length\");\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"junit\".toCharArray(), a, \"toCharArray(int, int) result does not match\");\n    a \u003d sb.toCharArray(0, 4);\n    org.junit.jupiter.api.Assertions.assertEquals(4, a.length, \"toCharArray(int, int) result incorrect length\");\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int, int) result does not match\");\n    a \u003d sb.toCharArray(0, 4);\n    org.junit.jupiter.api.Assertions.assertEquals(4, a.length, \"toCharArray(int, int) result incorrect length\");\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int, int) result does not match\");\n    a \u003d sb.toCharArray(0, 1);\n    org.junit.jupiter.api.Assertions.assertNotNull(a, \"toCharArray(int, int) result is null\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.toCharArray(-1, 5), \"no string index out of bound on -1\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.toCharArray(6, 5), \"no string index out of bound on -1\");\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testToCharArrayIntInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY, sb.toCharArray(0, 0));\n    sb.append(\"junit\");\n    char[] a \u003d sb.toCharArray(0, 20);// too large test\n\n    org.junit.jupiter.api.Assertions.assertEquals(5, a.length, \"toCharArray(int, int) result incorrect length\");\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"junit\".toCharArray(), a, \"toCharArray(int, int) result does not match\");\n    a \u003d sb.toCharArray(0, 4);\n    org.junit.jupiter.api.Assertions.assertEquals(4, a.length, \"toCharArray(int, int) result incorrect length\");\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int, int) result does not match\");\n    a \u003d sb.toCharArray(0, 4);\n    org.junit.jupiter.api.Assertions.assertEquals(4, a.length, \"toCharArray(int, int) result incorrect length\");\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int, int) result does not match\");\n    a \u003d sb.toCharArray(0, 1);\n    org.junit.jupiter.api.Assertions.assertNotNull(a, \"toCharArray(int, int) result is null\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.toCharArray(-1, 5), \"no string index out of bound on -1\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.toCharArray(6, 5), \"no string index out of bound on -1\");\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testToCharArrayIntInt() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY, sb.toCharArray(0, 0));\n    sb.append(\"junit\");\n    char[] a \u003d sb.toCharArray(0, 20);// too large test\n\n    org.junit.jupiter.api.Assertions.assertEquals(5, a.length, \"toCharArray(int, int) result incorrect length\");\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"junit\".toCharArray(), a, \"toCharArray(int, int) result does not match\");\n    a \u003d sb.toCharArray(0, 4);\n    org.junit.jupiter.api.Assertions.assertEquals(4, a.length, \"toCharArray(int, int) result incorrect length\");\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int, int) result does not match\");\n    a \u003d sb.toCharArray(0, 4);\n    org.junit.jupiter.api.Assertions.assertEquals(4, a.length, \"toCharArray(int, int) result incorrect length\");\n    org.junit.jupiter.api.Assertions.assertArrayEquals(\"juni\".toCharArray(), a, \"toCharArray(int, int) result does not match\");\n    a \u003d sb.toCharArray(0, 1);\n    org.junit.jupiter.api.Assertions.assertNotNull(a, \"toCharArray(int, int) result is null\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.toCharArray(-1, 5), \"no string index out of bound on -1\");\n    org.junit.jupiter.api.Assertions.assertThrows(java.lang.IndexOutOfBoundsException.class, () -\u003e sb.toCharArray(6, 5), \"no string index out of bound on -1\");\n}"
    },
    "testToString": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testToString() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abc\", sb.toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testToString() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abc\", sb.toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testToString() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder(\"abc\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"abc\", sb.toString());\n}"
    },
    "testToStringBuffer": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testToStringBuffer() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(new java.lang.StringBuffer().toString(), sb.toStringBuffer().toString());\n    sb.append(\"junit\");\n    org.junit.jupiter.api.Assertions.assertEquals(new java.lang.StringBuffer(\"junit\").toString(), sb.toStringBuffer().toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testToStringBuffer() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(new java.lang.StringBuffer().toString(), sb.toStringBuffer().toString());\n    sb.append(\"junit\");\n    org.junit.jupiter.api.Assertions.assertEquals(new java.lang.StringBuffer(\"junit\").toString(), sb.toStringBuffer().toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testToStringBuffer() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(new java.lang.StringBuffer().toString(), sb.toStringBuffer().toString());\n    sb.append(\"junit\");\n    org.junit.jupiter.api.Assertions.assertEquals(new java.lang.StringBuffer(\"junit\").toString(), sb.toStringBuffer().toString());\n}"
    },
    "testToStringBuilder": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testToStringBuilder() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(new java.lang.StringBuilder().toString(), sb.toStringBuilder().toString());\n    sb.append(\"junit\");\n    org.junit.jupiter.api.Assertions.assertEquals(new java.lang.StringBuilder(\"junit\").toString(), sb.toStringBuilder().toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testToStringBuilder() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(new java.lang.StringBuilder().toString(), sb.toStringBuilder().toString());\n    sb.append(\"junit\");\n    org.junit.jupiter.api.Assertions.assertEquals(new java.lang.StringBuilder(\"junit\").toString(), sb.toStringBuilder().toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testToStringBuilder() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(new java.lang.StringBuilder().toString(), sb.toStringBuilder().toString());\n    sb.append(\"junit\");\n    org.junit.jupiter.api.Assertions.assertEquals(new java.lang.StringBuilder(\"junit\").toString(), sb.toStringBuilder().toString());\n}"
    },
    "testTrim": {
      "837e1bc1": "@org.junit.jupiter.api.Test\npublic void testTrim() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.reverse().toString());\n    sb.clear().append(\" \\u0000 \");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.trim().toString());\n    sb.clear().append(\" \\u0000 a b c\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c\", sb.trim().toString());\n    sb.clear().append(\"a b c \\u0000 \");\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c\", sb.trim().toString());\n    sb.clear().append(\" \\u0000 a b c \\u0000 \");\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c\", sb.trim().toString());\n    sb.clear().append(\"a b c\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c\", sb.trim().toString());\n}",
      "4b43be14": "@org.junit.jupiter.api.Test\npublic void testTrim() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.reverse().toString());\n    sb.clear().append(\" \\u0000 \");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.trim().toString());\n    sb.clear().append(\" \\u0000 a b c\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c\", sb.trim().toString());\n    sb.clear().append(\"a b c \\u0000 \");\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c\", sb.trim().toString());\n    sb.clear().append(\" \\u0000 a b c \\u0000 \");\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c\", sb.trim().toString());\n    sb.clear().append(\"a b c\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c\", sb.trim().toString());\n}",
      "5a9d81b0": "@org.junit.jupiter.api.Test\npublic void testTrim() {\n    final org.apache.commons.lang3.text.StrBuilder sb \u003d new org.apache.commons.lang3.text.StrBuilder();\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.reverse().toString());\n    sb.clear().append(\" \\u0000 \");\n    org.junit.jupiter.api.Assertions.assertEquals(\"\", sb.trim().toString());\n    sb.clear().append(\" \\u0000 a b c\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c\", sb.trim().toString());\n    sb.clear().append(\"a b c \\u0000 \");\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c\", sb.trim().toString());\n    sb.clear().append(\" \\u0000 a b c \\u0000 \");\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c\", sb.trim().toString());\n    sb.clear().append(\"a b c\");\n    org.junit.jupiter.api.Assertions.assertEquals(\"a b c\", sb.trim().toString());\n}"
    }
  }
}