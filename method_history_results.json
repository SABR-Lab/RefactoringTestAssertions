[
  {
    "methodSignature": "org.apache.ambari.TestJobHistoryParsing#test1()",
    "versions": [
      {
        "commitId": "current",
        "changeType": "ADDED",
        "body": "public void test1() {\n    java.util.Map\u003cjava.lang.String, java.lang.String[]\u003e adj \u003d new java.util.HashMap\u003cjava.lang.String, java.lang.String[]\u003e();\n    adj.put(\"10\", new java.lang.String[]{ \"20\", \"30\" });\n    adj.put(\"20\", new java.lang.String[]{ \"30\" });\n    adj.put(\"30\", new java.lang.String[]{  });\n    test(\"id_0-1\", \"something.name\", \"10\", adj);\n}",
        "assertionType": "No Assertions",
        "assertionLines": []
      }
    ],
    "refactorings": "# Refactorings in commit 36d646ee25536c2584f7e5e94fdaf8637b7066d3\n\n- Extract Method\tprivate addServiceCheckAction(actionRequest ActionRequest, stage Stage) : void extracted from public createActions(request Set\u003cActionRequest\u003e) : RequestStatusResponse in class org.apache.ambari.server.controller.AmbariManagementControllerImpl\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 2000) to @javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getDisksInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getOsInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getHostAttributes() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Move Method\tpublic getStartTime() : long from class org.apache.ambari.server.state.job.NewJobEvent to public getStartTime() : long from class org.apache.ambari.eventdb.model.Workflows.WorkflowDBEntry\n\n"
  },
  {
    "methodSignature": "org.apache.ambari.TestJobHistoryParsing#test2()",
    "versions": [
      {
        "commitId": "current",
        "changeType": "ADDED",
        "body": "public void test2() {\n    java.util.Map\u003cjava.lang.String, java.lang.String[]\u003e adj \u003d new java.util.HashMap\u003cjava.lang.String, java.lang.String[]\u003e();\n    adj.put(\"1\u003d0\", new java.lang.String[]{ \"2 0\", \"3\\\"0.\" });\n    adj.put(\"2 0\", new java.lang.String[]{ \"3\\\"0.\" });\n    adj.put(\"3\\\"0.\", new java.lang.String[]{  });\n    test(\"id_\u003d 0-1\", \"something.name\", \"1\u003d0\", adj);\n}",
        "assertionType": "No Assertions",
        "assertionLines": []
      }
    ],
    "refactorings": "# Refactorings in commit 36d646ee25536c2584f7e5e94fdaf8637b7066d3\n\n- Extract Method\tprivate addServiceCheckAction(actionRequest ActionRequest, stage Stage) : void extracted from public createActions(request Set\u003cActionRequest\u003e) : RequestStatusResponse in class org.apache.ambari.server.controller.AmbariManagementControllerImpl\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 2000) to @javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getDisksInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getOsInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getHostAttributes() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Move Method\tpublic getStartTime() : long from class org.apache.ambari.server.state.job.NewJobEvent to public getStartTime() : long from class org.apache.ambari.eventdb.model.Workflows.WorkflowDBEntry\n\n"
  },
  {
    "methodSignature": "org.apache.ambari.TestJobHistoryParsing#test3()",
    "versions": [
      {
        "commitId": "current",
        "changeType": "ADDED",
        "body": "public void test3() {\n    java.lang.String s \u003d \"`~!@#$%^\u0026*()-_\u003d+[]{}|,.\u003c\u003e/?;:\u0027\\\"\";\n    test(s, s, s, new java.util.HashMap\u003cjava.lang.String, java.lang.String[]\u003e());\n}",
        "assertionType": "No Assertions",
        "assertionLines": []
      },
      {
        "commitId": "36d646ee25536c2584f7e5e94fdaf8637b7066d3",
        "changeType": "REMOVED"
      }
    ],
    "refactorings": "# Refactorings in commit ff096b56b547df4a43f57045d1e501ba4976adb3\n\n- Add Parameter\thostsMap : HostsMap in method public ActionManager(schedulerSleepTime long, actionTimeout long, aq ActionQueue, fsm Clusters, db ActionDBAccessor, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionManager\n\n- Add Parameter\thostsMap : HostsMap in method public ActionScheduler(sleepTimeMilliSec long, actionTimeoutMilliSec long, db ActionDBAccessor, actionQueue ActionQueue, fsmObject Clusters, maxAttempts int, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionScheduler\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Add Method Annotation\t@Override in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.jdbc.JDBCProviderModule\n\n- Extract Variable\tmappedHost : String in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Add Parameter\thostsMap : HostsMap in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Extract Method\tprivate getSanitizedWorkflow(workflowContext WorkflowContext, existingWorkflowContext WorkflowContext) : WorkflowContext extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Method\tprivate getWorkflowString(sanitizedWC WorkflowContext) : String extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Variable\tresultingWorkflowId : String in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Extract Variable\tresultingAdjacencies : Map\u003cString,String[]\u003e in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Pull Up Method\tpublic getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n... and 22 more refactorings in this commit\n"
  },
  {
    "methodSignature": "org.apache.ambari.TestJobHistoryParsing#log(java.lang.String,java.lang.String[],java.lang.String[])",
    "versions": [
      {
        "commitId": "current",
        "changeType": "ADDED",
        "body": "private static java.lang.String log(java.lang.String recordType, java.lang.String[] keys, java.lang.String[] values) {\n    int length \u003d (recordType.length() + (keys.length * 4)) + 2;\n    for (int i \u003d 0; i \u003c keys.length; i++) {\n        values[i] \u003d org.apache.hadoop.util.StringUtils.escapeString(values[i], org.apache.hadoop.util.StringUtils.ESCAPE_CHAR, org.apache.ambari.TestJobHistoryParsing.charsToEscape);\n        length +\u003d values[i].length() + keys[i].toString().length();\n    }\n    // We have the length of the buffer, now construct it.\n    java.lang.StringBuilder builder \u003d new java.lang.StringBuilder(length);\n    builder.append(recordType);\n    builder.append(org.apache.ambari.TestJobHistoryParsing.DELIMITER);\n    for (int i \u003d 0; i \u003c keys.length; i++) {\n        builder.append(keys[i]);\n        builder.append(\"\u003d\\\"\");\n        builder.append(values[i]);\n        builder.append(\"\\\"\");\n        builder.append(org.apache.ambari.TestJobHistoryParsing.DELIMITER);\n    }\n    builder.append(org.apache.ambari.TestJobHistoryParsing.LINE_DELIMITER_CHAR);\n    return builder.toString();\n}",
        "assertionType": "No Assertions",
        "assertionLines": []
      }
    ],
    "refactorings": "# Refactorings in commit 36d646ee25536c2584f7e5e94fdaf8637b7066d3\n\n- Extract Method\tprivate addServiceCheckAction(actionRequest ActionRequest, stage Stage) : void extracted from public createActions(request Set\u003cActionRequest\u003e) : RequestStatusResponse in class org.apache.ambari.server.controller.AmbariManagementControllerImpl\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 2000) to @javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getDisksInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getOsInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getHostAttributes() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Move Method\tpublic getStartTime() : long from class org.apache.ambari.server.state.job.NewJobEvent to public getStartTime() : long from class org.apache.ambari.eventdb.model.Workflows.WorkflowDBEntry\n\n"
  },
  {
    "methodSignature": "org.apache.ambari.TestJobHistoryParsing#test4()",
    "versions": [
      {
        "commitId": "current",
        "changeType": "ADDED",
        "body": "public void test4() {\n    java.util.Map\u003cjava.lang.String, java.lang.String[]\u003e adj \u003d new java.util.HashMap\u003cjava.lang.String, java.lang.String[]\u003e();\n    adj.put(\"X\", new java.lang.String[]{  });\n    test(\"\", \"jobName\", \"X\", adj);\n}",
        "assertionType": "No Assertions",
        "assertionLines": []
      },
      {
        "commitId": "36d646ee25536c2584f7e5e94fdaf8637b7066d3",
        "changeType": "REMOVED"
      }
    ],
    "refactorings": "# Refactorings in commit ff096b56b547df4a43f57045d1e501ba4976adb3\n\n- Add Parameter\thostsMap : HostsMap in method public ActionManager(schedulerSleepTime long, actionTimeout long, aq ActionQueue, fsm Clusters, db ActionDBAccessor, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionManager\n\n- Add Parameter\thostsMap : HostsMap in method public ActionScheduler(sleepTimeMilliSec long, actionTimeoutMilliSec long, db ActionDBAccessor, actionQueue ActionQueue, fsmObject Clusters, maxAttempts int, hostsMap HostsMap) from class org.apache.ambari.server.actionmanager.ActionScheduler\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Add Method Annotation\t@Override in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule\n\n- Change Return Type\tvoid to ResourceProvider in method protected createResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.jdbc.JDBCProviderModule\n\n- Extract Variable\tmappedHost : String in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Add Parameter\thostsMap : HostsMap in method public getClusterHostInfo(cluster Cluster, hostsMap HostsMap) : Map\u003cString,List\u003cString\u003e\u003e from class org.apache.ambari.server.utils.StageUtils\n\n- Extract Method\tprivate getSanitizedWorkflow(workflowContext WorkflowContext, existingWorkflowContext WorkflowContext) : WorkflowContext extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Method\tprivate getWorkflowString(sanitizedWC WorkflowContext) : String extracted from private processJobSubmittedEvent(jobPS PreparedStatement, workflowSelectPS PreparedStatement, workflowPS PreparedStatement, workflowUpdateTimePS PreparedStatement, logEvent LoggingEvent, historyEvent JobSubmittedEvent) : void in class org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater\n\n- Extract Variable\tresultingWorkflowId : String in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Extract Variable\tresultingAdjacencies : Map\u003cString,String[]\u003e in method public test(workflowId String, workflowName String, workflowNodeName String, adjacencies Map\u003cString,String[]\u003e) : void from class org.apache.ambari.TestJobHistoryParsing\n\n- Pull Up Method\tpublic getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getResourceProvider(type Resource.Type) : ResourceProvider from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getPropertyProviders(type Resource.Type) : List\u003cPropertyProvider\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public update(event ResourceProviderEvent) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostName(clusterName String, componentName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getHostMapping(clusterName String) : Map\u003cString,String\u003e from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tpublic getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.DefaultProviderModule to public getGangliaCollectorHostName(clusterName String) : String from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putResourceProvider(type Resource.Type, resourceProvider ResourceProvider) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected putPropertyProviders(type Resource.Type, providers List\u003cPropertyProvider\u003e) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n- Pull Up Method\tprotected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.DefaultProviderModule to protected createPropertyProviders(type Resource.Type) : void from class org.apache.ambari.server.controller.internal.AbstractProviderModule\n\n... and 22 more refactorings in this commit\n"
  },
  {
    "methodSignature": "org.apache.ambari.TestJobHistoryParsing#test(java.lang.String,java.lang.String,java.lang.String,java.util.Map)",
    "versions": [
      {
        "commitId": "current",
        "changeType": "ADDED",
        "body": "public void test(java.lang.String workflowId, java.lang.String workflowName, java.lang.String workflowNodeName, java.util.Map\u003cjava.lang.String, java.lang.String[]\u003e adjacencies) {\n    org.apache.hadoop.conf.Configuration conf \u003d new org.apache.hadoop.conf.Configuration();\n    org.apache.ambari.TestJobHistoryParsing.setProperties(conf, workflowId, workflowName, workflowNodeName, adjacencies);\n    java.lang.String log \u003d org.apache.ambari.TestJobHistoryParsing.log(\"JOB\", new java.lang.String[]{ org.apache.ambari.TestJobHistoryParsing.ID, org.apache.ambari.TestJobHistoryParsing.NAME, org.apache.ambari.TestJobHistoryParsing.NODE, org.apache.ambari.TestJobHistoryParsing.ADJ }, new java.lang.String[]{ conf.get(org.apache.ambari.TestJobHistoryParsing.ID_PROP), conf.get(org.apache.ambari.TestJobHistoryParsing.NAME_PROP), conf.get(org.apache.ambari.TestJobHistoryParsing.NODE_PROP), org.apache.hadoop.mapred.JobHistory.JobInfo.getWorkflowAdjacencies(conf) });\n    org.apache.ambari.TestJobHistoryParsing.ParsedLine line \u003d new org.apache.ambari.TestJobHistoryParsing.ParsedLine(log);\n    org.apache.hadoop.mapreduce.JobID jobid \u003d new org.apache.hadoop.mapreduce.JobID(\"id\", 1);\n    org.apache.hadoop.tools.rumen.JobSubmittedEvent event \u003d new org.apache.hadoop.tools.rumen.JobSubmittedEvent(jobid, workflowName, \"\", 0L, \"\", null, \"\", line.get(org.apache.ambari.TestJobHistoryParsing.ID), line.get(org.apache.ambari.TestJobHistoryParsing.NAME), line.get(org.apache.ambari.TestJobHistoryParsing.NODE), line.get(org.apache.ambari.TestJobHistoryParsing.ADJ));\n    org.apache.ambari.eventdb.model.WorkflowContext context \u003d org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.buildWorkflowContext(event);\n    java.lang.String resultingWorkflowId \u003d workflowId;\n    if (workflowId.isEmpty()) {\n        resultingWorkflowId \u003d jobid.toString().replace(\"job_\", \"mr_\");\n    }\n    junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowId\", resultingWorkflowId, context.getWorkflowId());\n    junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowName\", workflowName, context.getWorkflowName());\n    junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowNodeName\", workflowNodeName, context.getWorkflowEntityName());\n    java.util.Map\u003cjava.lang.String, java.lang.String[]\u003e resultingAdjacencies \u003d adjacencies;\n    if (resultingAdjacencies.size() \u003d\u003d 0) {\n        resultingAdjacencies \u003d new java.util.HashMap\u003cjava.lang.String, java.lang.String[]\u003e();\n        resultingAdjacencies.put(workflowNodeName, new java.lang.String[]{  });\n    }\n    junit.framework.Assert.assertEquals(\"Got incorrect number of adjacencies\", resultingAdjacencies.size(), context.getWorkflowDag().getEntries().size());\n    for (org.apache.ambari.eventdb.model.WorkflowDag.WorkflowDagEntry entry : context.getWorkflowDag().getEntries()) {\n        java.lang.String[] sTargets \u003d resultingAdjacencies.get(entry.getSource());\n        junit.framework.Assert.assertNotNull(\"No original targets for \" + entry.getSource(), sTargets);\n        java.util.List\u003cjava.lang.String\u003e dTargets \u003d entry.getTargets();\n        junit.framework.Assert.assertEquals(\"Got incorrect number of targets for \" + entry.getSource(), sTargets.length, dTargets.size());\n        for (int i \u003d 0; i \u003c sTargets.length; i++) {\n            junit.framework.Assert.assertEquals(\"Got incorrect target for \" + entry.getSource(), sTargets[i], dTargets.get(i));\n        }\n    }\n}",
        "assertionType": "assertEquals(, assertEquals(, assertEquals(, assertEquals(, assertNotNull(, assertEquals(, assertEquals(",
        "assertionLines": [
          13,
          14,
          15,
          21,
          24,
          26,
          28
        ]
      },
      {
        "commitId": "36d646ee25536c2584f7e5e94fdaf8637b7066d3",
        "changeType": "MODIFIED",
        "body": "public void test(java.lang.String workflowId, java.lang.String workflowName, java.lang.String workflowNodeName, java.util.Map\u003cjava.lang.String, java.lang.String[]\u003e adjacencies) {\n    org.apache.hadoop.conf.Configuration conf \u003d new org.apache.hadoop.conf.Configuration();\n    org.apache.ambari.TestJobHistoryParsing.setProperties(conf, workflowId, workflowName, workflowNodeName, adjacencies);\n    java.lang.String log \u003d org.apache.ambari.TestJobHistoryParsing.log(\"JOB\", new java.lang.String[]{ org.apache.ambari.TestJobHistoryParsing.ID, org.apache.ambari.TestJobHistoryParsing.NAME, org.apache.ambari.TestJobHistoryParsing.NODE, org.apache.ambari.TestJobHistoryParsing.ADJ }, new java.lang.String[]{ conf.get(org.apache.ambari.TestJobHistoryParsing.ID_PROP), conf.get(org.apache.ambari.TestJobHistoryParsing.NAME_PROP), conf.get(org.apache.ambari.TestJobHistoryParsing.NODE_PROP), org.apache.hadoop.mapred.JobHistory.JobInfo.getWorkflowAdjacencies(conf) });\n    org.apache.ambari.TestJobHistoryParsing.ParsedLine line \u003d new org.apache.ambari.TestJobHistoryParsing.ParsedLine(log);\n    org.apache.hadoop.tools.rumen.JobSubmittedEvent event \u003d new org.apache.hadoop.tools.rumen.JobSubmittedEvent(null, \"\", \"\", 0L, \"\", null, \"\", line.get(org.apache.ambari.TestJobHistoryParsing.ID), line.get(org.apache.ambari.TestJobHistoryParsing.NAME), line.get(org.apache.ambari.TestJobHistoryParsing.NODE), line.get(org.apache.ambari.TestJobHistoryParsing.ADJ));\n    org.apache.ambari.eventdb.model.WorkflowContext context \u003d org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.buildWorkflowContext(event);\n    junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowId\", workflowId, context.getWorkflowId());\n    junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowName\", workflowName, context.getWorkflowName());\n    junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowNodeName\", workflowNodeName, context.getWorkflowEntityName());\n    junit.framework.Assert.assertEquals(\"Got incorrect number of adjacencies\", adjacencies.size(), context.getWorkflowDag().getEntries().size());\n    for (org.apache.ambari.eventdb.model.WorkflowDag.WorkflowDagEntry entry : context.getWorkflowDag().getEntries()) {\n        java.lang.String[] sTargets \u003d adjacencies.get(entry.getSource());\n        junit.framework.Assert.assertNotNull(\"No original targets for \" + entry.getSource(), sTargets);\n        java.util.List\u003cjava.lang.String\u003e dTargets \u003d entry.getTargets();\n        junit.framework.Assert.assertEquals(\"Got incorrect number of targets for \" + entry.getSource(), sTargets.length, dTargets.size());\n        for (int i \u003d 0; i \u003c sTargets.length; i++) {\n            junit.framework.Assert.assertEquals(\"Got incorrect target for \" + entry.getSource(), sTargets[i], dTargets.get(i));\n        }\n    }\n}",
        "assertionType": "assertEquals(, assertEquals(, assertEquals(, assertEquals(, assertNotNull(, assertEquals(, assertEquals(",
        "assertionLines": [
          8,
          9,
          10,
          11,
          14,
          16,
          18
        ]
      },
      {
        "commitId": "current",
        "changeType": "ADDED",
        "body": "public void test(java.lang.String workflowId, java.lang.String workflowName, java.lang.String workflowNodeName, java.util.Map\u003cjava.lang.String, java.lang.String[]\u003e adjacencies) {\n    org.apache.hadoop.conf.Configuration conf \u003d new org.apache.hadoop.conf.Configuration();\n    org.apache.ambari.TestJobHistoryParsing.setProperties(conf, workflowId, workflowName, workflowNodeName, adjacencies);\n    java.lang.String log \u003d org.apache.ambari.TestJobHistoryParsing.log(\"JOB\", new java.lang.String[]{ org.apache.ambari.TestJobHistoryParsing.ID, org.apache.ambari.TestJobHistoryParsing.NAME, org.apache.ambari.TestJobHistoryParsing.NODE, org.apache.ambari.TestJobHistoryParsing.ADJ }, new java.lang.String[]{ conf.get(org.apache.ambari.TestJobHistoryParsing.ID_PROP), conf.get(org.apache.ambari.TestJobHistoryParsing.NAME_PROP), conf.get(org.apache.ambari.TestJobHistoryParsing.NODE_PROP), org.apache.hadoop.mapred.JobHistory.JobInfo.getWorkflowAdjacencies(conf) });\n    org.apache.ambari.TestJobHistoryParsing.ParsedLine line \u003d new org.apache.ambari.TestJobHistoryParsing.ParsedLine(log);\n    org.apache.hadoop.tools.rumen.JobSubmittedEvent event \u003d new org.apache.hadoop.tools.rumen.JobSubmittedEvent(null, \"\", \"\", 0L, \"\", null, \"\", line.get(org.apache.ambari.TestJobHistoryParsing.ID), line.get(org.apache.ambari.TestJobHistoryParsing.NAME), line.get(org.apache.ambari.TestJobHistoryParsing.NODE), line.get(org.apache.ambari.TestJobHistoryParsing.ADJ));\n    org.apache.ambari.eventdb.model.WorkflowContext context \u003d org.apache.ambari.log4j.hadoop.mapreduce.jobhistory.MapReduceJobHistoryUpdater.buildWorkflowContext(event);\n    junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowId\", workflowId, context.getWorkflowId());\n    junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowName\", workflowName, context.getWorkflowName());\n    junit.framework.Assert.assertEquals(\"Didn\u0027t recover workflowNodeName\", workflowNodeName, context.getWorkflowEntityName());\n    junit.framework.Assert.assertEquals(\"Got incorrect number of adjacencies\", adjacencies.size(), context.getWorkflowDag().getEntries().size());\n    for (org.apache.ambari.eventdb.model.WorkflowDag.WorkflowDagEntry entry : context.getWorkflowDag().getEntries()) {\n        java.lang.String[] sTargets \u003d adjacencies.get(entry.getSource());\n        junit.framework.Assert.assertNotNull(\"No original targets for \" + entry.getSource(), sTargets);\n        java.util.List\u003cjava.lang.String\u003e dTargets \u003d entry.getTargets();\n        junit.framework.Assert.assertEquals(\"Got incorrect number of targets for \" + entry.getSource(), sTargets.length, dTargets.size());\n        for (int i \u003d 0; i \u003c sTargets.length; i++) {\n            junit.framework.Assert.assertEquals(\"Got incorrect target for \" + entry.getSource(), sTargets[i], dTargets.get(i));\n        }\n    }\n}",
        "assertionType": "assertEquals(, assertEquals(, assertEquals(, assertEquals(, assertNotNull(, assertEquals(, assertEquals(",
        "assertionLines": [
          8,
          9,
          10,
          11,
          14,
          16,
          18
        ]
      }
    ],
    "refactorings": "# Refactorings in commit 36d646ee25536c2584f7e5e94fdaf8637b7066d3\n\n- Extract Method\tprivate addServiceCheckAction(actionRequest ActionRequest, stage Stage) : void extracted from public createActions(request Set\u003cActionRequest\u003e) : RequestStatusResponse in class org.apache.ambari.server.controller.AmbariManagementControllerImpl\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 2000) to @javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getDisksInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getOsInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getHostAttributes() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Move Method\tpublic getStartTime() : long from class org.apache.ambari.server.state.job.NewJobEvent to public getStartTime() : long from class org.apache.ambari.eventdb.model.Workflows.WorkflowDBEntry\n\n"
  },
  {
    "methodSignature": "org.apache.ambari.TestJobHistoryParsing$ParsedLine#get(java.lang.String)",
    "versions": [
      {
        "commitId": "current",
        "changeType": "ADDED",
        "body": "protected java.lang.String get(java.lang.String key) {\n    return props.get(key);\n}",
        "assertionType": "No Assertions",
        "assertionLines": []
      }
    ],
    "refactorings": "# Refactorings in commit 36d646ee25536c2584f7e5e94fdaf8637b7066d3\n\n- Extract Method\tprivate addServiceCheckAction(actionRequest ActionRequest, stage Stage) : void extracted from public createActions(request Set\u003cActionRequest\u003e) : RequestStatusResponse in class org.apache.ambari.server.controller.AmbariManagementControllerImpl\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 2000) to @javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getDisksInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getOsInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getHostAttributes() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Move Method\tpublic getStartTime() : long from class org.apache.ambari.server.state.job.NewJobEvent to public getStartTime() : long from class org.apache.ambari.eventdb.model.Workflows.WorkflowDBEntry\n\n"
  },
  {
    "methodSignature": "org.apache.ambari.TestJobHistoryParsing$ParsedLine#getType()",
    "versions": [
      {
        "commitId": "current",
        "changeType": "ADDED",
        "body": "protected java.lang.String getType() {\n    return type;\n}",
        "assertionType": "No Assertions",
        "assertionLines": []
      }
    ],
    "refactorings": "# Refactorings in commit 36d646ee25536c2584f7e5e94fdaf8637b7066d3\n\n- Extract Method\tprivate addServiceCheckAction(actionRequest ActionRequest, stage Stage) : void extracted from public createActions(request Set\u003cActionRequest\u003e) : RequestStatusResponse in class org.apache.ambari.server.controller.AmbariManagementControllerImpl\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 2000) to @javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getDisksInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getOsInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getHostAttributes() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Move Method\tpublic getStartTime() : long from class org.apache.ambari.server.state.job.NewJobEvent to public getStartTime() : long from class org.apache.ambari.eventdb.model.Workflows.WorkflowDBEntry\n\n"
  },
  {
    "methodSignature": "org.apache.ambari.TestJobHistoryParsing#setProperties(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,java.lang.String,java.util.Map)",
    "versions": [
      {
        "commitId": "current",
        "changeType": "ADDED",
        "body": "private static void setProperties(org.apache.hadoop.conf.Configuration conf, java.lang.String workflowId, java.lang.String workflowName, java.lang.String workflowNodeName, java.util.Map\u003cjava.lang.String, java.lang.String[]\u003e adj) {\n    conf.set(org.apache.ambari.TestJobHistoryParsing.ID_PROP, workflowId);\n    conf.set(org.apache.ambari.TestJobHistoryParsing.NAME_PROP, workflowName);\n    conf.set(org.apache.ambari.TestJobHistoryParsing.NODE_PROP, workflowNodeName);\n    for (java.util.Map.Entry\u003cjava.lang.String, java.lang.String[]\u003e entry : adj.entrySet()) {\n        conf.setStrings((org.apache.ambari.TestJobHistoryParsing.ADJ_PROP + \".\") + entry.getKey(), entry.getValue());\n    }\n}",
        "assertionType": "No Assertions",
        "assertionLines": []
      }
    ],
    "refactorings": "# Refactorings in commit 36d646ee25536c2584f7e5e94fdaf8637b7066d3\n\n- Extract Method\tprivate addServiceCheckAction(actionRequest ActionRequest, stage Stage) : void extracted from public createActions(request Set\u003cActionRequest\u003e) : RequestStatusResponse in class org.apache.ambari.server.controller.AmbariManagementControllerImpl\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 2000) to @javax.persistence.Column(name \u003d \"disks_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getDisksInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"os_info\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getOsInfo() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Modify Method Annotation\t@javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true) to @javax.persistence.Column(name \u003d \"host_attributes\", nullable \u003d false, insertable \u003d true, updatable \u003d true, length \u003d 20000) in method public getHostAttributes() : String from class org.apache.ambari.server.orm.entities.HostEntity\n\n- Move Method\tpublic getStartTime() : long from class org.apache.ambari.server.state.job.NewJobEvent to public getStartTime() : long from class org.apache.ambari.eventdb.model.Workflows.WorkflowDBEntry\n\n"
  }
]